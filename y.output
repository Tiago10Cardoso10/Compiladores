Terminals unused in grammar

    RESERVED


State 38 conflicts: 1 shift/reduce
State 52 conflicts: 18 shift/reduce
State 119 conflicts: 1 shift/reduce


Grammar

    0 $accept: FunctionsAndDeclarations $end

    1 FunctionsAndDeclarations: FunctionAndDeclarations2
    2                         | FunctionsAndDeclarations FunctionAndDeclarations2

    3 FunctionAndDeclarations2: FunctionDefinition
    4                         | FunctionDeclaration
    5                         | Declaration

    6 FunctionDefinition: TypeSpec FunctionDeclarator FunctionBody

    7 FunctionBody: LBRACE DeclarationAndStatement2 RBRACE

    8 DeclarationAndStatement2: DeclarationsAndStatement

    9 DeclarationsAndStatement: Statement DeclarationsAndStatement
   10                         | Declaration DeclarationsAndStatement
   11                         | Statement
   12                         | Declaration

   13 FunctionDeclaration: TypeSpec FunctionDeclarator SEMI

   14 FunctionDeclarator: IDENTIFIER LPAR ParameterList RPAR

   15 ParameterList: ParameterDeclaration
   16              | ParameterList COMMA ParameterDeclaration

   17 ParameterDeclaration: TypeSpec IDENTIFIER
   18                     | TypeSpec

   19 Declaration: TypeSpec Declaration2 SEMI

   20 Declaration2: Declarator
   21             | Declaration2 COMMA Declarator

   22 TypeSpec: CHAR
   23         | INT
   24         | VOID
   25         | SHORT
   26         | DOUBLE

   27 Declarator: IDENTIFIER
   28           | IDENTIFIER ASSIGN Expr

   29 Statement: SEMI
   30          | Expr SEMI
   31          | Statement2 RBRACE
   32          | IF LPAR Expr RPAR Statement
   33          | IF LPAR Expr RPAR Statement ELSE Statement
   34          | WHILE LPAR Expr RPAR Statement
   35          | RETURN SEMI
   36          | RETURN Expr SEMI

   37 Statement2: LBRACE
   38           | LBRACE Statement2 Statement

   39 Expr: Expr ASSIGN Expr
   40     | Expr COMMA Expr
   41     | Expr PLUS Expr
   42     | Expr MINUS Expr
   43     | Expr MUL Expr
   44     | Expr DIV Expr
   45     | Expr MOD Expr
   46     | Expr OR Expr
   47     | Expr AND Expr
   48     | Expr BITWISEAND Expr
   49     | Expr BITWISEOR Expr
   50     | Expr BITWISEXOR Expr
   51     | Expr EQ Expr
   52     | Expr NE Expr
   53     | Expr LE Expr
   54     | Expr GE Expr
   55     | Expr LT Expr
   56     | Expr GT Expr
   57     | PLUS Expr
   58     | MINUS Expr2
   59     | NOT Expr
   60     | IDENTIFIER LPAR RPAR
   61     | IDENTIFIER LPAR Expr2 RPAR
   62     | IDENTIFIER
   63     | NATURAL
   64     | CHRLIT
   65     | DECIMAL
   66     | LPAR Expr RPAR

   67 Expr2: Expr
   68      | Expr2 COMMA Expr


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PLUS (258) 41 57
    MINUS (259) 42 58
    MUL (260) 43
    DIV (261) 44
    ASSIGN (262) 28 39
    COMMA (263) 16 21 40 68
    SEMI (264) 13 19 29 30 35 36
    LPAR (265) 14 32 33 34 60 61 66
    RPAR (266) 14 32 33 34 60 61 66
    LBRACE (267) 7 37 38
    RBRACE (268) 7 31
    CHAR (269) 22
    INT (270) 23
    VOID (271) 24
    SHORT (272) 25
    DOUBLE (273) 26
    IF (274) 32 33
    ELSE (275) 33
    WHILE (276) 34
    RETURN (277) 35 36
    RESERVED <v> (278)
    IDENTIFIER <v> (279) 14 17 27 28 60 61 62
    NATURAL <v> (280) 63
    DECIMAL <v> (281) 65
    CHRLIT <v> (282) 64
    OR (283) 46
    AND (284) 47
    BITWISEOR (285) 49
    BITWISEXOR (286) 50
    BITWISEAND (287) 48
    EQ (288) 51
    NE (289) 52
    LT (290) 55
    GT (291) 56
    LE (292) 53
    GE (293) 54
    MOD (294) 45
    NOT (295) 59


Nonterminals, with rules where they appear

    $accept (41)
        on left: 0
    FunctionsAndDeclarations <no> (42)
        on left: 1 2
        on right: 0 2
    FunctionAndDeclarations2 <no> (43)
        on left: 3 4 5
        on right: 1 2
    FunctionDefinition <no> (44)
        on left: 6
        on right: 3
    FunctionBody <no> (45)
        on left: 7
        on right: 6
    DeclarationAndStatement2 <no> (46)
        on left: 8
        on right: 7
    DeclarationsAndStatement <no> (47)
        on left: 9 10 11 12
        on right: 8 9 10
    FunctionDeclaration <no> (48)
        on left: 13
        on right: 4
    FunctionDeclarator <no> (49)
        on left: 14
        on right: 6 13
    ParameterList <no> (50)
        on left: 15 16
        on right: 14 16
    ParameterDeclaration <no> (51)
        on left: 17 18
        on right: 15 16
    Declaration <no> (52)
        on left: 19
        on right: 5 10 12
    Declaration2 <no> (53)
        on left: 20 21
        on right: 19 21
    TypeSpec <no> (54)
        on left: 22 23 24 25 26
        on right: 6 13 17 18 19
    Declarator <no> (55)
        on left: 27 28
        on right: 20 21
    Statement <no> (56)
        on left: 29 30 31 32 33 34 35 36
        on right: 9 11 32 33 34 38
    Statement2 <no> (57)
        on left: 37 38
        on right: 31 38
    Expr <no> (58)
        on left: 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66
        on right: 28 30 32 33 34 36 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 59 66 67 68
    Expr2 <no> (59)
        on left: 67 68
        on right: 58 61 68


State 0

    0 $accept: • FunctionsAndDeclarations $end

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    VOID    shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5

    FunctionsAndDeclarations  go to state 6
    FunctionAndDeclarations2  go to state 7
    FunctionDefinition        go to state 8
    FunctionDeclaration       go to state 9
    Declaration               go to state 10
    TypeSpec                  go to state 11


State 1

   22 TypeSpec: CHAR •

    $default  reduce using rule 22 (TypeSpec)


State 2

   23 TypeSpec: INT •

    $default  reduce using rule 23 (TypeSpec)


State 3

   24 TypeSpec: VOID •

    $default  reduce using rule 24 (TypeSpec)


State 4

   25 TypeSpec: SHORT •

    $default  reduce using rule 25 (TypeSpec)


State 5

   26 TypeSpec: DOUBLE •

    $default  reduce using rule 26 (TypeSpec)


State 6

    0 $accept: FunctionsAndDeclarations • $end
    2 FunctionsAndDeclarations: FunctionsAndDeclarations • FunctionAndDeclarations2

    $end    shift, and go to state 12
    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    VOID    shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5

    FunctionAndDeclarations2  go to state 13
    FunctionDefinition        go to state 8
    FunctionDeclaration       go to state 9
    Declaration               go to state 10
    TypeSpec                  go to state 11


State 7

    1 FunctionsAndDeclarations: FunctionAndDeclarations2 •

    $default  reduce using rule 1 (FunctionsAndDeclarations)


State 8

    3 FunctionAndDeclarations2: FunctionDefinition •

    $default  reduce using rule 3 (FunctionAndDeclarations2)


State 9

    4 FunctionAndDeclarations2: FunctionDeclaration •

    $default  reduce using rule 4 (FunctionAndDeclarations2)


State 10

    5 FunctionAndDeclarations2: Declaration •

    $default  reduce using rule 5 (FunctionAndDeclarations2)


State 11

    6 FunctionDefinition: TypeSpec • FunctionDeclarator FunctionBody
   13 FunctionDeclaration: TypeSpec • FunctionDeclarator SEMI
   19 Declaration: TypeSpec • Declaration2 SEMI

    IDENTIFIER  shift, and go to state 14

    FunctionDeclarator  go to state 15
    Declaration2        go to state 16
    Declarator          go to state 17


State 12

    0 $accept: FunctionsAndDeclarations $end •

    $default  accept


State 13

    2 FunctionsAndDeclarations: FunctionsAndDeclarations FunctionAndDeclarations2 •

    $default  reduce using rule 2 (FunctionsAndDeclarations)


State 14

   14 FunctionDeclarator: IDENTIFIER • LPAR ParameterList RPAR
   27 Declarator: IDENTIFIER •
   28           | IDENTIFIER • ASSIGN Expr

    ASSIGN  shift, and go to state 18
    LPAR    shift, and go to state 19

    $default  reduce using rule 27 (Declarator)


State 15

    6 FunctionDefinition: TypeSpec FunctionDeclarator • FunctionBody
   13 FunctionDeclaration: TypeSpec FunctionDeclarator • SEMI

    SEMI    shift, and go to state 20
    LBRACE  shift, and go to state 21

    FunctionBody  go to state 22


State 16

   19 Declaration: TypeSpec Declaration2 • SEMI
   21 Declaration2: Declaration2 • COMMA Declarator

    COMMA  shift, and go to state 23
    SEMI   shift, and go to state 24


State 17

   20 Declaration2: Declarator •

    $default  reduce using rule 20 (Declaration2)


State 18

   28 Declarator: IDENTIFIER ASSIGN • Expr

    PLUS        shift, and go to state 25
    MINUS       shift, and go to state 26
    LPAR        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    NATURAL     shift, and go to state 29
    DECIMAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    NOT         shift, and go to state 32

    Expr  go to state 33


State 19

   14 FunctionDeclarator: IDENTIFIER LPAR • ParameterList RPAR

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    VOID    shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5

    ParameterList         go to state 34
    ParameterDeclaration  go to state 35
    TypeSpec              go to state 36


State 20

   13 FunctionDeclaration: TypeSpec FunctionDeclarator SEMI •

    $default  reduce using rule 13 (FunctionDeclaration)


State 21

    7 FunctionBody: LBRACE • DeclarationAndStatement2 RBRACE

    PLUS        shift, and go to state 25
    MINUS       shift, and go to state 26
    SEMI        shift, and go to state 37
    LPAR        shift, and go to state 27
    LBRACE      shift, and go to state 38
    CHAR        shift, and go to state 1
    INT         shift, and go to state 2
    VOID        shift, and go to state 3
    SHORT       shift, and go to state 4
    DOUBLE      shift, and go to state 5
    IF          shift, and go to state 39
    WHILE       shift, and go to state 40
    RETURN      shift, and go to state 41
    IDENTIFIER  shift, and go to state 28
    NATURAL     shift, and go to state 29
    DECIMAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    NOT         shift, and go to state 32

    DeclarationAndStatement2  go to state 42
    DeclarationsAndStatement  go to state 43
    Declaration               go to state 44
    TypeSpec                  go to state 45
    Statement                 go to state 46
    Statement2                go to state 47
    Expr                      go to state 48


State 22

    6 FunctionDefinition: TypeSpec FunctionDeclarator FunctionBody •

    $default  reduce using rule 6 (FunctionDefinition)


State 23

   21 Declaration2: Declaration2 COMMA • Declarator

    IDENTIFIER  shift, and go to state 49

    Declarator  go to state 50


State 24

   19 Declaration: TypeSpec Declaration2 SEMI •

    $default  reduce using rule 19 (Declaration)


State 25

   57 Expr: PLUS • Expr

    PLUS        shift, and go to state 25
    MINUS       shift, and go to state 26
    LPAR        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    NATURAL     shift, and go to state 29
    DECIMAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    NOT         shift, and go to state 32

    Expr  go to state 51


State 26

   58 Expr: MINUS • Expr2

    PLUS        shift, and go to state 25
    MINUS       shift, and go to state 26
    LPAR        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    NATURAL     shift, and go to state 29
    DECIMAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    NOT         shift, and go to state 32

    Expr   go to state 52
    Expr2  go to state 53


State 27

   66 Expr: LPAR • Expr RPAR

    PLUS        shift, and go to state 25
    MINUS       shift, and go to state 26
    LPAR        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    NATURAL     shift, and go to state 29
    DECIMAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    NOT         shift, and go to state 32

    Expr  go to state 54


State 28

   60 Expr: IDENTIFIER • LPAR RPAR
   61     | IDENTIFIER • LPAR Expr2 RPAR
   62     | IDENTIFIER •

    LPAR  shift, and go to state 55

    $default  reduce using rule 62 (Expr)


State 29

   63 Expr: NATURAL •

    $default  reduce using rule 63 (Expr)


State 30

   65 Expr: DECIMAL •

    $default  reduce using rule 65 (Expr)


State 31

   64 Expr: CHRLIT •

    $default  reduce using rule 64 (Expr)


State 32

   59 Expr: NOT • Expr

    PLUS        shift, and go to state 25
    MINUS       shift, and go to state 26
    LPAR        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    NATURAL     shift, and go to state 29
    DECIMAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    NOT         shift, and go to state 32

    Expr  go to state 56


State 33

   28 Declarator: IDENTIFIER ASSIGN Expr •
   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr

    PLUS        shift, and go to state 57
    MINUS       shift, and go to state 58
    MUL         shift, and go to state 59
    DIV         shift, and go to state 60
    ASSIGN      shift, and go to state 61
    OR          shift, and go to state 63
    AND         shift, and go to state 64
    BITWISEOR   shift, and go to state 65
    BITWISEXOR  shift, and go to state 66
    BITWISEAND  shift, and go to state 67
    EQ          shift, and go to state 68
    NE          shift, and go to state 69
    LT          shift, and go to state 70
    GT          shift, and go to state 71
    LE          shift, and go to state 72
    GE          shift, and go to state 73
    MOD         shift, and go to state 74

    $default  reduce using rule 28 (Declarator)


State 34

   14 FunctionDeclarator: IDENTIFIER LPAR ParameterList • RPAR
   16 ParameterList: ParameterList • COMMA ParameterDeclaration

    COMMA  shift, and go to state 75
    RPAR   shift, and go to state 76


State 35

   15 ParameterList: ParameterDeclaration •

    $default  reduce using rule 15 (ParameterList)


State 36

   17 ParameterDeclaration: TypeSpec • IDENTIFIER
   18                     | TypeSpec •

    IDENTIFIER  shift, and go to state 77

    $default  reduce using rule 18 (ParameterDeclaration)


State 37

   29 Statement: SEMI •

    $default  reduce using rule 29 (Statement)


State 38

   37 Statement2: LBRACE •
   38           | LBRACE • Statement2 Statement

    LBRACE  shift, and go to state 38

    LBRACE    [reduce using rule 37 (Statement2)]
    $default  reduce using rule 37 (Statement2)

    Statement2  go to state 78


State 39

   32 Statement: IF • LPAR Expr RPAR Statement
   33          | IF • LPAR Expr RPAR Statement ELSE Statement

    LPAR  shift, and go to state 79


State 40

   34 Statement: WHILE • LPAR Expr RPAR Statement

    LPAR  shift, and go to state 80


State 41

   35 Statement: RETURN • SEMI
   36          | RETURN • Expr SEMI

    PLUS        shift, and go to state 25
    MINUS       shift, and go to state 26
    SEMI        shift, and go to state 81
    LPAR        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    NATURAL     shift, and go to state 29
    DECIMAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    NOT         shift, and go to state 32

    Expr  go to state 82


State 42

    7 FunctionBody: LBRACE DeclarationAndStatement2 • RBRACE

    RBRACE  shift, and go to state 83


State 43

    8 DeclarationAndStatement2: DeclarationsAndStatement •

    $default  reduce using rule 8 (DeclarationAndStatement2)


State 44

   10 DeclarationsAndStatement: Declaration • DeclarationsAndStatement
   12                         | Declaration •

    PLUS        shift, and go to state 25
    MINUS       shift, and go to state 26
    SEMI        shift, and go to state 37
    LPAR        shift, and go to state 27
    LBRACE      shift, and go to state 38
    CHAR        shift, and go to state 1
    INT         shift, and go to state 2
    VOID        shift, and go to state 3
    SHORT       shift, and go to state 4
    DOUBLE      shift, and go to state 5
    IF          shift, and go to state 39
    WHILE       shift, and go to state 40
    RETURN      shift, and go to state 41
    IDENTIFIER  shift, and go to state 28
    NATURAL     shift, and go to state 29
    DECIMAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    NOT         shift, and go to state 32

    $default  reduce using rule 12 (DeclarationsAndStatement)

    DeclarationsAndStatement  go to state 84
    Declaration               go to state 44
    TypeSpec                  go to state 45
    Statement                 go to state 46
    Statement2                go to state 47
    Expr                      go to state 48


State 45

   19 Declaration: TypeSpec • Declaration2 SEMI

    IDENTIFIER  shift, and go to state 49

    Declaration2  go to state 16
    Declarator    go to state 17


State 46

    9 DeclarationsAndStatement: Statement • DeclarationsAndStatement
   11                         | Statement •

    PLUS        shift, and go to state 25
    MINUS       shift, and go to state 26
    SEMI        shift, and go to state 37
    LPAR        shift, and go to state 27
    LBRACE      shift, and go to state 38
    CHAR        shift, and go to state 1
    INT         shift, and go to state 2
    VOID        shift, and go to state 3
    SHORT       shift, and go to state 4
    DOUBLE      shift, and go to state 5
    IF          shift, and go to state 39
    WHILE       shift, and go to state 40
    RETURN      shift, and go to state 41
    IDENTIFIER  shift, and go to state 28
    NATURAL     shift, and go to state 29
    DECIMAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    NOT         shift, and go to state 32

    $default  reduce using rule 11 (DeclarationsAndStatement)

    DeclarationsAndStatement  go to state 85
    Declaration               go to state 44
    TypeSpec                  go to state 45
    Statement                 go to state 46
    Statement2                go to state 47
    Expr                      go to state 48


State 47

   31 Statement: Statement2 • RBRACE

    RBRACE  shift, and go to state 86


State 48

   30 Statement: Expr • SEMI
   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr

    PLUS        shift, and go to state 57
    MINUS       shift, and go to state 58
    MUL         shift, and go to state 59
    DIV         shift, and go to state 60
    ASSIGN      shift, and go to state 61
    COMMA       shift, and go to state 62
    SEMI        shift, and go to state 87
    OR          shift, and go to state 63
    AND         shift, and go to state 64
    BITWISEOR   shift, and go to state 65
    BITWISEXOR  shift, and go to state 66
    BITWISEAND  shift, and go to state 67
    EQ          shift, and go to state 68
    NE          shift, and go to state 69
    LT          shift, and go to state 70
    GT          shift, and go to state 71
    LE          shift, and go to state 72
    GE          shift, and go to state 73
    MOD         shift, and go to state 74


State 49

   27 Declarator: IDENTIFIER •
   28           | IDENTIFIER • ASSIGN Expr

    ASSIGN  shift, and go to state 18

    $default  reduce using rule 27 (Declarator)


State 50

   21 Declaration2: Declaration2 COMMA Declarator •

    $default  reduce using rule 21 (Declaration2)


State 51

   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr
   57     | PLUS Expr •

    MUL     shift, and go to state 59
    DIV     shift, and go to state 60
    ASSIGN  shift, and go to state 61
    MOD     shift, and go to state 74

    $default  reduce using rule 57 (Expr)


State 52

   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr
   67 Expr2: Expr •

    PLUS        shift, and go to state 57
    MINUS       shift, and go to state 58
    MUL         shift, and go to state 59
    DIV         shift, and go to state 60
    ASSIGN      shift, and go to state 61
    COMMA       shift, and go to state 62
    OR          shift, and go to state 63
    AND         shift, and go to state 64
    BITWISEOR   shift, and go to state 65
    BITWISEXOR  shift, and go to state 66
    BITWISEAND  shift, and go to state 67
    EQ          shift, and go to state 68
    NE          shift, and go to state 69
    LT          shift, and go to state 70
    GT          shift, and go to state 71
    LE          shift, and go to state 72
    GE          shift, and go to state 73
    MOD         shift, and go to state 74

    PLUS        [reduce using rule 67 (Expr2)]
    MINUS       [reduce using rule 67 (Expr2)]
    MUL         [reduce using rule 67 (Expr2)]
    DIV         [reduce using rule 67 (Expr2)]
    ASSIGN      [reduce using rule 67 (Expr2)]
    COMMA       [reduce using rule 67 (Expr2)]
    OR          [reduce using rule 67 (Expr2)]
    AND         [reduce using rule 67 (Expr2)]
    BITWISEOR   [reduce using rule 67 (Expr2)]
    BITWISEXOR  [reduce using rule 67 (Expr2)]
    BITWISEAND  [reduce using rule 67 (Expr2)]
    EQ          [reduce using rule 67 (Expr2)]
    NE          [reduce using rule 67 (Expr2)]
    LT          [reduce using rule 67 (Expr2)]
    GT          [reduce using rule 67 (Expr2)]
    LE          [reduce using rule 67 (Expr2)]
    GE          [reduce using rule 67 (Expr2)]
    MOD         [reduce using rule 67 (Expr2)]
    $default    reduce using rule 67 (Expr2)


State 53

   58 Expr: MINUS Expr2 •
   68 Expr2: Expr2 • COMMA Expr

    $default  reduce using rule 58 (Expr)


State 54

   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr
   66     | LPAR Expr • RPAR

    PLUS        shift, and go to state 57
    MINUS       shift, and go to state 58
    MUL         shift, and go to state 59
    DIV         shift, and go to state 60
    ASSIGN      shift, and go to state 61
    COMMA       shift, and go to state 62
    RPAR        shift, and go to state 89
    OR          shift, and go to state 63
    AND         shift, and go to state 64
    BITWISEOR   shift, and go to state 65
    BITWISEXOR  shift, and go to state 66
    BITWISEAND  shift, and go to state 67
    EQ          shift, and go to state 68
    NE          shift, and go to state 69
    LT          shift, and go to state 70
    GT          shift, and go to state 71
    LE          shift, and go to state 72
    GE          shift, and go to state 73
    MOD         shift, and go to state 74


State 55

   60 Expr: IDENTIFIER LPAR • RPAR
   61     | IDENTIFIER LPAR • Expr2 RPAR

    PLUS        shift, and go to state 25
    MINUS       shift, and go to state 26
    LPAR        shift, and go to state 27
    RPAR        shift, and go to state 90
    IDENTIFIER  shift, and go to state 28
    NATURAL     shift, and go to state 29
    DECIMAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    NOT         shift, and go to state 32

    Expr   go to state 52
    Expr2  go to state 91


State 56

   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr
   59     | NOT Expr •

    ASSIGN  shift, and go to state 61

    $default  reduce using rule 59 (Expr)


State 57

   41 Expr: Expr PLUS • Expr

    PLUS        shift, and go to state 25
    MINUS       shift, and go to state 26
    LPAR        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    NATURAL     shift, and go to state 29
    DECIMAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    NOT         shift, and go to state 32

    Expr  go to state 92


State 58

   42 Expr: Expr MINUS • Expr

    PLUS        shift, and go to state 25
    MINUS       shift, and go to state 26
    LPAR        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    NATURAL     shift, and go to state 29
    DECIMAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    NOT         shift, and go to state 32

    Expr  go to state 93


State 59

   43 Expr: Expr MUL • Expr

    PLUS        shift, and go to state 25
    MINUS       shift, and go to state 26
    LPAR        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    NATURAL     shift, and go to state 29
    DECIMAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    NOT         shift, and go to state 32

    Expr  go to state 94


State 60

   44 Expr: Expr DIV • Expr

    PLUS        shift, and go to state 25
    MINUS       shift, and go to state 26
    LPAR        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    NATURAL     shift, and go to state 29
    DECIMAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    NOT         shift, and go to state 32

    Expr  go to state 95


State 61

   39 Expr: Expr ASSIGN • Expr

    PLUS        shift, and go to state 25
    MINUS       shift, and go to state 26
    LPAR        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    NATURAL     shift, and go to state 29
    DECIMAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    NOT         shift, and go to state 32

    Expr  go to state 96


State 62

   40 Expr: Expr COMMA • Expr

    PLUS        shift, and go to state 25
    MINUS       shift, and go to state 26
    LPAR        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    NATURAL     shift, and go to state 29
    DECIMAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    NOT         shift, and go to state 32

    Expr  go to state 97


State 63

   46 Expr: Expr OR • Expr

    PLUS        shift, and go to state 25
    MINUS       shift, and go to state 26
    LPAR        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    NATURAL     shift, and go to state 29
    DECIMAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    NOT         shift, and go to state 32

    Expr  go to state 98


State 64

   47 Expr: Expr AND • Expr

    PLUS        shift, and go to state 25
    MINUS       shift, and go to state 26
    LPAR        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    NATURAL     shift, and go to state 29
    DECIMAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    NOT         shift, and go to state 32

    Expr  go to state 99


State 65

   49 Expr: Expr BITWISEOR • Expr

    PLUS        shift, and go to state 25
    MINUS       shift, and go to state 26
    LPAR        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    NATURAL     shift, and go to state 29
    DECIMAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    NOT         shift, and go to state 32

    Expr  go to state 100


State 66

   50 Expr: Expr BITWISEXOR • Expr

    PLUS        shift, and go to state 25
    MINUS       shift, and go to state 26
    LPAR        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    NATURAL     shift, and go to state 29
    DECIMAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    NOT         shift, and go to state 32

    Expr  go to state 101


State 67

   48 Expr: Expr BITWISEAND • Expr

    PLUS        shift, and go to state 25
    MINUS       shift, and go to state 26
    LPAR        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    NATURAL     shift, and go to state 29
    DECIMAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    NOT         shift, and go to state 32

    Expr  go to state 102


State 68

   51 Expr: Expr EQ • Expr

    PLUS        shift, and go to state 25
    MINUS       shift, and go to state 26
    LPAR        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    NATURAL     shift, and go to state 29
    DECIMAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    NOT         shift, and go to state 32

    Expr  go to state 103


State 69

   52 Expr: Expr NE • Expr

    PLUS        shift, and go to state 25
    MINUS       shift, and go to state 26
    LPAR        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    NATURAL     shift, and go to state 29
    DECIMAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    NOT         shift, and go to state 32

    Expr  go to state 104


State 70

   55 Expr: Expr LT • Expr

    PLUS        shift, and go to state 25
    MINUS       shift, and go to state 26
    LPAR        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    NATURAL     shift, and go to state 29
    DECIMAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    NOT         shift, and go to state 32

    Expr  go to state 105


State 71

   56 Expr: Expr GT • Expr

    PLUS        shift, and go to state 25
    MINUS       shift, and go to state 26
    LPAR        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    NATURAL     shift, and go to state 29
    DECIMAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    NOT         shift, and go to state 32

    Expr  go to state 106


State 72

   53 Expr: Expr LE • Expr

    PLUS        shift, and go to state 25
    MINUS       shift, and go to state 26
    LPAR        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    NATURAL     shift, and go to state 29
    DECIMAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    NOT         shift, and go to state 32

    Expr  go to state 107


State 73

   54 Expr: Expr GE • Expr

    PLUS        shift, and go to state 25
    MINUS       shift, and go to state 26
    LPAR        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    NATURAL     shift, and go to state 29
    DECIMAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    NOT         shift, and go to state 32

    Expr  go to state 108


State 74

   45 Expr: Expr MOD • Expr

    PLUS        shift, and go to state 25
    MINUS       shift, and go to state 26
    LPAR        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    NATURAL     shift, and go to state 29
    DECIMAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    NOT         shift, and go to state 32

    Expr  go to state 109


State 75

   16 ParameterList: ParameterList COMMA • ParameterDeclaration

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    VOID    shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5

    ParameterDeclaration  go to state 110
    TypeSpec              go to state 36


State 76

   14 FunctionDeclarator: IDENTIFIER LPAR ParameterList RPAR •

    $default  reduce using rule 14 (FunctionDeclarator)


State 77

   17 ParameterDeclaration: TypeSpec IDENTIFIER •

    $default  reduce using rule 17 (ParameterDeclaration)


State 78

   38 Statement2: LBRACE Statement2 • Statement

    PLUS        shift, and go to state 25
    MINUS       shift, and go to state 26
    SEMI        shift, and go to state 37
    LPAR        shift, and go to state 27
    LBRACE      shift, and go to state 38
    IF          shift, and go to state 39
    WHILE       shift, and go to state 40
    RETURN      shift, and go to state 41
    IDENTIFIER  shift, and go to state 28
    NATURAL     shift, and go to state 29
    DECIMAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    NOT         shift, and go to state 32

    Statement   go to state 111
    Statement2  go to state 47
    Expr        go to state 48


State 79

   32 Statement: IF LPAR • Expr RPAR Statement
   33          | IF LPAR • Expr RPAR Statement ELSE Statement

    PLUS        shift, and go to state 25
    MINUS       shift, and go to state 26
    LPAR        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    NATURAL     shift, and go to state 29
    DECIMAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    NOT         shift, and go to state 32

    Expr  go to state 112


State 80

   34 Statement: WHILE LPAR • Expr RPAR Statement

    PLUS        shift, and go to state 25
    MINUS       shift, and go to state 26
    LPAR        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    NATURAL     shift, and go to state 29
    DECIMAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    NOT         shift, and go to state 32

    Expr  go to state 113


State 81

   35 Statement: RETURN SEMI •

    $default  reduce using rule 35 (Statement)


State 82

   36 Statement: RETURN Expr • SEMI
   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr

    PLUS        shift, and go to state 57
    MINUS       shift, and go to state 58
    MUL         shift, and go to state 59
    DIV         shift, and go to state 60
    ASSIGN      shift, and go to state 61
    COMMA       shift, and go to state 62
    SEMI        shift, and go to state 114
    OR          shift, and go to state 63
    AND         shift, and go to state 64
    BITWISEOR   shift, and go to state 65
    BITWISEXOR  shift, and go to state 66
    BITWISEAND  shift, and go to state 67
    EQ          shift, and go to state 68
    NE          shift, and go to state 69
    LT          shift, and go to state 70
    GT          shift, and go to state 71
    LE          shift, and go to state 72
    GE          shift, and go to state 73
    MOD         shift, and go to state 74


State 83

    7 FunctionBody: LBRACE DeclarationAndStatement2 RBRACE •

    $default  reduce using rule 7 (FunctionBody)


State 84

   10 DeclarationsAndStatement: Declaration DeclarationsAndStatement •

    $default  reduce using rule 10 (DeclarationsAndStatement)


State 85

    9 DeclarationsAndStatement: Statement DeclarationsAndStatement •

    $default  reduce using rule 9 (DeclarationsAndStatement)


State 86

   31 Statement: Statement2 RBRACE •

    $default  reduce using rule 31 (Statement)


State 87

   30 Statement: Expr SEMI •

    $default  reduce using rule 30 (Statement)


State 88

   68 Expr2: Expr2 COMMA • Expr

    PLUS        shift, and go to state 25
    MINUS       shift, and go to state 26
    LPAR        shift, and go to state 27
    IDENTIFIER  shift, and go to state 28
    NATURAL     shift, and go to state 29
    DECIMAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    NOT         shift, and go to state 32

    Expr  go to state 115


State 89

   66 Expr: LPAR Expr RPAR •

    $default  reduce using rule 66 (Expr)


State 90

   60 Expr: IDENTIFIER LPAR RPAR •

    $default  reduce using rule 60 (Expr)


State 91

   61 Expr: IDENTIFIER LPAR Expr2 • RPAR
   68 Expr2: Expr2 • COMMA Expr

    COMMA  shift, and go to state 88
    RPAR   shift, and go to state 116


State 92

   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   41     | Expr PLUS Expr •
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr

    MUL     shift, and go to state 59
    DIV     shift, and go to state 60
    ASSIGN  shift, and go to state 61
    MOD     shift, and go to state 74

    $default  reduce using rule 41 (Expr)


State 93

   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   42     | Expr MINUS Expr •
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr

    MUL     shift, and go to state 59
    DIV     shift, and go to state 60
    ASSIGN  shift, and go to state 61
    MOD     shift, and go to state 74

    $default  reduce using rule 42 (Expr)


State 94

   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   43     | Expr MUL Expr •
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr

    ASSIGN  shift, and go to state 61

    $default  reduce using rule 43 (Expr)


State 95

   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   44     | Expr DIV Expr •
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr

    ASSIGN  shift, and go to state 61

    $default  reduce using rule 44 (Expr)


State 96

   39 Expr: Expr • ASSIGN Expr
   39     | Expr ASSIGN Expr •
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr

    ASSIGN  shift, and go to state 61

    $default  reduce using rule 39 (Expr)


State 97

   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   40     | Expr COMMA Expr •
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr

    PLUS        shift, and go to state 57
    MINUS       shift, and go to state 58
    MUL         shift, and go to state 59
    DIV         shift, and go to state 60
    ASSIGN      shift, and go to state 61
    OR          shift, and go to state 63
    AND         shift, and go to state 64
    BITWISEOR   shift, and go to state 65
    BITWISEXOR  shift, and go to state 66
    BITWISEAND  shift, and go to state 67
    EQ          shift, and go to state 68
    NE          shift, and go to state 69
    LT          shift, and go to state 70
    GT          shift, and go to state 71
    LE          shift, and go to state 72
    GE          shift, and go to state 73
    MOD         shift, and go to state 74

    $default  reduce using rule 40 (Expr)


State 98

   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   46     | Expr OR Expr •
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr

    PLUS        shift, and go to state 57
    MINUS       shift, and go to state 58
    MUL         shift, and go to state 59
    DIV         shift, and go to state 60
    ASSIGN      shift, and go to state 61
    AND         shift, and go to state 64
    BITWISEOR   shift, and go to state 65
    BITWISEXOR  shift, and go to state 66
    BITWISEAND  shift, and go to state 67
    EQ          shift, and go to state 68
    NE          shift, and go to state 69
    LT          shift, and go to state 70
    GT          shift, and go to state 71
    LE          shift, and go to state 72
    GE          shift, and go to state 73
    MOD         shift, and go to state 74

    $default  reduce using rule 46 (Expr)


State 99

   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   47     | Expr AND Expr •
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr

    PLUS        shift, and go to state 57
    MINUS       shift, and go to state 58
    MUL         shift, and go to state 59
    DIV         shift, and go to state 60
    ASSIGN      shift, and go to state 61
    BITWISEOR   shift, and go to state 65
    BITWISEXOR  shift, and go to state 66
    BITWISEAND  shift, and go to state 67
    EQ          shift, and go to state 68
    NE          shift, and go to state 69
    LT          shift, and go to state 70
    GT          shift, and go to state 71
    LE          shift, and go to state 72
    GE          shift, and go to state 73
    MOD         shift, and go to state 74

    $default  reduce using rule 47 (Expr)


State 100

   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   49     | Expr BITWISEOR Expr •
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr

    PLUS        shift, and go to state 57
    MINUS       shift, and go to state 58
    MUL         shift, and go to state 59
    DIV         shift, and go to state 60
    ASSIGN      shift, and go to state 61
    BITWISEXOR  shift, and go to state 66
    BITWISEAND  shift, and go to state 67
    EQ          shift, and go to state 68
    NE          shift, and go to state 69
    LT          shift, and go to state 70
    GT          shift, and go to state 71
    LE          shift, and go to state 72
    GE          shift, and go to state 73
    MOD         shift, and go to state 74

    $default  reduce using rule 49 (Expr)


State 101

   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   50     | Expr BITWISEXOR Expr •
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr

    PLUS        shift, and go to state 57
    MINUS       shift, and go to state 58
    MUL         shift, and go to state 59
    DIV         shift, and go to state 60
    ASSIGN      shift, and go to state 61
    BITWISEAND  shift, and go to state 67
    EQ          shift, and go to state 68
    NE          shift, and go to state 69
    LT          shift, and go to state 70
    GT          shift, and go to state 71
    LE          shift, and go to state 72
    GE          shift, and go to state 73
    MOD         shift, and go to state 74

    $default  reduce using rule 50 (Expr)


State 102

   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   48     | Expr BITWISEAND Expr •
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr

    PLUS    shift, and go to state 57
    MINUS   shift, and go to state 58
    MUL     shift, and go to state 59
    DIV     shift, and go to state 60
    ASSIGN  shift, and go to state 61
    EQ      shift, and go to state 68
    NE      shift, and go to state 69
    LT      shift, and go to state 70
    GT      shift, and go to state 71
    LE      shift, and go to state 72
    GE      shift, and go to state 73
    MOD     shift, and go to state 74

    $default  reduce using rule 48 (Expr)


State 103

   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   51     | Expr EQ Expr •
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr

    PLUS    shift, and go to state 57
    MINUS   shift, and go to state 58
    MUL     shift, and go to state 59
    DIV     shift, and go to state 60
    ASSIGN  shift, and go to state 61
    LT      shift, and go to state 70
    GT      shift, and go to state 71
    LE      shift, and go to state 72
    GE      shift, and go to state 73
    MOD     shift, and go to state 74

    $default  reduce using rule 51 (Expr)


State 104

   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   52     | Expr NE Expr •
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr

    PLUS    shift, and go to state 57
    MINUS   shift, and go to state 58
    MUL     shift, and go to state 59
    DIV     shift, and go to state 60
    ASSIGN  shift, and go to state 61
    LT      shift, and go to state 70
    GT      shift, and go to state 71
    LE      shift, and go to state 72
    GE      shift, and go to state 73
    MOD     shift, and go to state 74

    $default  reduce using rule 52 (Expr)


State 105

   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   55     | Expr LT Expr •
   56     | Expr • GT Expr

    PLUS    shift, and go to state 57
    MINUS   shift, and go to state 58
    MUL     shift, and go to state 59
    DIV     shift, and go to state 60
    ASSIGN  shift, and go to state 61
    MOD     shift, and go to state 74

    $default  reduce using rule 55 (Expr)


State 106

   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr
   56     | Expr GT Expr •

    PLUS    shift, and go to state 57
    MINUS   shift, and go to state 58
    MUL     shift, and go to state 59
    DIV     shift, and go to state 60
    ASSIGN  shift, and go to state 61
    MOD     shift, and go to state 74

    $default  reduce using rule 56 (Expr)


State 107

   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   53     | Expr LE Expr •
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr

    PLUS    shift, and go to state 57
    MINUS   shift, and go to state 58
    MUL     shift, and go to state 59
    DIV     shift, and go to state 60
    ASSIGN  shift, and go to state 61
    MOD     shift, and go to state 74

    $default  reduce using rule 53 (Expr)


State 108

   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   54     | Expr GE Expr •
   55     | Expr • LT Expr
   56     | Expr • GT Expr

    PLUS    shift, and go to state 57
    MINUS   shift, and go to state 58
    MUL     shift, and go to state 59
    DIV     shift, and go to state 60
    ASSIGN  shift, and go to state 61
    MOD     shift, and go to state 74

    $default  reduce using rule 54 (Expr)


State 109

   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   45     | Expr MOD Expr •
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr

    ASSIGN  shift, and go to state 61

    $default  reduce using rule 45 (Expr)


State 110

   16 ParameterList: ParameterList COMMA ParameterDeclaration •

    $default  reduce using rule 16 (ParameterList)


State 111

   38 Statement2: LBRACE Statement2 Statement •

    $default  reduce using rule 38 (Statement2)


State 112

   32 Statement: IF LPAR Expr • RPAR Statement
   33          | IF LPAR Expr • RPAR Statement ELSE Statement
   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr

    PLUS        shift, and go to state 57
    MINUS       shift, and go to state 58
    MUL         shift, and go to state 59
    DIV         shift, and go to state 60
    ASSIGN      shift, and go to state 61
    COMMA       shift, and go to state 62
    RPAR        shift, and go to state 117
    OR          shift, and go to state 63
    AND         shift, and go to state 64
    BITWISEOR   shift, and go to state 65
    BITWISEXOR  shift, and go to state 66
    BITWISEAND  shift, and go to state 67
    EQ          shift, and go to state 68
    NE          shift, and go to state 69
    LT          shift, and go to state 70
    GT          shift, and go to state 71
    LE          shift, and go to state 72
    GE          shift, and go to state 73
    MOD         shift, and go to state 74


State 113

   34 Statement: WHILE LPAR Expr • RPAR Statement
   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr

    PLUS        shift, and go to state 57
    MINUS       shift, and go to state 58
    MUL         shift, and go to state 59
    DIV         shift, and go to state 60
    ASSIGN      shift, and go to state 61
    COMMA       shift, and go to state 62
    RPAR        shift, and go to state 118
    OR          shift, and go to state 63
    AND         shift, and go to state 64
    BITWISEOR   shift, and go to state 65
    BITWISEXOR  shift, and go to state 66
    BITWISEAND  shift, and go to state 67
    EQ          shift, and go to state 68
    NE          shift, and go to state 69
    LT          shift, and go to state 70
    GT          shift, and go to state 71
    LE          shift, and go to state 72
    GE          shift, and go to state 73
    MOD         shift, and go to state 74


State 114

   36 Statement: RETURN Expr SEMI •

    $default  reduce using rule 36 (Statement)


State 115

   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr
   68 Expr2: Expr2 COMMA Expr •

    PLUS        shift, and go to state 57
    MINUS       shift, and go to state 58
    MUL         shift, and go to state 59
    DIV         shift, and go to state 60
    ASSIGN      shift, and go to state 61
    OR          shift, and go to state 63
    AND         shift, and go to state 64
    BITWISEOR   shift, and go to state 65
    BITWISEXOR  shift, and go to state 66
    BITWISEAND  shift, and go to state 67
    EQ          shift, and go to state 68
    NE          shift, and go to state 69
    LT          shift, and go to state 70
    GT          shift, and go to state 71
    LE          shift, and go to state 72
    GE          shift, and go to state 73
    MOD         shift, and go to state 74

    $default  reduce using rule 68 (Expr2)


State 116

   61 Expr: IDENTIFIER LPAR Expr2 RPAR •

    $default  reduce using rule 61 (Expr)


State 117

   32 Statement: IF LPAR Expr RPAR • Statement
   33          | IF LPAR Expr RPAR • Statement ELSE Statement

    PLUS        shift, and go to state 25
    MINUS       shift, and go to state 26
    SEMI        shift, and go to state 37
    LPAR        shift, and go to state 27
    LBRACE      shift, and go to state 38
    IF          shift, and go to state 39
    WHILE       shift, and go to state 40
    RETURN      shift, and go to state 41
    IDENTIFIER  shift, and go to state 28
    NATURAL     shift, and go to state 29
    DECIMAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    NOT         shift, and go to state 32

    Statement   go to state 119
    Statement2  go to state 47
    Expr        go to state 48


State 118

   34 Statement: WHILE LPAR Expr RPAR • Statement

    PLUS        shift, and go to state 25
    MINUS       shift, and go to state 26
    SEMI        shift, and go to state 37
    LPAR        shift, and go to state 27
    LBRACE      shift, and go to state 38
    IF          shift, and go to state 39
    WHILE       shift, and go to state 40
    RETURN      shift, and go to state 41
    IDENTIFIER  shift, and go to state 28
    NATURAL     shift, and go to state 29
    DECIMAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    NOT         shift, and go to state 32

    Statement   go to state 120
    Statement2  go to state 47
    Expr        go to state 48


State 119

   32 Statement: IF LPAR Expr RPAR Statement •
   33          | IF LPAR Expr RPAR Statement • ELSE Statement

    ELSE  shift, and go to state 121

    ELSE      [reduce using rule 32 (Statement)]
    $default  reduce using rule 32 (Statement)


State 120

   34 Statement: WHILE LPAR Expr RPAR Statement •

    $default  reduce using rule 34 (Statement)


State 121

   33 Statement: IF LPAR Expr RPAR Statement ELSE • Statement

    PLUS        shift, and go to state 25
    MINUS       shift, and go to state 26
    SEMI        shift, and go to state 37
    LPAR        shift, and go to state 27
    LBRACE      shift, and go to state 38
    IF          shift, and go to state 39
    WHILE       shift, and go to state 40
    RETURN      shift, and go to state 41
    IDENTIFIER  shift, and go to state 28
    NATURAL     shift, and go to state 29
    DECIMAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    NOT         shift, and go to state 32

    Statement   go to state 122
    Statement2  go to state 47
    Expr        go to state 48


State 122

   33 Statement: IF LPAR Expr RPAR Statement ELSE Statement •

    $default  reduce using rule 33 (Statement)
