Terminals unused in grammar

    RESERVED


Rules useless in parser due to conflicts

   73 Expr3: ε
   74      | COMMA Expr


State 99 conflicts: 1 reduce/reduce
State 132 conflicts: 1 reduce/reduce
State 133 conflicts: 1 shift/reduce


Grammar

    0 $accept: FunctionsAndDeclarations $end

    1 FunctionsAndDeclarations: FunctionDefinition FunctionsAndDeclarations2
    2                         | FunctionDeclaration FunctionsAndDeclarations2
    3                         | Declaration FunctionsAndDeclarations2

    4 FunctionsAndDeclarations2: ε
    5                          | FunctionDefinition FunctionsAndDeclarations2
    6                          | FunctionDeclaration FunctionsAndDeclarations2
    7                          | Declaration FunctionsAndDeclarations2

    8 FunctionDefinition: TypeSpec FunctionDeclarator FunctionBody

    9 FunctionBody: LBRACE RBRACE
   10             | LBRACE DeclarationsAndStatements RBRACE

   11 DeclarationsAndStatements: Statement DeclarationsAndStatements
   12                          | Declaration DeclarationsAndStatements
   13                          | Statement
   14                          | Declaration

   15 FunctionDeclaration: TypeSpec FunctionDeclarator SEMI

   16 FunctionDeclarator: IDENTIFIER LPAR ParameterList RPAR

   17 ParameterList: ParameterDeclaration ParameterList2

   18 ParameterList2: ε
   19               | COMMA ParameterDeclaration ParameterList2

   20 ParameterDeclaration: TypeSpec
   21                     | TypeSpec IDENTIFIER

   22 Declaration: TypeSpec Declarator Declaration2 SEMI
   23            | error SEMI

   24 Declaration2: ε
   25             | COMMA Declarator Declaration2

   26 TypeSpec: CHAR
   27         | INT
   28         | VOID
   29         | SHORT
   30         | DOUBLE

   31 Declarator: IDENTIFIER
   32           | IDENTIFIER ASSIGN Expr

   33 Statement: SEMI
   34          | Expr SEMI
   35          | LBRACE Statement2 RBRACE
   36          | IF LPAR Expr RPAR Statement
   37          | IF LPAR Expr RPAR Statement ELSE Statement
   38          | WHILE LPAR Expr RPAR Statement
   39          | RETURN Expr SEMI
   40          | LBRACE error RBRACE

   41 Statement2: ε
   42           | Statement Statement2

   43 Expr: Expr ASSIGN Expr
   44     | Expr COMMA Expr
   45     | Expr PLUS Expr
   46     | Expr MINUS Expr
   47     | Expr MUL Expr
   48     | Expr DIV Expr
   49     | Expr MOD Expr
   50     | Expr OR Expr
   51     | Expr AND Expr
   52     | Expr BITWISEAND Expr
   53     | Expr BITWISEOR Expr
   54     | Expr BITWISEXOR Expr
   55     | Expr EQ Expr
   56     | Expr NE Expr
   57     | Expr LE Expr
   58     | Expr GE Expr
   59     | Expr LT Expr
   60     | Expr GT Expr
   61     | PLUS Expr
   62     | MINUS Expr
   63     | NOT Expr
   64     | IDENTIFIER LPAR RPAR
   65     | IDENTIFIER LPAR Expr2 RPAR
   66     | IDENTIFIER
   67     | NATURAL
   68     | CHRLIT
   69     | DECIMAL
   70     | LPAR Expr RPAR

   71 Expr2: Expr
   72      | Expr Expr3

   73 Expr3: ε
   74      | COMMA Expr


Terminals, with rules where they appear

    $end (0) 0
    error (256) 23 40
    PLUS (258) 45 61
    MINUS (259) 46 62
    MUL (260) 47
    DIV (261) 48
    ASSIGN (262) 32 43
    COMMA (263) 19 25 44 74
    SEMI (264) 15 22 23 33 34 39
    LPAR (265) 16 36 37 38 64 65 70
    RPAR (266) 16 36 37 38 64 65 70
    LBRACE (267) 9 10 35 40
    RBRACE (268) 9 10 35 40
    CHAR (269) 26
    INT (270) 27
    VOID (271) 28
    SHORT (272) 29
    DOUBLE (273) 30
    IF (274) 36 37
    ELSE (275) 37
    WHILE (276) 38
    RETURN (277) 39
    RESERVED <v> (278)
    IDENTIFIER <v> (279) 16 21 31 32 64 65 66
    NATURAL <v> (280) 67
    DECIMAL <v> (281) 69
    CHRLIT <v> (282) 68
    OR (283) 50
    AND (284) 51
    BITWISEOR (285) 53
    BITWISEXOR (286) 54
    BITWISEAND (287) 52
    EQ (288) 55
    NE (289) 56
    LT (290) 59
    GT (291) 60
    LE (292) 57
    GE (293) 58
    MOD (294) 49
    NOT (295) 63
    UNARY (296)


Nonterminals, with rules where they appear

    $accept (42)
        on left: 0
    FunctionsAndDeclarations <no> (43)
        on left: 1 2 3
        on right: 0
    FunctionsAndDeclarations2 <no> (44)
        on left: 4 5 6 7
        on right: 1 2 3 5 6 7
    FunctionDefinition <no> (45)
        on left: 8
        on right: 1 5
    FunctionBody <no> (46)
        on left: 9 10
        on right: 8
    DeclarationsAndStatements <no> (47)
        on left: 11 12 13 14
        on right: 10 11 12
    FunctionDeclaration <no> (48)
        on left: 15
        on right: 2 6
    FunctionDeclarator <no> (49)
        on left: 16
        on right: 8 15
    ParameterList <no> (50)
        on left: 17
        on right: 16
    ParameterList2 <no> (51)
        on left: 18 19
        on right: 17 19
    ParameterDeclaration <no> (52)
        on left: 20 21
        on right: 17 19
    Declaration <no> (53)
        on left: 22 23
        on right: 3 7 12 14
    Declaration2 <no> (54)
        on left: 24 25
        on right: 22 25
    TypeSpec <no> (55)
        on left: 26 27 28 29 30
        on right: 8 15 20 21 22
    Declarator <no> (56)
        on left: 31 32
        on right: 22 25
    Statement <no> (57)
        on left: 33 34 35 36 37 38 39 40
        on right: 11 13 36 37 38 42
    Statement2 <no> (58)
        on left: 41 42
        on right: 35 42
    Expr <no> (59)
        on left: 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70
        on right: 32 34 36 37 38 39 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 70 71 72 74
    Expr2 <no> (60)
        on left: 71 72
        on right: 65
    Expr3 <no> (61)
        on left: 73 74
        on right: 72


State 0

    0 $accept: • FunctionsAndDeclarations $end

    error   shift, and go to state 1
    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    VOID    shift, and go to state 4
    SHORT   shift, and go to state 5
    DOUBLE  shift, and go to state 6

    FunctionsAndDeclarations  go to state 7
    FunctionDefinition        go to state 8
    FunctionDeclaration       go to state 9
    Declaration               go to state 10
    TypeSpec                  go to state 11


State 1

   23 Declaration: error • SEMI

    SEMI  shift, and go to state 12


State 2

   26 TypeSpec: CHAR •

    $default  reduce using rule 26 (TypeSpec)


State 3

   27 TypeSpec: INT •

    $default  reduce using rule 27 (TypeSpec)


State 4

   28 TypeSpec: VOID •

    $default  reduce using rule 28 (TypeSpec)


State 5

   29 TypeSpec: SHORT •

    $default  reduce using rule 29 (TypeSpec)


State 6

   30 TypeSpec: DOUBLE •

    $default  reduce using rule 30 (TypeSpec)


State 7

    0 $accept: FunctionsAndDeclarations • $end

    $end  shift, and go to state 13


State 8

    1 FunctionsAndDeclarations: FunctionDefinition • FunctionsAndDeclarations2

    error   shift, and go to state 1
    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    VOID    shift, and go to state 4
    SHORT   shift, and go to state 5
    DOUBLE  shift, and go to state 6

    $end  reduce using rule 4 (FunctionsAndDeclarations2)

    FunctionsAndDeclarations2  go to state 14
    FunctionDefinition         go to state 15
    FunctionDeclaration        go to state 16
    Declaration                go to state 17
    TypeSpec                   go to state 11


State 9

    2 FunctionsAndDeclarations: FunctionDeclaration • FunctionsAndDeclarations2

    error   shift, and go to state 1
    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    VOID    shift, and go to state 4
    SHORT   shift, and go to state 5
    DOUBLE  shift, and go to state 6

    $end  reduce using rule 4 (FunctionsAndDeclarations2)

    FunctionsAndDeclarations2  go to state 18
    FunctionDefinition         go to state 15
    FunctionDeclaration        go to state 16
    Declaration                go to state 17
    TypeSpec                   go to state 11


State 10

    3 FunctionsAndDeclarations: Declaration • FunctionsAndDeclarations2

    error   shift, and go to state 1
    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    VOID    shift, and go to state 4
    SHORT   shift, and go to state 5
    DOUBLE  shift, and go to state 6

    $end  reduce using rule 4 (FunctionsAndDeclarations2)

    FunctionsAndDeclarations2  go to state 19
    FunctionDefinition         go to state 15
    FunctionDeclaration        go to state 16
    Declaration                go to state 17
    TypeSpec                   go to state 11


State 11

    8 FunctionDefinition: TypeSpec • FunctionDeclarator FunctionBody
   15 FunctionDeclaration: TypeSpec • FunctionDeclarator SEMI
   22 Declaration: TypeSpec • Declarator Declaration2 SEMI

    IDENTIFIER  shift, and go to state 20

    FunctionDeclarator  go to state 21
    Declarator          go to state 22


State 12

   23 Declaration: error SEMI •

    $default  reduce using rule 23 (Declaration)


State 13

    0 $accept: FunctionsAndDeclarations $end •

    $default  accept


State 14

    1 FunctionsAndDeclarations: FunctionDefinition FunctionsAndDeclarations2 •

    $default  reduce using rule 1 (FunctionsAndDeclarations)


State 15

    5 FunctionsAndDeclarations2: FunctionDefinition • FunctionsAndDeclarations2

    error   shift, and go to state 1
    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    VOID    shift, and go to state 4
    SHORT   shift, and go to state 5
    DOUBLE  shift, and go to state 6

    $end  reduce using rule 4 (FunctionsAndDeclarations2)

    FunctionsAndDeclarations2  go to state 23
    FunctionDefinition         go to state 15
    FunctionDeclaration        go to state 16
    Declaration                go to state 17
    TypeSpec                   go to state 11


State 16

    6 FunctionsAndDeclarations2: FunctionDeclaration • FunctionsAndDeclarations2

    error   shift, and go to state 1
    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    VOID    shift, and go to state 4
    SHORT   shift, and go to state 5
    DOUBLE  shift, and go to state 6

    $end  reduce using rule 4 (FunctionsAndDeclarations2)

    FunctionsAndDeclarations2  go to state 24
    FunctionDefinition         go to state 15
    FunctionDeclaration        go to state 16
    Declaration                go to state 17
    TypeSpec                   go to state 11


State 17

    7 FunctionsAndDeclarations2: Declaration • FunctionsAndDeclarations2

    error   shift, and go to state 1
    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    VOID    shift, and go to state 4
    SHORT   shift, and go to state 5
    DOUBLE  shift, and go to state 6

    $end  reduce using rule 4 (FunctionsAndDeclarations2)

    FunctionsAndDeclarations2  go to state 25
    FunctionDefinition         go to state 15
    FunctionDeclaration        go to state 16
    Declaration                go to state 17
    TypeSpec                   go to state 11


State 18

    2 FunctionsAndDeclarations: FunctionDeclaration FunctionsAndDeclarations2 •

    $default  reduce using rule 2 (FunctionsAndDeclarations)


State 19

    3 FunctionsAndDeclarations: Declaration FunctionsAndDeclarations2 •

    $default  reduce using rule 3 (FunctionsAndDeclarations)


State 20

   16 FunctionDeclarator: IDENTIFIER • LPAR ParameterList RPAR
   31 Declarator: IDENTIFIER •
   32           | IDENTIFIER • ASSIGN Expr

    ASSIGN  shift, and go to state 26
    LPAR    shift, and go to state 27

    $default  reduce using rule 31 (Declarator)


State 21

    8 FunctionDefinition: TypeSpec FunctionDeclarator • FunctionBody
   15 FunctionDeclaration: TypeSpec FunctionDeclarator • SEMI

    SEMI    shift, and go to state 28
    LBRACE  shift, and go to state 29

    FunctionBody  go to state 30


State 22

   22 Declaration: TypeSpec Declarator • Declaration2 SEMI

    COMMA  shift, and go to state 31

    $default  reduce using rule 24 (Declaration2)

    Declaration2  go to state 32


State 23

    5 FunctionsAndDeclarations2: FunctionDefinition FunctionsAndDeclarations2 •

    $default  reduce using rule 5 (FunctionsAndDeclarations2)


State 24

    6 FunctionsAndDeclarations2: FunctionDeclaration FunctionsAndDeclarations2 •

    $default  reduce using rule 6 (FunctionsAndDeclarations2)


State 25

    7 FunctionsAndDeclarations2: Declaration FunctionsAndDeclarations2 •

    $default  reduce using rule 7 (FunctionsAndDeclarations2)


State 26

   32 Declarator: IDENTIFIER ASSIGN • Expr

    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    LPAR        shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    NATURAL     shift, and go to state 37
    DECIMAL     shift, and go to state 38
    CHRLIT      shift, and go to state 39
    NOT         shift, and go to state 40

    Expr  go to state 41


State 27

   16 FunctionDeclarator: IDENTIFIER LPAR • ParameterList RPAR

    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    VOID    shift, and go to state 4
    SHORT   shift, and go to state 5
    DOUBLE  shift, and go to state 6

    ParameterList         go to state 42
    ParameterDeclaration  go to state 43
    TypeSpec              go to state 44


State 28

   15 FunctionDeclaration: TypeSpec FunctionDeclarator SEMI •

    $default  reduce using rule 15 (FunctionDeclaration)


State 29

    9 FunctionBody: LBRACE • RBRACE
   10             | LBRACE • DeclarationsAndStatements RBRACE

    error       shift, and go to state 1
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    SEMI        shift, and go to state 45
    LPAR        shift, and go to state 35
    LBRACE      shift, and go to state 46
    RBRACE      shift, and go to state 47
    CHAR        shift, and go to state 2
    INT         shift, and go to state 3
    VOID        shift, and go to state 4
    SHORT       shift, and go to state 5
    DOUBLE      shift, and go to state 6
    IF          shift, and go to state 48
    WHILE       shift, and go to state 49
    RETURN      shift, and go to state 50
    IDENTIFIER  shift, and go to state 36
    NATURAL     shift, and go to state 37
    DECIMAL     shift, and go to state 38
    CHRLIT      shift, and go to state 39
    NOT         shift, and go to state 40

    DeclarationsAndStatements  go to state 51
    Declaration                go to state 52
    TypeSpec                   go to state 53
    Statement                  go to state 54
    Expr                       go to state 55


State 30

    8 FunctionDefinition: TypeSpec FunctionDeclarator FunctionBody •

    $default  reduce using rule 8 (FunctionDefinition)


State 31

   25 Declaration2: COMMA • Declarator Declaration2

    IDENTIFIER  shift, and go to state 56

    Declarator  go to state 57


State 32

   22 Declaration: TypeSpec Declarator Declaration2 • SEMI

    SEMI  shift, and go to state 58


State 33

   61 Expr: PLUS • Expr

    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    LPAR        shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    NATURAL     shift, and go to state 37
    DECIMAL     shift, and go to state 38
    CHRLIT      shift, and go to state 39
    NOT         shift, and go to state 40

    Expr  go to state 59


State 34

   62 Expr: MINUS • Expr

    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    LPAR        shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    NATURAL     shift, and go to state 37
    DECIMAL     shift, and go to state 38
    CHRLIT      shift, and go to state 39
    NOT         shift, and go to state 40

    Expr  go to state 60


State 35

   70 Expr: LPAR • Expr RPAR

    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    LPAR        shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    NATURAL     shift, and go to state 37
    DECIMAL     shift, and go to state 38
    CHRLIT      shift, and go to state 39
    NOT         shift, and go to state 40

    Expr  go to state 61


State 36

   64 Expr: IDENTIFIER • LPAR RPAR
   65     | IDENTIFIER • LPAR Expr2 RPAR
   66     | IDENTIFIER •

    LPAR  shift, and go to state 62

    $default  reduce using rule 66 (Expr)


State 37

   67 Expr: NATURAL •

    $default  reduce using rule 67 (Expr)


State 38

   69 Expr: DECIMAL •

    $default  reduce using rule 69 (Expr)


State 39

   68 Expr: CHRLIT •

    $default  reduce using rule 68 (Expr)


State 40

   63 Expr: NOT • Expr

    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    LPAR        shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    NATURAL     shift, and go to state 37
    DECIMAL     shift, and go to state 38
    CHRLIT      shift, and go to state 39
    NOT         shift, and go to state 40

    Expr  go to state 63


State 41

   32 Declarator: IDENTIFIER ASSIGN Expr •
   43 Expr: Expr • ASSIGN Expr
   44     | Expr • COMMA Expr
   45     | Expr • PLUS Expr
   46     | Expr • MINUS Expr
   47     | Expr • MUL Expr
   48     | Expr • DIV Expr
   49     | Expr • MOD Expr
   50     | Expr • OR Expr
   51     | Expr • AND Expr
   52     | Expr • BITWISEAND Expr
   53     | Expr • BITWISEOR Expr
   54     | Expr • BITWISEXOR Expr
   55     | Expr • EQ Expr
   56     | Expr • NE Expr
   57     | Expr • LE Expr
   58     | Expr • GE Expr
   59     | Expr • LT Expr
   60     | Expr • GT Expr

    PLUS        shift, and go to state 64
    MINUS       shift, and go to state 65
    MUL         shift, and go to state 66
    DIV         shift, and go to state 67
    ASSIGN      shift, and go to state 68
    OR          shift, and go to state 70
    AND         shift, and go to state 71
    BITWISEOR   shift, and go to state 72
    BITWISEXOR  shift, and go to state 73
    BITWISEAND  shift, and go to state 74
    EQ          shift, and go to state 75
    NE          shift, and go to state 76
    LT          shift, and go to state 77
    GT          shift, and go to state 78
    LE          shift, and go to state 79
    GE          shift, and go to state 80
    MOD         shift, and go to state 81

    $default  reduce using rule 32 (Declarator)


State 42

   16 FunctionDeclarator: IDENTIFIER LPAR ParameterList • RPAR

    RPAR  shift, and go to state 82


State 43

   17 ParameterList: ParameterDeclaration • ParameterList2

    COMMA  shift, and go to state 83

    $default  reduce using rule 18 (ParameterList2)

    ParameterList2  go to state 84


State 44

   20 ParameterDeclaration: TypeSpec •
   21                     | TypeSpec • IDENTIFIER

    IDENTIFIER  shift, and go to state 85

    $default  reduce using rule 20 (ParameterDeclaration)


State 45

   33 Statement: SEMI •

    $default  reduce using rule 33 (Statement)


State 46

   35 Statement: LBRACE • Statement2 RBRACE
   40          | LBRACE • error RBRACE

    error       shift, and go to state 86
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    SEMI        shift, and go to state 45
    LPAR        shift, and go to state 35
    LBRACE      shift, and go to state 46
    IF          shift, and go to state 48
    WHILE       shift, and go to state 49
    RETURN      shift, and go to state 50
    IDENTIFIER  shift, and go to state 36
    NATURAL     shift, and go to state 37
    DECIMAL     shift, and go to state 38
    CHRLIT      shift, and go to state 39
    NOT         shift, and go to state 40

    RBRACE  reduce using rule 41 (Statement2)

    Statement   go to state 87
    Statement2  go to state 88
    Expr        go to state 55


State 47

    9 FunctionBody: LBRACE RBRACE •

    $default  reduce using rule 9 (FunctionBody)


State 48

   36 Statement: IF • LPAR Expr RPAR Statement
   37          | IF • LPAR Expr RPAR Statement ELSE Statement

    LPAR  shift, and go to state 89


State 49

   38 Statement: WHILE • LPAR Expr RPAR Statement

    LPAR  shift, and go to state 90


State 50

   39 Statement: RETURN • Expr SEMI

    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    LPAR        shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    NATURAL     shift, and go to state 37
    DECIMAL     shift, and go to state 38
    CHRLIT      shift, and go to state 39
    NOT         shift, and go to state 40

    Expr  go to state 91


State 51

   10 FunctionBody: LBRACE DeclarationsAndStatements • RBRACE

    RBRACE  shift, and go to state 92


State 52

   12 DeclarationsAndStatements: Declaration • DeclarationsAndStatements
   14                          | Declaration •

    error       shift, and go to state 1
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    SEMI        shift, and go to state 45
    LPAR        shift, and go to state 35
    LBRACE      shift, and go to state 46
    CHAR        shift, and go to state 2
    INT         shift, and go to state 3
    VOID        shift, and go to state 4
    SHORT       shift, and go to state 5
    DOUBLE      shift, and go to state 6
    IF          shift, and go to state 48
    WHILE       shift, and go to state 49
    RETURN      shift, and go to state 50
    IDENTIFIER  shift, and go to state 36
    NATURAL     shift, and go to state 37
    DECIMAL     shift, and go to state 38
    CHRLIT      shift, and go to state 39
    NOT         shift, and go to state 40

    RBRACE  reduce using rule 14 (DeclarationsAndStatements)

    DeclarationsAndStatements  go to state 93
    Declaration                go to state 52
    TypeSpec                   go to state 53
    Statement                  go to state 54
    Expr                       go to state 55


State 53

   22 Declaration: TypeSpec • Declarator Declaration2 SEMI

    IDENTIFIER  shift, and go to state 56

    Declarator  go to state 22


State 54

   11 DeclarationsAndStatements: Statement • DeclarationsAndStatements
   13                          | Statement •

    error       shift, and go to state 1
    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    SEMI        shift, and go to state 45
    LPAR        shift, and go to state 35
    LBRACE      shift, and go to state 46
    CHAR        shift, and go to state 2
    INT         shift, and go to state 3
    VOID        shift, and go to state 4
    SHORT       shift, and go to state 5
    DOUBLE      shift, and go to state 6
    IF          shift, and go to state 48
    WHILE       shift, and go to state 49
    RETURN      shift, and go to state 50
    IDENTIFIER  shift, and go to state 36
    NATURAL     shift, and go to state 37
    DECIMAL     shift, and go to state 38
    CHRLIT      shift, and go to state 39
    NOT         shift, and go to state 40

    RBRACE  reduce using rule 13 (DeclarationsAndStatements)

    DeclarationsAndStatements  go to state 94
    Declaration                go to state 52
    TypeSpec                   go to state 53
    Statement                  go to state 54
    Expr                       go to state 55


State 55

   34 Statement: Expr • SEMI
   43 Expr: Expr • ASSIGN Expr
   44     | Expr • COMMA Expr
   45     | Expr • PLUS Expr
   46     | Expr • MINUS Expr
   47     | Expr • MUL Expr
   48     | Expr • DIV Expr
   49     | Expr • MOD Expr
   50     | Expr • OR Expr
   51     | Expr • AND Expr
   52     | Expr • BITWISEAND Expr
   53     | Expr • BITWISEOR Expr
   54     | Expr • BITWISEXOR Expr
   55     | Expr • EQ Expr
   56     | Expr • NE Expr
   57     | Expr • LE Expr
   58     | Expr • GE Expr
   59     | Expr • LT Expr
   60     | Expr • GT Expr

    PLUS        shift, and go to state 64
    MINUS       shift, and go to state 65
    MUL         shift, and go to state 66
    DIV         shift, and go to state 67
    ASSIGN      shift, and go to state 68
    COMMA       shift, and go to state 69
    SEMI        shift, and go to state 95
    OR          shift, and go to state 70
    AND         shift, and go to state 71
    BITWISEOR   shift, and go to state 72
    BITWISEXOR  shift, and go to state 73
    BITWISEAND  shift, and go to state 74
    EQ          shift, and go to state 75
    NE          shift, and go to state 76
    LT          shift, and go to state 77
    GT          shift, and go to state 78
    LE          shift, and go to state 79
    GE          shift, and go to state 80
    MOD         shift, and go to state 81


State 56

   31 Declarator: IDENTIFIER •
   32           | IDENTIFIER • ASSIGN Expr

    ASSIGN  shift, and go to state 26

    $default  reduce using rule 31 (Declarator)


State 57

   25 Declaration2: COMMA Declarator • Declaration2

    COMMA  shift, and go to state 31

    $default  reduce using rule 24 (Declaration2)

    Declaration2  go to state 96


State 58

   22 Declaration: TypeSpec Declarator Declaration2 SEMI •

    $default  reduce using rule 22 (Declaration)


State 59

   43 Expr: Expr • ASSIGN Expr
   44     | Expr • COMMA Expr
   45     | Expr • PLUS Expr
   46     | Expr • MINUS Expr
   47     | Expr • MUL Expr
   48     | Expr • DIV Expr
   49     | Expr • MOD Expr
   50     | Expr • OR Expr
   51     | Expr • AND Expr
   52     | Expr • BITWISEAND Expr
   53     | Expr • BITWISEOR Expr
   54     | Expr • BITWISEXOR Expr
   55     | Expr • EQ Expr
   56     | Expr • NE Expr
   57     | Expr • LE Expr
   58     | Expr • GE Expr
   59     | Expr • LT Expr
   60     | Expr • GT Expr
   61     | PLUS Expr •

    $default  reduce using rule 61 (Expr)


State 60

   43 Expr: Expr • ASSIGN Expr
   44     | Expr • COMMA Expr
   45     | Expr • PLUS Expr
   46     | Expr • MINUS Expr
   47     | Expr • MUL Expr
   48     | Expr • DIV Expr
   49     | Expr • MOD Expr
   50     | Expr • OR Expr
   51     | Expr • AND Expr
   52     | Expr • BITWISEAND Expr
   53     | Expr • BITWISEOR Expr
   54     | Expr • BITWISEXOR Expr
   55     | Expr • EQ Expr
   56     | Expr • NE Expr
   57     | Expr • LE Expr
   58     | Expr • GE Expr
   59     | Expr • LT Expr
   60     | Expr • GT Expr
   62     | MINUS Expr •

    $default  reduce using rule 62 (Expr)


State 61

   43 Expr: Expr • ASSIGN Expr
   44     | Expr • COMMA Expr
   45     | Expr • PLUS Expr
   46     | Expr • MINUS Expr
   47     | Expr • MUL Expr
   48     | Expr • DIV Expr
   49     | Expr • MOD Expr
   50     | Expr • OR Expr
   51     | Expr • AND Expr
   52     | Expr • BITWISEAND Expr
   53     | Expr • BITWISEOR Expr
   54     | Expr • BITWISEXOR Expr
   55     | Expr • EQ Expr
   56     | Expr • NE Expr
   57     | Expr • LE Expr
   58     | Expr • GE Expr
   59     | Expr • LT Expr
   60     | Expr • GT Expr
   70     | LPAR Expr • RPAR

    PLUS        shift, and go to state 64
    MINUS       shift, and go to state 65
    MUL         shift, and go to state 66
    DIV         shift, and go to state 67
    ASSIGN      shift, and go to state 68
    COMMA       shift, and go to state 69
    RPAR        shift, and go to state 97
    OR          shift, and go to state 70
    AND         shift, and go to state 71
    BITWISEOR   shift, and go to state 72
    BITWISEXOR  shift, and go to state 73
    BITWISEAND  shift, and go to state 74
    EQ          shift, and go to state 75
    NE          shift, and go to state 76
    LT          shift, and go to state 77
    GT          shift, and go to state 78
    LE          shift, and go to state 79
    GE          shift, and go to state 80
    MOD         shift, and go to state 81


State 62

   64 Expr: IDENTIFIER LPAR • RPAR
   65     | IDENTIFIER LPAR • Expr2 RPAR

    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    LPAR        shift, and go to state 35
    RPAR        shift, and go to state 98
    IDENTIFIER  shift, and go to state 36
    NATURAL     shift, and go to state 37
    DECIMAL     shift, and go to state 38
    CHRLIT      shift, and go to state 39
    NOT         shift, and go to state 40

    Expr   go to state 99
    Expr2  go to state 100


State 63

   43 Expr: Expr • ASSIGN Expr
   44     | Expr • COMMA Expr
   45     | Expr • PLUS Expr
   46     | Expr • MINUS Expr
   47     | Expr • MUL Expr
   48     | Expr • DIV Expr
   49     | Expr • MOD Expr
   50     | Expr • OR Expr
   51     | Expr • AND Expr
   52     | Expr • BITWISEAND Expr
   53     | Expr • BITWISEOR Expr
   54     | Expr • BITWISEXOR Expr
   55     | Expr • EQ Expr
   56     | Expr • NE Expr
   57     | Expr • LE Expr
   58     | Expr • GE Expr
   59     | Expr • LT Expr
   60     | Expr • GT Expr
   63     | NOT Expr •

    $default  reduce using rule 63 (Expr)


State 64

   45 Expr: Expr PLUS • Expr

    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    LPAR        shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    NATURAL     shift, and go to state 37
    DECIMAL     shift, and go to state 38
    CHRLIT      shift, and go to state 39
    NOT         shift, and go to state 40

    Expr  go to state 101


State 65

   46 Expr: Expr MINUS • Expr

    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    LPAR        shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    NATURAL     shift, and go to state 37
    DECIMAL     shift, and go to state 38
    CHRLIT      shift, and go to state 39
    NOT         shift, and go to state 40

    Expr  go to state 102


State 66

   47 Expr: Expr MUL • Expr

    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    LPAR        shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    NATURAL     shift, and go to state 37
    DECIMAL     shift, and go to state 38
    CHRLIT      shift, and go to state 39
    NOT         shift, and go to state 40

    Expr  go to state 103


State 67

   48 Expr: Expr DIV • Expr

    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    LPAR        shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    NATURAL     shift, and go to state 37
    DECIMAL     shift, and go to state 38
    CHRLIT      shift, and go to state 39
    NOT         shift, and go to state 40

    Expr  go to state 104


State 68

   43 Expr: Expr ASSIGN • Expr

    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    LPAR        shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    NATURAL     shift, and go to state 37
    DECIMAL     shift, and go to state 38
    CHRLIT      shift, and go to state 39
    NOT         shift, and go to state 40

    Expr  go to state 105


State 69

   44 Expr: Expr COMMA • Expr

    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    LPAR        shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    NATURAL     shift, and go to state 37
    DECIMAL     shift, and go to state 38
    CHRLIT      shift, and go to state 39
    NOT         shift, and go to state 40

    Expr  go to state 106


State 70

   50 Expr: Expr OR • Expr

    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    LPAR        shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    NATURAL     shift, and go to state 37
    DECIMAL     shift, and go to state 38
    CHRLIT      shift, and go to state 39
    NOT         shift, and go to state 40

    Expr  go to state 107


State 71

   51 Expr: Expr AND • Expr

    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    LPAR        shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    NATURAL     shift, and go to state 37
    DECIMAL     shift, and go to state 38
    CHRLIT      shift, and go to state 39
    NOT         shift, and go to state 40

    Expr  go to state 108


State 72

   53 Expr: Expr BITWISEOR • Expr

    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    LPAR        shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    NATURAL     shift, and go to state 37
    DECIMAL     shift, and go to state 38
    CHRLIT      shift, and go to state 39
    NOT         shift, and go to state 40

    Expr  go to state 109


State 73

   54 Expr: Expr BITWISEXOR • Expr

    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    LPAR        shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    NATURAL     shift, and go to state 37
    DECIMAL     shift, and go to state 38
    CHRLIT      shift, and go to state 39
    NOT         shift, and go to state 40

    Expr  go to state 110


State 74

   52 Expr: Expr BITWISEAND • Expr

    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    LPAR        shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    NATURAL     shift, and go to state 37
    DECIMAL     shift, and go to state 38
    CHRLIT      shift, and go to state 39
    NOT         shift, and go to state 40

    Expr  go to state 111


State 75

   55 Expr: Expr EQ • Expr

    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    LPAR        shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    NATURAL     shift, and go to state 37
    DECIMAL     shift, and go to state 38
    CHRLIT      shift, and go to state 39
    NOT         shift, and go to state 40

    Expr  go to state 112


State 76

   56 Expr: Expr NE • Expr

    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    LPAR        shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    NATURAL     shift, and go to state 37
    DECIMAL     shift, and go to state 38
    CHRLIT      shift, and go to state 39
    NOT         shift, and go to state 40

    Expr  go to state 113


State 77

   59 Expr: Expr LT • Expr

    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    LPAR        shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    NATURAL     shift, and go to state 37
    DECIMAL     shift, and go to state 38
    CHRLIT      shift, and go to state 39
    NOT         shift, and go to state 40

    Expr  go to state 114


State 78

   60 Expr: Expr GT • Expr

    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    LPAR        shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    NATURAL     shift, and go to state 37
    DECIMAL     shift, and go to state 38
    CHRLIT      shift, and go to state 39
    NOT         shift, and go to state 40

    Expr  go to state 115


State 79

   57 Expr: Expr LE • Expr

    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    LPAR        shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    NATURAL     shift, and go to state 37
    DECIMAL     shift, and go to state 38
    CHRLIT      shift, and go to state 39
    NOT         shift, and go to state 40

    Expr  go to state 116


State 80

   58 Expr: Expr GE • Expr

    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    LPAR        shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    NATURAL     shift, and go to state 37
    DECIMAL     shift, and go to state 38
    CHRLIT      shift, and go to state 39
    NOT         shift, and go to state 40

    Expr  go to state 117


State 81

   49 Expr: Expr MOD • Expr

    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    LPAR        shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    NATURAL     shift, and go to state 37
    DECIMAL     shift, and go to state 38
    CHRLIT      shift, and go to state 39
    NOT         shift, and go to state 40

    Expr  go to state 118


State 82

   16 FunctionDeclarator: IDENTIFIER LPAR ParameterList RPAR •

    $default  reduce using rule 16 (FunctionDeclarator)


State 83

   19 ParameterList2: COMMA • ParameterDeclaration ParameterList2

    CHAR    shift, and go to state 2
    INT     shift, and go to state 3
    VOID    shift, and go to state 4
    SHORT   shift, and go to state 5
    DOUBLE  shift, and go to state 6

    ParameterDeclaration  go to state 119
    TypeSpec              go to state 44


State 84

   17 ParameterList: ParameterDeclaration ParameterList2 •

    $default  reduce using rule 17 (ParameterList)


State 85

   21 ParameterDeclaration: TypeSpec IDENTIFIER •

    $default  reduce using rule 21 (ParameterDeclaration)


State 86

   40 Statement: LBRACE error • RBRACE

    RBRACE  shift, and go to state 120


State 87

   42 Statement2: Statement • Statement2

    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    SEMI        shift, and go to state 45
    LPAR        shift, and go to state 35
    LBRACE      shift, and go to state 46
    IF          shift, and go to state 48
    WHILE       shift, and go to state 49
    RETURN      shift, and go to state 50
    IDENTIFIER  shift, and go to state 36
    NATURAL     shift, and go to state 37
    DECIMAL     shift, and go to state 38
    CHRLIT      shift, and go to state 39
    NOT         shift, and go to state 40

    $default  reduce using rule 41 (Statement2)

    Statement   go to state 87
    Statement2  go to state 121
    Expr        go to state 55


State 88

   35 Statement: LBRACE Statement2 • RBRACE

    RBRACE  shift, and go to state 122


State 89

   36 Statement: IF LPAR • Expr RPAR Statement
   37          | IF LPAR • Expr RPAR Statement ELSE Statement

    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    LPAR        shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    NATURAL     shift, and go to state 37
    DECIMAL     shift, and go to state 38
    CHRLIT      shift, and go to state 39
    NOT         shift, and go to state 40

    Expr  go to state 123


State 90

   38 Statement: WHILE LPAR • Expr RPAR Statement

    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    LPAR        shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    NATURAL     shift, and go to state 37
    DECIMAL     shift, and go to state 38
    CHRLIT      shift, and go to state 39
    NOT         shift, and go to state 40

    Expr  go to state 124


State 91

   39 Statement: RETURN Expr • SEMI
   43 Expr: Expr • ASSIGN Expr
   44     | Expr • COMMA Expr
   45     | Expr • PLUS Expr
   46     | Expr • MINUS Expr
   47     | Expr • MUL Expr
   48     | Expr • DIV Expr
   49     | Expr • MOD Expr
   50     | Expr • OR Expr
   51     | Expr • AND Expr
   52     | Expr • BITWISEAND Expr
   53     | Expr • BITWISEOR Expr
   54     | Expr • BITWISEXOR Expr
   55     | Expr • EQ Expr
   56     | Expr • NE Expr
   57     | Expr • LE Expr
   58     | Expr • GE Expr
   59     | Expr • LT Expr
   60     | Expr • GT Expr

    PLUS        shift, and go to state 64
    MINUS       shift, and go to state 65
    MUL         shift, and go to state 66
    DIV         shift, and go to state 67
    ASSIGN      shift, and go to state 68
    COMMA       shift, and go to state 69
    SEMI        shift, and go to state 125
    OR          shift, and go to state 70
    AND         shift, and go to state 71
    BITWISEOR   shift, and go to state 72
    BITWISEXOR  shift, and go to state 73
    BITWISEAND  shift, and go to state 74
    EQ          shift, and go to state 75
    NE          shift, and go to state 76
    LT          shift, and go to state 77
    GT          shift, and go to state 78
    LE          shift, and go to state 79
    GE          shift, and go to state 80
    MOD         shift, and go to state 81


State 92

   10 FunctionBody: LBRACE DeclarationsAndStatements RBRACE •

    $default  reduce using rule 10 (FunctionBody)


State 93

   12 DeclarationsAndStatements: Declaration DeclarationsAndStatements •

    $default  reduce using rule 12 (DeclarationsAndStatements)


State 94

   11 DeclarationsAndStatements: Statement DeclarationsAndStatements •

    $default  reduce using rule 11 (DeclarationsAndStatements)


State 95

   34 Statement: Expr SEMI •

    $default  reduce using rule 34 (Statement)


State 96

   25 Declaration2: COMMA Declarator Declaration2 •

    $default  reduce using rule 25 (Declaration2)


State 97

   70 Expr: LPAR Expr RPAR •

    $default  reduce using rule 70 (Expr)


State 98

   64 Expr: IDENTIFIER LPAR RPAR •

    $default  reduce using rule 64 (Expr)


State 99

   43 Expr: Expr • ASSIGN Expr
   44     | Expr • COMMA Expr
   45     | Expr • PLUS Expr
   46     | Expr • MINUS Expr
   47     | Expr • MUL Expr
   48     | Expr • DIV Expr
   49     | Expr • MOD Expr
   50     | Expr • OR Expr
   51     | Expr • AND Expr
   52     | Expr • BITWISEAND Expr
   53     | Expr • BITWISEOR Expr
   54     | Expr • BITWISEXOR Expr
   55     | Expr • EQ Expr
   56     | Expr • NE Expr
   57     | Expr • LE Expr
   58     | Expr • GE Expr
   59     | Expr • LT Expr
   60     | Expr • GT Expr
   71 Expr2: Expr •
   72      | Expr • Expr3

    PLUS        shift, and go to state 64
    MINUS       shift, and go to state 65
    MUL         shift, and go to state 66
    DIV         shift, and go to state 67
    ASSIGN      shift, and go to state 68
    COMMA       shift, and go to state 126
    OR          shift, and go to state 70
    AND         shift, and go to state 71
    BITWISEOR   shift, and go to state 72
    BITWISEXOR  shift, and go to state 73
    BITWISEAND  shift, and go to state 74
    EQ          shift, and go to state 75
    NE          shift, and go to state 76
    LT          shift, and go to state 77
    GT          shift, and go to state 78
    LE          shift, and go to state 79
    GE          shift, and go to state 80
    MOD         shift, and go to state 81

    RPAR      reduce using rule 71 (Expr2)
    RPAR      [reduce using rule 73 (Expr3)]
    $default  reduce using rule 71 (Expr2)

    Expr3  go to state 127

    reduce/reduce conflict on token RPAR:
       71 Expr2: Expr •
       73 Expr3: ε •
      Example: Expr •
      First reduce derivation
        Expr2
        ↳ 71: Expr •
      Second reduce derivation
        Expr2
        ↳ 72: Expr Expr3
                   ↳ 73: ε •



State 100

   65 Expr: IDENTIFIER LPAR Expr2 • RPAR

    RPAR  shift, and go to state 128


State 101

   43 Expr: Expr • ASSIGN Expr
   44     | Expr • COMMA Expr
   45     | Expr • PLUS Expr
   45     | Expr PLUS Expr •
   46     | Expr • MINUS Expr
   47     | Expr • MUL Expr
   48     | Expr • DIV Expr
   49     | Expr • MOD Expr
   50     | Expr • OR Expr
   51     | Expr • AND Expr
   52     | Expr • BITWISEAND Expr
   53     | Expr • BITWISEOR Expr
   54     | Expr • BITWISEXOR Expr
   55     | Expr • EQ Expr
   56     | Expr • NE Expr
   57     | Expr • LE Expr
   58     | Expr • GE Expr
   59     | Expr • LT Expr
   60     | Expr • GT Expr

    MUL     shift, and go to state 66
    DIV     shift, and go to state 67
    ASSIGN  shift, and go to state 68
    MOD     shift, and go to state 81

    $default  reduce using rule 45 (Expr)


State 102

   43 Expr: Expr • ASSIGN Expr
   44     | Expr • COMMA Expr
   45     | Expr • PLUS Expr
   46     | Expr • MINUS Expr
   46     | Expr MINUS Expr •
   47     | Expr • MUL Expr
   48     | Expr • DIV Expr
   49     | Expr • MOD Expr
   50     | Expr • OR Expr
   51     | Expr • AND Expr
   52     | Expr • BITWISEAND Expr
   53     | Expr • BITWISEOR Expr
   54     | Expr • BITWISEXOR Expr
   55     | Expr • EQ Expr
   56     | Expr • NE Expr
   57     | Expr • LE Expr
   58     | Expr • GE Expr
   59     | Expr • LT Expr
   60     | Expr • GT Expr

    MUL     shift, and go to state 66
    DIV     shift, and go to state 67
    ASSIGN  shift, and go to state 68
    MOD     shift, and go to state 81

    $default  reduce using rule 46 (Expr)


State 103

   43 Expr: Expr • ASSIGN Expr
   44     | Expr • COMMA Expr
   45     | Expr • PLUS Expr
   46     | Expr • MINUS Expr
   47     | Expr • MUL Expr
   47     | Expr MUL Expr •
   48     | Expr • DIV Expr
   49     | Expr • MOD Expr
   50     | Expr • OR Expr
   51     | Expr • AND Expr
   52     | Expr • BITWISEAND Expr
   53     | Expr • BITWISEOR Expr
   54     | Expr • BITWISEXOR Expr
   55     | Expr • EQ Expr
   56     | Expr • NE Expr
   57     | Expr • LE Expr
   58     | Expr • GE Expr
   59     | Expr • LT Expr
   60     | Expr • GT Expr

    ASSIGN  shift, and go to state 68

    $default  reduce using rule 47 (Expr)


State 104

   43 Expr: Expr • ASSIGN Expr
   44     | Expr • COMMA Expr
   45     | Expr • PLUS Expr
   46     | Expr • MINUS Expr
   47     | Expr • MUL Expr
   48     | Expr • DIV Expr
   48     | Expr DIV Expr •
   49     | Expr • MOD Expr
   50     | Expr • OR Expr
   51     | Expr • AND Expr
   52     | Expr • BITWISEAND Expr
   53     | Expr • BITWISEOR Expr
   54     | Expr • BITWISEXOR Expr
   55     | Expr • EQ Expr
   56     | Expr • NE Expr
   57     | Expr • LE Expr
   58     | Expr • GE Expr
   59     | Expr • LT Expr
   60     | Expr • GT Expr

    ASSIGN  shift, and go to state 68

    $default  reduce using rule 48 (Expr)


State 105

   43 Expr: Expr • ASSIGN Expr
   43     | Expr ASSIGN Expr •
   44     | Expr • COMMA Expr
   45     | Expr • PLUS Expr
   46     | Expr • MINUS Expr
   47     | Expr • MUL Expr
   48     | Expr • DIV Expr
   49     | Expr • MOD Expr
   50     | Expr • OR Expr
   51     | Expr • AND Expr
   52     | Expr • BITWISEAND Expr
   53     | Expr • BITWISEOR Expr
   54     | Expr • BITWISEXOR Expr
   55     | Expr • EQ Expr
   56     | Expr • NE Expr
   57     | Expr • LE Expr
   58     | Expr • GE Expr
   59     | Expr • LT Expr
   60     | Expr • GT Expr

    ASSIGN  shift, and go to state 68

    $default  reduce using rule 43 (Expr)


State 106

   43 Expr: Expr • ASSIGN Expr
   44     | Expr • COMMA Expr
   44     | Expr COMMA Expr •
   45     | Expr • PLUS Expr
   46     | Expr • MINUS Expr
   47     | Expr • MUL Expr
   48     | Expr • DIV Expr
   49     | Expr • MOD Expr
   50     | Expr • OR Expr
   51     | Expr • AND Expr
   52     | Expr • BITWISEAND Expr
   53     | Expr • BITWISEOR Expr
   54     | Expr • BITWISEXOR Expr
   55     | Expr • EQ Expr
   56     | Expr • NE Expr
   57     | Expr • LE Expr
   58     | Expr • GE Expr
   59     | Expr • LT Expr
   60     | Expr • GT Expr

    PLUS        shift, and go to state 64
    MINUS       shift, and go to state 65
    MUL         shift, and go to state 66
    DIV         shift, and go to state 67
    ASSIGN      shift, and go to state 68
    OR          shift, and go to state 70
    AND         shift, and go to state 71
    BITWISEOR   shift, and go to state 72
    BITWISEXOR  shift, and go to state 73
    BITWISEAND  shift, and go to state 74
    EQ          shift, and go to state 75
    NE          shift, and go to state 76
    LT          shift, and go to state 77
    GT          shift, and go to state 78
    LE          shift, and go to state 79
    GE          shift, and go to state 80
    MOD         shift, and go to state 81

    $default  reduce using rule 44 (Expr)


State 107

   43 Expr: Expr • ASSIGN Expr
   44     | Expr • COMMA Expr
   45     | Expr • PLUS Expr
   46     | Expr • MINUS Expr
   47     | Expr • MUL Expr
   48     | Expr • DIV Expr
   49     | Expr • MOD Expr
   50     | Expr • OR Expr
   50     | Expr OR Expr •
   51     | Expr • AND Expr
   52     | Expr • BITWISEAND Expr
   53     | Expr • BITWISEOR Expr
   54     | Expr • BITWISEXOR Expr
   55     | Expr • EQ Expr
   56     | Expr • NE Expr
   57     | Expr • LE Expr
   58     | Expr • GE Expr
   59     | Expr • LT Expr
   60     | Expr • GT Expr

    PLUS        shift, and go to state 64
    MINUS       shift, and go to state 65
    MUL         shift, and go to state 66
    DIV         shift, and go to state 67
    ASSIGN      shift, and go to state 68
    AND         shift, and go to state 71
    BITWISEOR   shift, and go to state 72
    BITWISEXOR  shift, and go to state 73
    BITWISEAND  shift, and go to state 74
    EQ          shift, and go to state 75
    NE          shift, and go to state 76
    LT          shift, and go to state 77
    GT          shift, and go to state 78
    LE          shift, and go to state 79
    GE          shift, and go to state 80
    MOD         shift, and go to state 81

    $default  reduce using rule 50 (Expr)


State 108

   43 Expr: Expr • ASSIGN Expr
   44     | Expr • COMMA Expr
   45     | Expr • PLUS Expr
   46     | Expr • MINUS Expr
   47     | Expr • MUL Expr
   48     | Expr • DIV Expr
   49     | Expr • MOD Expr
   50     | Expr • OR Expr
   51     | Expr • AND Expr
   51     | Expr AND Expr •
   52     | Expr • BITWISEAND Expr
   53     | Expr • BITWISEOR Expr
   54     | Expr • BITWISEXOR Expr
   55     | Expr • EQ Expr
   56     | Expr • NE Expr
   57     | Expr • LE Expr
   58     | Expr • GE Expr
   59     | Expr • LT Expr
   60     | Expr • GT Expr

    PLUS        shift, and go to state 64
    MINUS       shift, and go to state 65
    MUL         shift, and go to state 66
    DIV         shift, and go to state 67
    ASSIGN      shift, and go to state 68
    BITWISEOR   shift, and go to state 72
    BITWISEXOR  shift, and go to state 73
    BITWISEAND  shift, and go to state 74
    EQ          shift, and go to state 75
    NE          shift, and go to state 76
    LT          shift, and go to state 77
    GT          shift, and go to state 78
    LE          shift, and go to state 79
    GE          shift, and go to state 80
    MOD         shift, and go to state 81

    $default  reduce using rule 51 (Expr)


State 109

   43 Expr: Expr • ASSIGN Expr
   44     | Expr • COMMA Expr
   45     | Expr • PLUS Expr
   46     | Expr • MINUS Expr
   47     | Expr • MUL Expr
   48     | Expr • DIV Expr
   49     | Expr • MOD Expr
   50     | Expr • OR Expr
   51     | Expr • AND Expr
   52     | Expr • BITWISEAND Expr
   53     | Expr • BITWISEOR Expr
   53     | Expr BITWISEOR Expr •
   54     | Expr • BITWISEXOR Expr
   55     | Expr • EQ Expr
   56     | Expr • NE Expr
   57     | Expr • LE Expr
   58     | Expr • GE Expr
   59     | Expr • LT Expr
   60     | Expr • GT Expr

    PLUS        shift, and go to state 64
    MINUS       shift, and go to state 65
    MUL         shift, and go to state 66
    DIV         shift, and go to state 67
    ASSIGN      shift, and go to state 68
    BITWISEXOR  shift, and go to state 73
    BITWISEAND  shift, and go to state 74
    EQ          shift, and go to state 75
    NE          shift, and go to state 76
    LT          shift, and go to state 77
    GT          shift, and go to state 78
    LE          shift, and go to state 79
    GE          shift, and go to state 80
    MOD         shift, and go to state 81

    $default  reduce using rule 53 (Expr)


State 110

   43 Expr: Expr • ASSIGN Expr
   44     | Expr • COMMA Expr
   45     | Expr • PLUS Expr
   46     | Expr • MINUS Expr
   47     | Expr • MUL Expr
   48     | Expr • DIV Expr
   49     | Expr • MOD Expr
   50     | Expr • OR Expr
   51     | Expr • AND Expr
   52     | Expr • BITWISEAND Expr
   53     | Expr • BITWISEOR Expr
   54     | Expr • BITWISEXOR Expr
   54     | Expr BITWISEXOR Expr •
   55     | Expr • EQ Expr
   56     | Expr • NE Expr
   57     | Expr • LE Expr
   58     | Expr • GE Expr
   59     | Expr • LT Expr
   60     | Expr • GT Expr

    PLUS        shift, and go to state 64
    MINUS       shift, and go to state 65
    MUL         shift, and go to state 66
    DIV         shift, and go to state 67
    ASSIGN      shift, and go to state 68
    BITWISEAND  shift, and go to state 74
    EQ          shift, and go to state 75
    NE          shift, and go to state 76
    LT          shift, and go to state 77
    GT          shift, and go to state 78
    LE          shift, and go to state 79
    GE          shift, and go to state 80
    MOD         shift, and go to state 81

    $default  reduce using rule 54 (Expr)


State 111

   43 Expr: Expr • ASSIGN Expr
   44     | Expr • COMMA Expr
   45     | Expr • PLUS Expr
   46     | Expr • MINUS Expr
   47     | Expr • MUL Expr
   48     | Expr • DIV Expr
   49     | Expr • MOD Expr
   50     | Expr • OR Expr
   51     | Expr • AND Expr
   52     | Expr • BITWISEAND Expr
   52     | Expr BITWISEAND Expr •
   53     | Expr • BITWISEOR Expr
   54     | Expr • BITWISEXOR Expr
   55     | Expr • EQ Expr
   56     | Expr • NE Expr
   57     | Expr • LE Expr
   58     | Expr • GE Expr
   59     | Expr • LT Expr
   60     | Expr • GT Expr

    PLUS    shift, and go to state 64
    MINUS   shift, and go to state 65
    MUL     shift, and go to state 66
    DIV     shift, and go to state 67
    ASSIGN  shift, and go to state 68
    EQ      shift, and go to state 75
    NE      shift, and go to state 76
    LT      shift, and go to state 77
    GT      shift, and go to state 78
    LE      shift, and go to state 79
    GE      shift, and go to state 80
    MOD     shift, and go to state 81

    $default  reduce using rule 52 (Expr)


State 112

   43 Expr: Expr • ASSIGN Expr
   44     | Expr • COMMA Expr
   45     | Expr • PLUS Expr
   46     | Expr • MINUS Expr
   47     | Expr • MUL Expr
   48     | Expr • DIV Expr
   49     | Expr • MOD Expr
   50     | Expr • OR Expr
   51     | Expr • AND Expr
   52     | Expr • BITWISEAND Expr
   53     | Expr • BITWISEOR Expr
   54     | Expr • BITWISEXOR Expr
   55     | Expr • EQ Expr
   55     | Expr EQ Expr •
   56     | Expr • NE Expr
   57     | Expr • LE Expr
   58     | Expr • GE Expr
   59     | Expr • LT Expr
   60     | Expr • GT Expr

    PLUS    shift, and go to state 64
    MINUS   shift, and go to state 65
    MUL     shift, and go to state 66
    DIV     shift, and go to state 67
    ASSIGN  shift, and go to state 68
    LT      shift, and go to state 77
    GT      shift, and go to state 78
    LE      shift, and go to state 79
    GE      shift, and go to state 80
    MOD     shift, and go to state 81

    $default  reduce using rule 55 (Expr)


State 113

   43 Expr: Expr • ASSIGN Expr
   44     | Expr • COMMA Expr
   45     | Expr • PLUS Expr
   46     | Expr • MINUS Expr
   47     | Expr • MUL Expr
   48     | Expr • DIV Expr
   49     | Expr • MOD Expr
   50     | Expr • OR Expr
   51     | Expr • AND Expr
   52     | Expr • BITWISEAND Expr
   53     | Expr • BITWISEOR Expr
   54     | Expr • BITWISEXOR Expr
   55     | Expr • EQ Expr
   56     | Expr • NE Expr
   56     | Expr NE Expr •
   57     | Expr • LE Expr
   58     | Expr • GE Expr
   59     | Expr • LT Expr
   60     | Expr • GT Expr

    PLUS    shift, and go to state 64
    MINUS   shift, and go to state 65
    MUL     shift, and go to state 66
    DIV     shift, and go to state 67
    ASSIGN  shift, and go to state 68
    LT      shift, and go to state 77
    GT      shift, and go to state 78
    LE      shift, and go to state 79
    GE      shift, and go to state 80
    MOD     shift, and go to state 81

    $default  reduce using rule 56 (Expr)


State 114

   43 Expr: Expr • ASSIGN Expr
   44     | Expr • COMMA Expr
   45     | Expr • PLUS Expr
   46     | Expr • MINUS Expr
   47     | Expr • MUL Expr
   48     | Expr • DIV Expr
   49     | Expr • MOD Expr
   50     | Expr • OR Expr
   51     | Expr • AND Expr
   52     | Expr • BITWISEAND Expr
   53     | Expr • BITWISEOR Expr
   54     | Expr • BITWISEXOR Expr
   55     | Expr • EQ Expr
   56     | Expr • NE Expr
   57     | Expr • LE Expr
   58     | Expr • GE Expr
   59     | Expr • LT Expr
   59     | Expr LT Expr •
   60     | Expr • GT Expr

    PLUS    shift, and go to state 64
    MINUS   shift, and go to state 65
    MUL     shift, and go to state 66
    DIV     shift, and go to state 67
    ASSIGN  shift, and go to state 68
    MOD     shift, and go to state 81

    $default  reduce using rule 59 (Expr)


State 115

   43 Expr: Expr • ASSIGN Expr
   44     | Expr • COMMA Expr
   45     | Expr • PLUS Expr
   46     | Expr • MINUS Expr
   47     | Expr • MUL Expr
   48     | Expr • DIV Expr
   49     | Expr • MOD Expr
   50     | Expr • OR Expr
   51     | Expr • AND Expr
   52     | Expr • BITWISEAND Expr
   53     | Expr • BITWISEOR Expr
   54     | Expr • BITWISEXOR Expr
   55     | Expr • EQ Expr
   56     | Expr • NE Expr
   57     | Expr • LE Expr
   58     | Expr • GE Expr
   59     | Expr • LT Expr
   60     | Expr • GT Expr
   60     | Expr GT Expr •

    PLUS    shift, and go to state 64
    MINUS   shift, and go to state 65
    MUL     shift, and go to state 66
    DIV     shift, and go to state 67
    ASSIGN  shift, and go to state 68
    MOD     shift, and go to state 81

    $default  reduce using rule 60 (Expr)


State 116

   43 Expr: Expr • ASSIGN Expr
   44     | Expr • COMMA Expr
   45     | Expr • PLUS Expr
   46     | Expr • MINUS Expr
   47     | Expr • MUL Expr
   48     | Expr • DIV Expr
   49     | Expr • MOD Expr
   50     | Expr • OR Expr
   51     | Expr • AND Expr
   52     | Expr • BITWISEAND Expr
   53     | Expr • BITWISEOR Expr
   54     | Expr • BITWISEXOR Expr
   55     | Expr • EQ Expr
   56     | Expr • NE Expr
   57     | Expr • LE Expr
   57     | Expr LE Expr •
   58     | Expr • GE Expr
   59     | Expr • LT Expr
   60     | Expr • GT Expr

    PLUS    shift, and go to state 64
    MINUS   shift, and go to state 65
    MUL     shift, and go to state 66
    DIV     shift, and go to state 67
    ASSIGN  shift, and go to state 68
    MOD     shift, and go to state 81

    $default  reduce using rule 57 (Expr)


State 117

   43 Expr: Expr • ASSIGN Expr
   44     | Expr • COMMA Expr
   45     | Expr • PLUS Expr
   46     | Expr • MINUS Expr
   47     | Expr • MUL Expr
   48     | Expr • DIV Expr
   49     | Expr • MOD Expr
   50     | Expr • OR Expr
   51     | Expr • AND Expr
   52     | Expr • BITWISEAND Expr
   53     | Expr • BITWISEOR Expr
   54     | Expr • BITWISEXOR Expr
   55     | Expr • EQ Expr
   56     | Expr • NE Expr
   57     | Expr • LE Expr
   58     | Expr • GE Expr
   58     | Expr GE Expr •
   59     | Expr • LT Expr
   60     | Expr • GT Expr

    PLUS    shift, and go to state 64
    MINUS   shift, and go to state 65
    MUL     shift, and go to state 66
    DIV     shift, and go to state 67
    ASSIGN  shift, and go to state 68
    MOD     shift, and go to state 81

    $default  reduce using rule 58 (Expr)


State 118

   43 Expr: Expr • ASSIGN Expr
   44     | Expr • COMMA Expr
   45     | Expr • PLUS Expr
   46     | Expr • MINUS Expr
   47     | Expr • MUL Expr
   48     | Expr • DIV Expr
   49     | Expr • MOD Expr
   49     | Expr MOD Expr •
   50     | Expr • OR Expr
   51     | Expr • AND Expr
   52     | Expr • BITWISEAND Expr
   53     | Expr • BITWISEOR Expr
   54     | Expr • BITWISEXOR Expr
   55     | Expr • EQ Expr
   56     | Expr • NE Expr
   57     | Expr • LE Expr
   58     | Expr • GE Expr
   59     | Expr • LT Expr
   60     | Expr • GT Expr

    ASSIGN  shift, and go to state 68

    $default  reduce using rule 49 (Expr)


State 119

   19 ParameterList2: COMMA ParameterDeclaration • ParameterList2

    COMMA  shift, and go to state 83

    $default  reduce using rule 18 (ParameterList2)

    ParameterList2  go to state 129


State 120

   40 Statement: LBRACE error RBRACE •

    $default  reduce using rule 40 (Statement)


State 121

   42 Statement2: Statement Statement2 •

    $default  reduce using rule 42 (Statement2)


State 122

   35 Statement: LBRACE Statement2 RBRACE •

    $default  reduce using rule 35 (Statement)


State 123

   36 Statement: IF LPAR Expr • RPAR Statement
   37          | IF LPAR Expr • RPAR Statement ELSE Statement
   43 Expr: Expr • ASSIGN Expr
   44     | Expr • COMMA Expr
   45     | Expr • PLUS Expr
   46     | Expr • MINUS Expr
   47     | Expr • MUL Expr
   48     | Expr • DIV Expr
   49     | Expr • MOD Expr
   50     | Expr • OR Expr
   51     | Expr • AND Expr
   52     | Expr • BITWISEAND Expr
   53     | Expr • BITWISEOR Expr
   54     | Expr • BITWISEXOR Expr
   55     | Expr • EQ Expr
   56     | Expr • NE Expr
   57     | Expr • LE Expr
   58     | Expr • GE Expr
   59     | Expr • LT Expr
   60     | Expr • GT Expr

    PLUS        shift, and go to state 64
    MINUS       shift, and go to state 65
    MUL         shift, and go to state 66
    DIV         shift, and go to state 67
    ASSIGN      shift, and go to state 68
    COMMA       shift, and go to state 69
    RPAR        shift, and go to state 130
    OR          shift, and go to state 70
    AND         shift, and go to state 71
    BITWISEOR   shift, and go to state 72
    BITWISEXOR  shift, and go to state 73
    BITWISEAND  shift, and go to state 74
    EQ          shift, and go to state 75
    NE          shift, and go to state 76
    LT          shift, and go to state 77
    GT          shift, and go to state 78
    LE          shift, and go to state 79
    GE          shift, and go to state 80
    MOD         shift, and go to state 81


State 124

   38 Statement: WHILE LPAR Expr • RPAR Statement
   43 Expr: Expr • ASSIGN Expr
   44     | Expr • COMMA Expr
   45     | Expr • PLUS Expr
   46     | Expr • MINUS Expr
   47     | Expr • MUL Expr
   48     | Expr • DIV Expr
   49     | Expr • MOD Expr
   50     | Expr • OR Expr
   51     | Expr • AND Expr
   52     | Expr • BITWISEAND Expr
   53     | Expr • BITWISEOR Expr
   54     | Expr • BITWISEXOR Expr
   55     | Expr • EQ Expr
   56     | Expr • NE Expr
   57     | Expr • LE Expr
   58     | Expr • GE Expr
   59     | Expr • LT Expr
   60     | Expr • GT Expr

    PLUS        shift, and go to state 64
    MINUS       shift, and go to state 65
    MUL         shift, and go to state 66
    DIV         shift, and go to state 67
    ASSIGN      shift, and go to state 68
    COMMA       shift, and go to state 69
    RPAR        shift, and go to state 131
    OR          shift, and go to state 70
    AND         shift, and go to state 71
    BITWISEOR   shift, and go to state 72
    BITWISEXOR  shift, and go to state 73
    BITWISEAND  shift, and go to state 74
    EQ          shift, and go to state 75
    NE          shift, and go to state 76
    LT          shift, and go to state 77
    GT          shift, and go to state 78
    LE          shift, and go to state 79
    GE          shift, and go to state 80
    MOD         shift, and go to state 81


State 125

   39 Statement: RETURN Expr SEMI •

    $default  reduce using rule 39 (Statement)


State 126

   44 Expr: Expr COMMA • Expr
   74 Expr3: COMMA • Expr

    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    LPAR        shift, and go to state 35
    IDENTIFIER  shift, and go to state 36
    NATURAL     shift, and go to state 37
    DECIMAL     shift, and go to state 38
    CHRLIT      shift, and go to state 39
    NOT         shift, and go to state 40

    Expr  go to state 132


State 127

   72 Expr2: Expr Expr3 •

    $default  reduce using rule 72 (Expr2)


State 128

   65 Expr: IDENTIFIER LPAR Expr2 RPAR •

    $default  reduce using rule 65 (Expr)


State 129

   19 ParameterList2: COMMA ParameterDeclaration ParameterList2 •

    $default  reduce using rule 19 (ParameterList2)


State 130

   36 Statement: IF LPAR Expr RPAR • Statement
   37          | IF LPAR Expr RPAR • Statement ELSE Statement

    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    SEMI        shift, and go to state 45
    LPAR        shift, and go to state 35
    LBRACE      shift, and go to state 46
    IF          shift, and go to state 48
    WHILE       shift, and go to state 49
    RETURN      shift, and go to state 50
    IDENTIFIER  shift, and go to state 36
    NATURAL     shift, and go to state 37
    DECIMAL     shift, and go to state 38
    CHRLIT      shift, and go to state 39
    NOT         shift, and go to state 40

    Statement  go to state 133
    Expr       go to state 55


State 131

   38 Statement: WHILE LPAR Expr RPAR • Statement

    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    SEMI        shift, and go to state 45
    LPAR        shift, and go to state 35
    LBRACE      shift, and go to state 46
    IF          shift, and go to state 48
    WHILE       shift, and go to state 49
    RETURN      shift, and go to state 50
    IDENTIFIER  shift, and go to state 36
    NATURAL     shift, and go to state 37
    DECIMAL     shift, and go to state 38
    CHRLIT      shift, and go to state 39
    NOT         shift, and go to state 40

    Statement  go to state 134
    Expr       go to state 55


State 132

   43 Expr: Expr • ASSIGN Expr
   44     | Expr • COMMA Expr
   44     | Expr COMMA Expr •
   45     | Expr • PLUS Expr
   46     | Expr • MINUS Expr
   47     | Expr • MUL Expr
   48     | Expr • DIV Expr
   49     | Expr • MOD Expr
   50     | Expr • OR Expr
   51     | Expr • AND Expr
   52     | Expr • BITWISEAND Expr
   53     | Expr • BITWISEOR Expr
   54     | Expr • BITWISEXOR Expr
   55     | Expr • EQ Expr
   56     | Expr • NE Expr
   57     | Expr • LE Expr
   58     | Expr • GE Expr
   59     | Expr • LT Expr
   60     | Expr • GT Expr
   74 Expr3: COMMA Expr •

    PLUS        shift, and go to state 64
    MINUS       shift, and go to state 65
    MUL         shift, and go to state 66
    DIV         shift, and go to state 67
    ASSIGN      shift, and go to state 68
    OR          shift, and go to state 70
    AND         shift, and go to state 71
    BITWISEOR   shift, and go to state 72
    BITWISEXOR  shift, and go to state 73
    BITWISEAND  shift, and go to state 74
    EQ          shift, and go to state 75
    NE          shift, and go to state 76
    LT          shift, and go to state 77
    GT          shift, and go to state 78
    LE          shift, and go to state 79
    GE          shift, and go to state 80
    MOD         shift, and go to state 81

    RPAR      reduce using rule 44 (Expr)
    RPAR      [reduce using rule 74 (Expr3)]
    $default  reduce using rule 44 (Expr)

    reduce/reduce conflict on token RPAR:
       44 Expr: Expr COMMA Expr •
       74 Expr3: COMMA Expr •
      Example: Expr COMMA Expr •
      First reduce derivation
        Expr2
        ↳ 71: Expr
              ↳ 44: Expr COMMA Expr •
      Second reduce derivation
        Expr2
        ↳ 72: Expr Expr3
                   ↳ 74: COMMA Expr •



State 133

   36 Statement: IF LPAR Expr RPAR Statement •
   37          | IF LPAR Expr RPAR Statement • ELSE Statement

    ELSE  shift, and go to state 135

    ELSE      [reduce using rule 36 (Statement)]
    $default  reduce using rule 36 (Statement)

    shift/reduce conflict on token ELSE:
       36 Statement: IF LPAR Expr RPAR Statement •
       37 Statement: IF LPAR Expr RPAR Statement • ELSE Statement
      Example: IF LPAR Expr RPAR IF LPAR Expr RPAR Statement • ELSE Statement
      Shift derivation
        Statement
        ↳ 36: IF LPAR Expr RPAR Statement
                                ↳ 37: IF LPAR Expr RPAR Statement • ELSE Statement
      Reduce derivation
        Statement
        ↳ 37: IF LPAR Expr RPAR Statement                           ELSE Statement
                                ↳ 36: IF LPAR Expr RPAR Statement •



State 134

   38 Statement: WHILE LPAR Expr RPAR Statement •

    $default  reduce using rule 38 (Statement)


State 135

   37 Statement: IF LPAR Expr RPAR Statement ELSE • Statement

    PLUS        shift, and go to state 33
    MINUS       shift, and go to state 34
    SEMI        shift, and go to state 45
    LPAR        shift, and go to state 35
    LBRACE      shift, and go to state 46
    IF          shift, and go to state 48
    WHILE       shift, and go to state 49
    RETURN      shift, and go to state 50
    IDENTIFIER  shift, and go to state 36
    NATURAL     shift, and go to state 37
    DECIMAL     shift, and go to state 38
    CHRLIT      shift, and go to state 39
    NOT         shift, and go to state 40

    Statement  go to state 136
    Expr       go to state 55


State 136

   37 Statement: IF LPAR Expr RPAR Statement ELSE Statement •

    $default  reduce using rule 37 (Statement)
