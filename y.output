Terminals unused in grammar

    LBRACKET
    RBRACKET
    '+'
    '-'


State 37 conflicts: 1 shift/reduce
State 54 conflicts: 18 shift/reduce
State 55 conflicts: 18 shift/reduce
State 56 conflicts: 18 shift/reduce
State 89 conflicts: 18 shift/reduce
State 90 conflicts: 18 shift/reduce
State 91 conflicts: 18 shift/reduce
State 92 conflicts: 18 shift/reduce
State 93 conflicts: 18 shift/reduce
State 94 conflicts: 18 shift/reduce
State 95 conflicts: 18 shift/reduce
State 96 conflicts: 18 shift/reduce
State 97 conflicts: 18 shift/reduce
State 98 conflicts: 18 shift/reduce
State 99 conflicts: 18 shift/reduce
State 100 conflicts: 18 shift/reduce
State 101 conflicts: 18 shift/reduce
State 102 conflicts: 18 shift/reduce
State 103 conflicts: 18 shift/reduce
State 104 conflicts: 18 shift/reduce
State 105 conflicts: 18 shift/reduce
State 106 conflicts: 18 shift/reduce
State 116 conflicts: 18 shift/reduce, 1 reduce/reduce


Grammar

    0 $accept: FunctionsAndDeclarations $end

    1 FunctionsAndDeclarations: FunctionDefinition
    2                         | FunctionDeclaration
    3                         | Declaration
    4                         | FunctionsAndDeclarations FunctionDefinition
    5                         | FunctionsAndDeclarations FunctionDeclaration
    6                         | FunctionsAndDeclarations Declaration

    7 FunctionDefinition: TypeSpec FunctionDeclarator FunctionBody

    8 FunctionBody: LBRACE DeclarationsAndStatements RBRACE

    9 DeclarationsAndStatements: Statement DeclarationsAndStatements
   10                          | Declaration DeclarationsAndStatements
   11                          | Statement
   12                          | Declaration

   13 FunctionDeclaration: TypeSpec FunctionDeclarator SEMI

   14 FunctionDeclarator: IDENTIFIER LPAR ParameterList RPAR

   15 ParameterList: ParameterDeclaration
   16              | ParameterDeclaration COMMA ParameterList

   17 ParameterDeclaration: TypeSpec IDENTIFIER
   18                     | TypeSpec

   19 Declaration: TypeSpec DeclaratorList SEMI

   20 TypeSpec: CHAR
   21         | INT
   22         | VOID
   23         | SHORT
   24         | DOUBLE

   25 DeclaratorList: Declarator
   26               | Declarator COMMA DeclaratorList

   27 Declarator: IDENTIFIER
   28           | IDENTIFIER ASSIGN Expr

   29 Statement: Expr SEMI
   30          | LBRACE Statements RBRACE
   31          | IF LPAR Expr RPAR Statement LOWER_THAN_ELSE
   32          | IF LPAR Expr RPAR Statement ELSE Statement
   33          | WHILE LPAR Expr RPAR Statement
   34          | RETURN SEMI
   35          | RETURN Expr SEMI

   36 Statements: Statement
   37           | Statement Statements

   38 Expr: Expr ASSIGN Expr
   39     | Expr COMMA Expr
   40     | Expr PLUS Expr
   41     | Expr MINUS Expr
   42     | Expr MUL Expr
   43     | Expr DIV Expr
   44     | Expr MOD Expr
   45     | Expr OR Expr
   46     | Expr AND Expr
   47     | Expr BITWISEAND Expr
   48     | Expr BITWISEOR Expr
   49     | Expr BITWISEXOR Expr
   50     | Expr EQ Expr
   51     | Expr NE Expr
   52     | Expr LE Expr
   53     | Expr GE Expr
   54     | Expr LT Expr
   55     | Expr GT Expr
   56     | PLUS Expr
   57     | MINUS Expr
   58     | NOT Expr
   59     | IDENTIFIER LPAR ExprList RPAR
   60     | IDENTIFIER
   61     | NATURAL
   62     | CHRLIT
   63     | DECIMAL
   64     | LPAR Expr RPAR

   65 ExprList: Expr
   66         | Expr COMMA ExprList


Terminals, with rules where they appear

    $end (0) 0
    '+' (43)
    '-' (45)
    error (256)
    CHAR (258) 20
    INT (259) 21
    VOID (260) 22
    SHORT (261) 23
    DOUBLE (262) 24
    IDENTIFIER (263) 14 17 27 28 59 60
    NATURAL (264) 61
    CHRLIT (265) 62
    DECIMAL (266) 63
    LPAR (267) 14 31 32 33 59 64
    RPAR (268) 14 31 32 33 59 64
    LBRACE (269) 8 30
    RBRACE (270) 8 30
    LBRACKET (271)
    RBRACKET (272)
    SEMI (273) 13 19 29 34 35
    COMMA (274) 16 26 39 66
    ASSIGN (275) 28 38
    PLUS (276) 40 56
    MINUS (277) 41 57
    MUL (278) 42
    DIV (279) 43
    MOD (280) 44
    OR (281) 45
    AND (282) 46
    BITWISEAND (283) 47
    BITWISEOR (284) 48
    BITWISEXOR (285) 49
    EQ (286) 50
    NE (287) 51
    LE (288) 52
    GE (289) 53
    LT (290) 54
    GT (291) 55
    NOT (292) 58
    IF (293) 31 32
    ELSE (294) 32
    WHILE (295) 33
    RETURN (296) 34 35
    LOWER_THAN_ELSE (297) 31


Nonterminals, with rules where they appear

    $accept (45)
        on left: 0
    FunctionsAndDeclarations (46)
        on left: 1 2 3 4 5 6
        on right: 0 4 5 6
    FunctionDefinition (47)
        on left: 7
        on right: 1 4
    FunctionBody (48)
        on left: 8
        on right: 7
    DeclarationsAndStatements (49)
        on left: 9 10 11 12
        on right: 8 9 10
    FunctionDeclaration (50)
        on left: 13
        on right: 2 5
    FunctionDeclarator (51)
        on left: 14
        on right: 7 13
    ParameterList (52)
        on left: 15 16
        on right: 14 16
    ParameterDeclaration (53)
        on left: 17 18
        on right: 15 16
    Declaration (54)
        on left: 19
        on right: 3 6 10 12
    TypeSpec (55)
        on left: 20 21 22 23 24
        on right: 7 13 17 18 19
    DeclaratorList (56)
        on left: 25 26
        on right: 19 26
    Declarator (57)
        on left: 27 28
        on right: 25 26
    Statement (58)
        on left: 29 30 31 32 33 34 35
        on right: 9 11 31 32 33 36 37
    Statements (59)
        on left: 36 37
        on right: 30 37
    Expr (60)
        on left: 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64
        on right: 28 29 31 32 33 35 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 64 65 66
    ExprList (61)
        on left: 65 66
        on right: 59 66


State 0

    0 $accept: • FunctionsAndDeclarations $end

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    VOID    shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5

    FunctionsAndDeclarations  go to state 6
    FunctionDefinition        go to state 7
    FunctionDeclaration       go to state 8
    Declaration               go to state 9
    TypeSpec                  go to state 10


State 1

   20 TypeSpec: CHAR •

    $default  reduce using rule 20 (TypeSpec)


State 2

   21 TypeSpec: INT •

    $default  reduce using rule 21 (TypeSpec)


State 3

   22 TypeSpec: VOID •

    $default  reduce using rule 22 (TypeSpec)


State 4

   23 TypeSpec: SHORT •

    $default  reduce using rule 23 (TypeSpec)


State 5

   24 TypeSpec: DOUBLE •

    $default  reduce using rule 24 (TypeSpec)


State 6

    0 $accept: FunctionsAndDeclarations • $end
    4 FunctionsAndDeclarations: FunctionsAndDeclarations • FunctionDefinition
    5                         | FunctionsAndDeclarations • FunctionDeclaration
    6                         | FunctionsAndDeclarations • Declaration

    $end    shift, and go to state 11
    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    VOID    shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5

    FunctionDefinition   go to state 12
    FunctionDeclaration  go to state 13
    Declaration          go to state 14
    TypeSpec             go to state 10


State 7

    1 FunctionsAndDeclarations: FunctionDefinition •

    $default  reduce using rule 1 (FunctionsAndDeclarations)


State 8

    2 FunctionsAndDeclarations: FunctionDeclaration •

    $default  reduce using rule 2 (FunctionsAndDeclarations)


State 9

    3 FunctionsAndDeclarations: Declaration •

    $default  reduce using rule 3 (FunctionsAndDeclarations)


State 10

    7 FunctionDefinition: TypeSpec • FunctionDeclarator FunctionBody
   13 FunctionDeclaration: TypeSpec • FunctionDeclarator SEMI
   19 Declaration: TypeSpec • DeclaratorList SEMI

    IDENTIFIER  shift, and go to state 15

    FunctionDeclarator  go to state 16
    DeclaratorList      go to state 17
    Declarator          go to state 18


State 11

    0 $accept: FunctionsAndDeclarations $end •

    $default  accept


State 12

    4 FunctionsAndDeclarations: FunctionsAndDeclarations FunctionDefinition •

    $default  reduce using rule 4 (FunctionsAndDeclarations)


State 13

    5 FunctionsAndDeclarations: FunctionsAndDeclarations FunctionDeclaration •

    $default  reduce using rule 5 (FunctionsAndDeclarations)


State 14

    6 FunctionsAndDeclarations: FunctionsAndDeclarations Declaration •

    $default  reduce using rule 6 (FunctionsAndDeclarations)


State 15

   14 FunctionDeclarator: IDENTIFIER • LPAR ParameterList RPAR
   27 Declarator: IDENTIFIER •
   28           | IDENTIFIER • ASSIGN Expr

    LPAR    shift, and go to state 19
    ASSIGN  shift, and go to state 20

    $default  reduce using rule 27 (Declarator)


State 16

    7 FunctionDefinition: TypeSpec FunctionDeclarator • FunctionBody
   13 FunctionDeclaration: TypeSpec FunctionDeclarator • SEMI

    LBRACE  shift, and go to state 21
    SEMI    shift, and go to state 22

    FunctionBody  go to state 23


State 17

   19 Declaration: TypeSpec DeclaratorList • SEMI

    SEMI  shift, and go to state 24


State 18

   25 DeclaratorList: Declarator •
   26               | Declarator • COMMA DeclaratorList

    COMMA  shift, and go to state 25

    $default  reduce using rule 25 (DeclaratorList)


State 19

   14 FunctionDeclarator: IDENTIFIER LPAR • ParameterList RPAR

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    VOID    shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5

    ParameterList         go to state 26
    ParameterDeclaration  go to state 27
    TypeSpec              go to state 28


State 20

   28 Declarator: IDENTIFIER ASSIGN • Expr

    IDENTIFIER  shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    DECIMAL     shift, and go to state 32
    LPAR        shift, and go to state 33
    PLUS        shift, and go to state 34
    MINUS       shift, and go to state 35
    NOT         shift, and go to state 36

    Expr  go to state 37


State 21

    8 FunctionBody: LBRACE • DeclarationsAndStatements RBRACE

    CHAR        shift, and go to state 1
    INT         shift, and go to state 2
    VOID        shift, and go to state 3
    SHORT       shift, and go to state 4
    DOUBLE      shift, and go to state 5
    IDENTIFIER  shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    DECIMAL     shift, and go to state 32
    LPAR        shift, and go to state 33
    LBRACE      shift, and go to state 38
    PLUS        shift, and go to state 34
    MINUS       shift, and go to state 35
    NOT         shift, and go to state 36
    IF          shift, and go to state 39
    WHILE       shift, and go to state 40
    RETURN      shift, and go to state 41

    DeclarationsAndStatements  go to state 42
    Declaration                go to state 43
    TypeSpec                   go to state 44
    Statement                  go to state 45
    Expr                       go to state 46


State 22

   13 FunctionDeclaration: TypeSpec FunctionDeclarator SEMI •

    $default  reduce using rule 13 (FunctionDeclaration)


State 23

    7 FunctionDefinition: TypeSpec FunctionDeclarator FunctionBody •

    $default  reduce using rule 7 (FunctionDefinition)


State 24

   19 Declaration: TypeSpec DeclaratorList SEMI •

    $default  reduce using rule 19 (Declaration)


State 25

   26 DeclaratorList: Declarator COMMA • DeclaratorList

    IDENTIFIER  shift, and go to state 47

    DeclaratorList  go to state 48
    Declarator      go to state 18


State 26

   14 FunctionDeclarator: IDENTIFIER LPAR ParameterList • RPAR

    RPAR  shift, and go to state 49


State 27

   15 ParameterList: ParameterDeclaration •
   16              | ParameterDeclaration • COMMA ParameterList

    COMMA  shift, and go to state 50

    $default  reduce using rule 15 (ParameterList)


State 28

   17 ParameterDeclaration: TypeSpec • IDENTIFIER
   18                     | TypeSpec •

    IDENTIFIER  shift, and go to state 51

    $default  reduce using rule 18 (ParameterDeclaration)


State 29

   59 Expr: IDENTIFIER • LPAR ExprList RPAR
   60     | IDENTIFIER •

    LPAR  shift, and go to state 52

    $default  reduce using rule 60 (Expr)


State 30

   61 Expr: NATURAL •

    $default  reduce using rule 61 (Expr)


State 31

   62 Expr: CHRLIT •

    $default  reduce using rule 62 (Expr)


State 32

   63 Expr: DECIMAL •

    $default  reduce using rule 63 (Expr)


State 33

   64 Expr: LPAR • Expr RPAR

    IDENTIFIER  shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    DECIMAL     shift, and go to state 32
    LPAR        shift, and go to state 33
    PLUS        shift, and go to state 34
    MINUS       shift, and go to state 35
    NOT         shift, and go to state 36

    Expr  go to state 53


State 34

   56 Expr: PLUS • Expr

    IDENTIFIER  shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    DECIMAL     shift, and go to state 32
    LPAR        shift, and go to state 33
    PLUS        shift, and go to state 34
    MINUS       shift, and go to state 35
    NOT         shift, and go to state 36

    Expr  go to state 54


State 35

   57 Expr: MINUS • Expr

    IDENTIFIER  shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    DECIMAL     shift, and go to state 32
    LPAR        shift, and go to state 33
    PLUS        shift, and go to state 34
    MINUS       shift, and go to state 35
    NOT         shift, and go to state 36

    Expr  go to state 55


State 36

   58 Expr: NOT • Expr

    IDENTIFIER  shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    DECIMAL     shift, and go to state 32
    LPAR        shift, and go to state 33
    PLUS        shift, and go to state 34
    MINUS       shift, and go to state 35
    NOT         shift, and go to state 36

    Expr  go to state 56


State 37

   28 Declarator: IDENTIFIER ASSIGN Expr •
   38 Expr: Expr • ASSIGN Expr
   39     | Expr • COMMA Expr
   40     | Expr • PLUS Expr
   41     | Expr • MINUS Expr
   42     | Expr • MUL Expr
   43     | Expr • DIV Expr
   44     | Expr • MOD Expr
   45     | Expr • OR Expr
   46     | Expr • AND Expr
   47     | Expr • BITWISEAND Expr
   48     | Expr • BITWISEOR Expr
   49     | Expr • BITWISEXOR Expr
   50     | Expr • EQ Expr
   51     | Expr • NE Expr
   52     | Expr • LE Expr
   53     | Expr • GE Expr
   54     | Expr • LT Expr
   55     | Expr • GT Expr

    COMMA       shift, and go to state 57
    ASSIGN      shift, and go to state 58
    PLUS        shift, and go to state 59
    MINUS       shift, and go to state 60
    MUL         shift, and go to state 61
    DIV         shift, and go to state 62
    MOD         shift, and go to state 63
    OR          shift, and go to state 64
    AND         shift, and go to state 65
    BITWISEAND  shift, and go to state 66
    BITWISEOR   shift, and go to state 67
    BITWISEXOR  shift, and go to state 68
    EQ          shift, and go to state 69
    NE          shift, and go to state 70
    LE          shift, and go to state 71
    GE          shift, and go to state 72
    LT          shift, and go to state 73
    GT          shift, and go to state 74

    COMMA     [reduce using rule 28 (Declarator)]
    $default  reduce using rule 28 (Declarator)


State 38

   30 Statement: LBRACE • Statements RBRACE

    IDENTIFIER  shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    DECIMAL     shift, and go to state 32
    LPAR        shift, and go to state 33
    LBRACE      shift, and go to state 38
    PLUS        shift, and go to state 34
    MINUS       shift, and go to state 35
    NOT         shift, and go to state 36
    IF          shift, and go to state 39
    WHILE       shift, and go to state 40
    RETURN      shift, and go to state 41

    Statement   go to state 75
    Statements  go to state 76
    Expr        go to state 46


State 39

   31 Statement: IF • LPAR Expr RPAR Statement LOWER_THAN_ELSE
   32          | IF • LPAR Expr RPAR Statement ELSE Statement

    LPAR  shift, and go to state 77


State 40

   33 Statement: WHILE • LPAR Expr RPAR Statement

    LPAR  shift, and go to state 78


State 41

   34 Statement: RETURN • SEMI
   35          | RETURN • Expr SEMI

    IDENTIFIER  shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    DECIMAL     shift, and go to state 32
    LPAR        shift, and go to state 33
    SEMI        shift, and go to state 79
    PLUS        shift, and go to state 34
    MINUS       shift, and go to state 35
    NOT         shift, and go to state 36

    Expr  go to state 80


State 42

    8 FunctionBody: LBRACE DeclarationsAndStatements • RBRACE

    RBRACE  shift, and go to state 81


State 43

   10 DeclarationsAndStatements: Declaration • DeclarationsAndStatements
   12                          | Declaration •

    CHAR        shift, and go to state 1
    INT         shift, and go to state 2
    VOID        shift, and go to state 3
    SHORT       shift, and go to state 4
    DOUBLE      shift, and go to state 5
    IDENTIFIER  shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    DECIMAL     shift, and go to state 32
    LPAR        shift, and go to state 33
    LBRACE      shift, and go to state 38
    PLUS        shift, and go to state 34
    MINUS       shift, and go to state 35
    NOT         shift, and go to state 36
    IF          shift, and go to state 39
    WHILE       shift, and go to state 40
    RETURN      shift, and go to state 41

    $default  reduce using rule 12 (DeclarationsAndStatements)

    DeclarationsAndStatements  go to state 82
    Declaration                go to state 43
    TypeSpec                   go to state 44
    Statement                  go to state 45
    Expr                       go to state 46


State 44

   19 Declaration: TypeSpec • DeclaratorList SEMI

    IDENTIFIER  shift, and go to state 47

    DeclaratorList  go to state 17
    Declarator      go to state 18


State 45

    9 DeclarationsAndStatements: Statement • DeclarationsAndStatements
   11                          | Statement •

    CHAR        shift, and go to state 1
    INT         shift, and go to state 2
    VOID        shift, and go to state 3
    SHORT       shift, and go to state 4
    DOUBLE      shift, and go to state 5
    IDENTIFIER  shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    DECIMAL     shift, and go to state 32
    LPAR        shift, and go to state 33
    LBRACE      shift, and go to state 38
    PLUS        shift, and go to state 34
    MINUS       shift, and go to state 35
    NOT         shift, and go to state 36
    IF          shift, and go to state 39
    WHILE       shift, and go to state 40
    RETURN      shift, and go to state 41

    $default  reduce using rule 11 (DeclarationsAndStatements)

    DeclarationsAndStatements  go to state 83
    Declaration                go to state 43
    TypeSpec                   go to state 44
    Statement                  go to state 45
    Expr                       go to state 46


State 46

   29 Statement: Expr • SEMI
   38 Expr: Expr • ASSIGN Expr
   39     | Expr • COMMA Expr
   40     | Expr • PLUS Expr
   41     | Expr • MINUS Expr
   42     | Expr • MUL Expr
   43     | Expr • DIV Expr
   44     | Expr • MOD Expr
   45     | Expr • OR Expr
   46     | Expr • AND Expr
   47     | Expr • BITWISEAND Expr
   48     | Expr • BITWISEOR Expr
   49     | Expr • BITWISEXOR Expr
   50     | Expr • EQ Expr
   51     | Expr • NE Expr
   52     | Expr • LE Expr
   53     | Expr • GE Expr
   54     | Expr • LT Expr
   55     | Expr • GT Expr

    SEMI        shift, and go to state 84
    COMMA       shift, and go to state 57
    ASSIGN      shift, and go to state 58
    PLUS        shift, and go to state 59
    MINUS       shift, and go to state 60
    MUL         shift, and go to state 61
    DIV         shift, and go to state 62
    MOD         shift, and go to state 63
    OR          shift, and go to state 64
    AND         shift, and go to state 65
    BITWISEAND  shift, and go to state 66
    BITWISEOR   shift, and go to state 67
    BITWISEXOR  shift, and go to state 68
    EQ          shift, and go to state 69
    NE          shift, and go to state 70
    LE          shift, and go to state 71
    GE          shift, and go to state 72
    LT          shift, and go to state 73
    GT          shift, and go to state 74


State 47

   27 Declarator: IDENTIFIER •
   28           | IDENTIFIER • ASSIGN Expr

    ASSIGN  shift, and go to state 20

    $default  reduce using rule 27 (Declarator)


State 48

   26 DeclaratorList: Declarator COMMA DeclaratorList •

    $default  reduce using rule 26 (DeclaratorList)


State 49

   14 FunctionDeclarator: IDENTIFIER LPAR ParameterList RPAR •

    $default  reduce using rule 14 (FunctionDeclarator)


State 50

   16 ParameterList: ParameterDeclaration COMMA • ParameterList

    CHAR    shift, and go to state 1
    INT     shift, and go to state 2
    VOID    shift, and go to state 3
    SHORT   shift, and go to state 4
    DOUBLE  shift, and go to state 5

    ParameterList         go to state 85
    ParameterDeclaration  go to state 27
    TypeSpec              go to state 28


State 51

   17 ParameterDeclaration: TypeSpec IDENTIFIER •

    $default  reduce using rule 17 (ParameterDeclaration)


State 52

   59 Expr: IDENTIFIER LPAR • ExprList RPAR

    IDENTIFIER  shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    DECIMAL     shift, and go to state 32
    LPAR        shift, and go to state 33
    PLUS        shift, and go to state 34
    MINUS       shift, and go to state 35
    NOT         shift, and go to state 36

    Expr      go to state 86
    ExprList  go to state 87


State 53

   38 Expr: Expr • ASSIGN Expr
   39     | Expr • COMMA Expr
   40     | Expr • PLUS Expr
   41     | Expr • MINUS Expr
   42     | Expr • MUL Expr
   43     | Expr • DIV Expr
   44     | Expr • MOD Expr
   45     | Expr • OR Expr
   46     | Expr • AND Expr
   47     | Expr • BITWISEAND Expr
   48     | Expr • BITWISEOR Expr
   49     | Expr • BITWISEXOR Expr
   50     | Expr • EQ Expr
   51     | Expr • NE Expr
   52     | Expr • LE Expr
   53     | Expr • GE Expr
   54     | Expr • LT Expr
   55     | Expr • GT Expr
   64     | LPAR Expr • RPAR

    RPAR        shift, and go to state 88
    COMMA       shift, and go to state 57
    ASSIGN      shift, and go to state 58
    PLUS        shift, and go to state 59
    MINUS       shift, and go to state 60
    MUL         shift, and go to state 61
    DIV         shift, and go to state 62
    MOD         shift, and go to state 63
    OR          shift, and go to state 64
    AND         shift, and go to state 65
    BITWISEAND  shift, and go to state 66
    BITWISEOR   shift, and go to state 67
    BITWISEXOR  shift, and go to state 68
    EQ          shift, and go to state 69
    NE          shift, and go to state 70
    LE          shift, and go to state 71
    GE          shift, and go to state 72
    LT          shift, and go to state 73
    GT          shift, and go to state 74


State 54

   38 Expr: Expr • ASSIGN Expr
   39     | Expr • COMMA Expr
   40     | Expr • PLUS Expr
   41     | Expr • MINUS Expr
   42     | Expr • MUL Expr
   43     | Expr • DIV Expr
   44     | Expr • MOD Expr
   45     | Expr • OR Expr
   46     | Expr • AND Expr
   47     | Expr • BITWISEAND Expr
   48     | Expr • BITWISEOR Expr
   49     | Expr • BITWISEXOR Expr
   50     | Expr • EQ Expr
   51     | Expr • NE Expr
   52     | Expr • LE Expr
   53     | Expr • GE Expr
   54     | Expr • LT Expr
   55     | Expr • GT Expr
   56     | PLUS Expr •

    COMMA       shift, and go to state 57
    ASSIGN      shift, and go to state 58
    PLUS        shift, and go to state 59
    MINUS       shift, and go to state 60
    MUL         shift, and go to state 61
    DIV         shift, and go to state 62
    MOD         shift, and go to state 63
    OR          shift, and go to state 64
    AND         shift, and go to state 65
    BITWISEAND  shift, and go to state 66
    BITWISEOR   shift, and go to state 67
    BITWISEXOR  shift, and go to state 68
    EQ          shift, and go to state 69
    NE          shift, and go to state 70
    LE          shift, and go to state 71
    GE          shift, and go to state 72
    LT          shift, and go to state 73
    GT          shift, and go to state 74

    COMMA       [reduce using rule 56 (Expr)]
    ASSIGN      [reduce using rule 56 (Expr)]
    PLUS        [reduce using rule 56 (Expr)]
    MINUS       [reduce using rule 56 (Expr)]
    MUL         [reduce using rule 56 (Expr)]
    DIV         [reduce using rule 56 (Expr)]
    MOD         [reduce using rule 56 (Expr)]
    OR          [reduce using rule 56 (Expr)]
    AND         [reduce using rule 56 (Expr)]
    BITWISEAND  [reduce using rule 56 (Expr)]
    BITWISEOR   [reduce using rule 56 (Expr)]
    BITWISEXOR  [reduce using rule 56 (Expr)]
    EQ          [reduce using rule 56 (Expr)]
    NE          [reduce using rule 56 (Expr)]
    LE          [reduce using rule 56 (Expr)]
    GE          [reduce using rule 56 (Expr)]
    LT          [reduce using rule 56 (Expr)]
    GT          [reduce using rule 56 (Expr)]
    $default    reduce using rule 56 (Expr)


State 55

   38 Expr: Expr • ASSIGN Expr
   39     | Expr • COMMA Expr
   40     | Expr • PLUS Expr
   41     | Expr • MINUS Expr
   42     | Expr • MUL Expr
   43     | Expr • DIV Expr
   44     | Expr • MOD Expr
   45     | Expr • OR Expr
   46     | Expr • AND Expr
   47     | Expr • BITWISEAND Expr
   48     | Expr • BITWISEOR Expr
   49     | Expr • BITWISEXOR Expr
   50     | Expr • EQ Expr
   51     | Expr • NE Expr
   52     | Expr • LE Expr
   53     | Expr • GE Expr
   54     | Expr • LT Expr
   55     | Expr • GT Expr
   57     | MINUS Expr •

    COMMA       shift, and go to state 57
    ASSIGN      shift, and go to state 58
    PLUS        shift, and go to state 59
    MINUS       shift, and go to state 60
    MUL         shift, and go to state 61
    DIV         shift, and go to state 62
    MOD         shift, and go to state 63
    OR          shift, and go to state 64
    AND         shift, and go to state 65
    BITWISEAND  shift, and go to state 66
    BITWISEOR   shift, and go to state 67
    BITWISEXOR  shift, and go to state 68
    EQ          shift, and go to state 69
    NE          shift, and go to state 70
    LE          shift, and go to state 71
    GE          shift, and go to state 72
    LT          shift, and go to state 73
    GT          shift, and go to state 74

    COMMA       [reduce using rule 57 (Expr)]
    ASSIGN      [reduce using rule 57 (Expr)]
    PLUS        [reduce using rule 57 (Expr)]
    MINUS       [reduce using rule 57 (Expr)]
    MUL         [reduce using rule 57 (Expr)]
    DIV         [reduce using rule 57 (Expr)]
    MOD         [reduce using rule 57 (Expr)]
    OR          [reduce using rule 57 (Expr)]
    AND         [reduce using rule 57 (Expr)]
    BITWISEAND  [reduce using rule 57 (Expr)]
    BITWISEOR   [reduce using rule 57 (Expr)]
    BITWISEXOR  [reduce using rule 57 (Expr)]
    EQ          [reduce using rule 57 (Expr)]
    NE          [reduce using rule 57 (Expr)]
    LE          [reduce using rule 57 (Expr)]
    GE          [reduce using rule 57 (Expr)]
    LT          [reduce using rule 57 (Expr)]
    GT          [reduce using rule 57 (Expr)]
    $default    reduce using rule 57 (Expr)


State 56

   38 Expr: Expr • ASSIGN Expr
   39     | Expr • COMMA Expr
   40     | Expr • PLUS Expr
   41     | Expr • MINUS Expr
   42     | Expr • MUL Expr
   43     | Expr • DIV Expr
   44     | Expr • MOD Expr
   45     | Expr • OR Expr
   46     | Expr • AND Expr
   47     | Expr • BITWISEAND Expr
   48     | Expr • BITWISEOR Expr
   49     | Expr • BITWISEXOR Expr
   50     | Expr • EQ Expr
   51     | Expr • NE Expr
   52     | Expr • LE Expr
   53     | Expr • GE Expr
   54     | Expr • LT Expr
   55     | Expr • GT Expr
   58     | NOT Expr •

    COMMA       shift, and go to state 57
    ASSIGN      shift, and go to state 58
    PLUS        shift, and go to state 59
    MINUS       shift, and go to state 60
    MUL         shift, and go to state 61
    DIV         shift, and go to state 62
    MOD         shift, and go to state 63
    OR          shift, and go to state 64
    AND         shift, and go to state 65
    BITWISEAND  shift, and go to state 66
    BITWISEOR   shift, and go to state 67
    BITWISEXOR  shift, and go to state 68
    EQ          shift, and go to state 69
    NE          shift, and go to state 70
    LE          shift, and go to state 71
    GE          shift, and go to state 72
    LT          shift, and go to state 73
    GT          shift, and go to state 74

    COMMA       [reduce using rule 58 (Expr)]
    ASSIGN      [reduce using rule 58 (Expr)]
    PLUS        [reduce using rule 58 (Expr)]
    MINUS       [reduce using rule 58 (Expr)]
    MUL         [reduce using rule 58 (Expr)]
    DIV         [reduce using rule 58 (Expr)]
    MOD         [reduce using rule 58 (Expr)]
    OR          [reduce using rule 58 (Expr)]
    AND         [reduce using rule 58 (Expr)]
    BITWISEAND  [reduce using rule 58 (Expr)]
    BITWISEOR   [reduce using rule 58 (Expr)]
    BITWISEXOR  [reduce using rule 58 (Expr)]
    EQ          [reduce using rule 58 (Expr)]
    NE          [reduce using rule 58 (Expr)]
    LE          [reduce using rule 58 (Expr)]
    GE          [reduce using rule 58 (Expr)]
    LT          [reduce using rule 58 (Expr)]
    GT          [reduce using rule 58 (Expr)]
    $default    reduce using rule 58 (Expr)


State 57

   39 Expr: Expr COMMA • Expr

    IDENTIFIER  shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    DECIMAL     shift, and go to state 32
    LPAR        shift, and go to state 33
    PLUS        shift, and go to state 34
    MINUS       shift, and go to state 35
    NOT         shift, and go to state 36

    Expr  go to state 89


State 58

   38 Expr: Expr ASSIGN • Expr

    IDENTIFIER  shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    DECIMAL     shift, and go to state 32
    LPAR        shift, and go to state 33
    PLUS        shift, and go to state 34
    MINUS       shift, and go to state 35
    NOT         shift, and go to state 36

    Expr  go to state 90


State 59

   40 Expr: Expr PLUS • Expr

    IDENTIFIER  shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    DECIMAL     shift, and go to state 32
    LPAR        shift, and go to state 33
    PLUS        shift, and go to state 34
    MINUS       shift, and go to state 35
    NOT         shift, and go to state 36

    Expr  go to state 91


State 60

   41 Expr: Expr MINUS • Expr

    IDENTIFIER  shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    DECIMAL     shift, and go to state 32
    LPAR        shift, and go to state 33
    PLUS        shift, and go to state 34
    MINUS       shift, and go to state 35
    NOT         shift, and go to state 36

    Expr  go to state 92


State 61

   42 Expr: Expr MUL • Expr

    IDENTIFIER  shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    DECIMAL     shift, and go to state 32
    LPAR        shift, and go to state 33
    PLUS        shift, and go to state 34
    MINUS       shift, and go to state 35
    NOT         shift, and go to state 36

    Expr  go to state 93


State 62

   43 Expr: Expr DIV • Expr

    IDENTIFIER  shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    DECIMAL     shift, and go to state 32
    LPAR        shift, and go to state 33
    PLUS        shift, and go to state 34
    MINUS       shift, and go to state 35
    NOT         shift, and go to state 36

    Expr  go to state 94


State 63

   44 Expr: Expr MOD • Expr

    IDENTIFIER  shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    DECIMAL     shift, and go to state 32
    LPAR        shift, and go to state 33
    PLUS        shift, and go to state 34
    MINUS       shift, and go to state 35
    NOT         shift, and go to state 36

    Expr  go to state 95


State 64

   45 Expr: Expr OR • Expr

    IDENTIFIER  shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    DECIMAL     shift, and go to state 32
    LPAR        shift, and go to state 33
    PLUS        shift, and go to state 34
    MINUS       shift, and go to state 35
    NOT         shift, and go to state 36

    Expr  go to state 96


State 65

   46 Expr: Expr AND • Expr

    IDENTIFIER  shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    DECIMAL     shift, and go to state 32
    LPAR        shift, and go to state 33
    PLUS        shift, and go to state 34
    MINUS       shift, and go to state 35
    NOT         shift, and go to state 36

    Expr  go to state 97


State 66

   47 Expr: Expr BITWISEAND • Expr

    IDENTIFIER  shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    DECIMAL     shift, and go to state 32
    LPAR        shift, and go to state 33
    PLUS        shift, and go to state 34
    MINUS       shift, and go to state 35
    NOT         shift, and go to state 36

    Expr  go to state 98


State 67

   48 Expr: Expr BITWISEOR • Expr

    IDENTIFIER  shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    DECIMAL     shift, and go to state 32
    LPAR        shift, and go to state 33
    PLUS        shift, and go to state 34
    MINUS       shift, and go to state 35
    NOT         shift, and go to state 36

    Expr  go to state 99


State 68

   49 Expr: Expr BITWISEXOR • Expr

    IDENTIFIER  shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    DECIMAL     shift, and go to state 32
    LPAR        shift, and go to state 33
    PLUS        shift, and go to state 34
    MINUS       shift, and go to state 35
    NOT         shift, and go to state 36

    Expr  go to state 100


State 69

   50 Expr: Expr EQ • Expr

    IDENTIFIER  shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    DECIMAL     shift, and go to state 32
    LPAR        shift, and go to state 33
    PLUS        shift, and go to state 34
    MINUS       shift, and go to state 35
    NOT         shift, and go to state 36

    Expr  go to state 101


State 70

   51 Expr: Expr NE • Expr

    IDENTIFIER  shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    DECIMAL     shift, and go to state 32
    LPAR        shift, and go to state 33
    PLUS        shift, and go to state 34
    MINUS       shift, and go to state 35
    NOT         shift, and go to state 36

    Expr  go to state 102


State 71

   52 Expr: Expr LE • Expr

    IDENTIFIER  shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    DECIMAL     shift, and go to state 32
    LPAR        shift, and go to state 33
    PLUS        shift, and go to state 34
    MINUS       shift, and go to state 35
    NOT         shift, and go to state 36

    Expr  go to state 103


State 72

   53 Expr: Expr GE • Expr

    IDENTIFIER  shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    DECIMAL     shift, and go to state 32
    LPAR        shift, and go to state 33
    PLUS        shift, and go to state 34
    MINUS       shift, and go to state 35
    NOT         shift, and go to state 36

    Expr  go to state 104


State 73

   54 Expr: Expr LT • Expr

    IDENTIFIER  shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    DECIMAL     shift, and go to state 32
    LPAR        shift, and go to state 33
    PLUS        shift, and go to state 34
    MINUS       shift, and go to state 35
    NOT         shift, and go to state 36

    Expr  go to state 105


State 74

   55 Expr: Expr GT • Expr

    IDENTIFIER  shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    DECIMAL     shift, and go to state 32
    LPAR        shift, and go to state 33
    PLUS        shift, and go to state 34
    MINUS       shift, and go to state 35
    NOT         shift, and go to state 36

    Expr  go to state 106


State 75

   36 Statements: Statement •
   37           | Statement • Statements

    IDENTIFIER  shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    DECIMAL     shift, and go to state 32
    LPAR        shift, and go to state 33
    LBRACE      shift, and go to state 38
    PLUS        shift, and go to state 34
    MINUS       shift, and go to state 35
    NOT         shift, and go to state 36
    IF          shift, and go to state 39
    WHILE       shift, and go to state 40
    RETURN      shift, and go to state 41

    $default  reduce using rule 36 (Statements)

    Statement   go to state 75
    Statements  go to state 107
    Expr        go to state 46


State 76

   30 Statement: LBRACE Statements • RBRACE

    RBRACE  shift, and go to state 108


State 77

   31 Statement: IF LPAR • Expr RPAR Statement LOWER_THAN_ELSE
   32          | IF LPAR • Expr RPAR Statement ELSE Statement

    IDENTIFIER  shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    DECIMAL     shift, and go to state 32
    LPAR        shift, and go to state 33
    PLUS        shift, and go to state 34
    MINUS       shift, and go to state 35
    NOT         shift, and go to state 36

    Expr  go to state 109


State 78

   33 Statement: WHILE LPAR • Expr RPAR Statement

    IDENTIFIER  shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    DECIMAL     shift, and go to state 32
    LPAR        shift, and go to state 33
    PLUS        shift, and go to state 34
    MINUS       shift, and go to state 35
    NOT         shift, and go to state 36

    Expr  go to state 110


State 79

   34 Statement: RETURN SEMI •

    $default  reduce using rule 34 (Statement)


State 80

   35 Statement: RETURN Expr • SEMI
   38 Expr: Expr • ASSIGN Expr
   39     | Expr • COMMA Expr
   40     | Expr • PLUS Expr
   41     | Expr • MINUS Expr
   42     | Expr • MUL Expr
   43     | Expr • DIV Expr
   44     | Expr • MOD Expr
   45     | Expr • OR Expr
   46     | Expr • AND Expr
   47     | Expr • BITWISEAND Expr
   48     | Expr • BITWISEOR Expr
   49     | Expr • BITWISEXOR Expr
   50     | Expr • EQ Expr
   51     | Expr • NE Expr
   52     | Expr • LE Expr
   53     | Expr • GE Expr
   54     | Expr • LT Expr
   55     | Expr • GT Expr

    SEMI        shift, and go to state 111
    COMMA       shift, and go to state 57
    ASSIGN      shift, and go to state 58
    PLUS        shift, and go to state 59
    MINUS       shift, and go to state 60
    MUL         shift, and go to state 61
    DIV         shift, and go to state 62
    MOD         shift, and go to state 63
    OR          shift, and go to state 64
    AND         shift, and go to state 65
    BITWISEAND  shift, and go to state 66
    BITWISEOR   shift, and go to state 67
    BITWISEXOR  shift, and go to state 68
    EQ          shift, and go to state 69
    NE          shift, and go to state 70
    LE          shift, and go to state 71
    GE          shift, and go to state 72
    LT          shift, and go to state 73
    GT          shift, and go to state 74


State 81

    8 FunctionBody: LBRACE DeclarationsAndStatements RBRACE •

    $default  reduce using rule 8 (FunctionBody)


State 82

   10 DeclarationsAndStatements: Declaration DeclarationsAndStatements •

    $default  reduce using rule 10 (DeclarationsAndStatements)


State 83

    9 DeclarationsAndStatements: Statement DeclarationsAndStatements •

    $default  reduce using rule 9 (DeclarationsAndStatements)


State 84

   29 Statement: Expr SEMI •

    $default  reduce using rule 29 (Statement)


State 85

   16 ParameterList: ParameterDeclaration COMMA ParameterList •

    $default  reduce using rule 16 (ParameterList)


State 86

   38 Expr: Expr • ASSIGN Expr
   39     | Expr • COMMA Expr
   40     | Expr • PLUS Expr
   41     | Expr • MINUS Expr
   42     | Expr • MUL Expr
   43     | Expr • DIV Expr
   44     | Expr • MOD Expr
   45     | Expr • OR Expr
   46     | Expr • AND Expr
   47     | Expr • BITWISEAND Expr
   48     | Expr • BITWISEOR Expr
   49     | Expr • BITWISEXOR Expr
   50     | Expr • EQ Expr
   51     | Expr • NE Expr
   52     | Expr • LE Expr
   53     | Expr • GE Expr
   54     | Expr • LT Expr
   55     | Expr • GT Expr
   65 ExprList: Expr •
   66         | Expr • COMMA ExprList

    COMMA       shift, and go to state 112
    ASSIGN      shift, and go to state 58
    PLUS        shift, and go to state 59
    MINUS       shift, and go to state 60
    MUL         shift, and go to state 61
    DIV         shift, and go to state 62
    MOD         shift, and go to state 63
    OR          shift, and go to state 64
    AND         shift, and go to state 65
    BITWISEAND  shift, and go to state 66
    BITWISEOR   shift, and go to state 67
    BITWISEXOR  shift, and go to state 68
    EQ          shift, and go to state 69
    NE          shift, and go to state 70
    LE          shift, and go to state 71
    GE          shift, and go to state 72
    LT          shift, and go to state 73
    GT          shift, and go to state 74

    $default  reduce using rule 65 (ExprList)


State 87

   59 Expr: IDENTIFIER LPAR ExprList • RPAR

    RPAR  shift, and go to state 113


State 88

   64 Expr: LPAR Expr RPAR •

    $default  reduce using rule 64 (Expr)


State 89

   38 Expr: Expr • ASSIGN Expr
   39     | Expr • COMMA Expr
   39     | Expr COMMA Expr •
   40     | Expr • PLUS Expr
   41     | Expr • MINUS Expr
   42     | Expr • MUL Expr
   43     | Expr • DIV Expr
   44     | Expr • MOD Expr
   45     | Expr • OR Expr
   46     | Expr • AND Expr
   47     | Expr • BITWISEAND Expr
   48     | Expr • BITWISEOR Expr
   49     | Expr • BITWISEXOR Expr
   50     | Expr • EQ Expr
   51     | Expr • NE Expr
   52     | Expr • LE Expr
   53     | Expr • GE Expr
   54     | Expr • LT Expr
   55     | Expr • GT Expr

    COMMA       shift, and go to state 57
    ASSIGN      shift, and go to state 58
    PLUS        shift, and go to state 59
    MINUS       shift, and go to state 60
    MUL         shift, and go to state 61
    DIV         shift, and go to state 62
    MOD         shift, and go to state 63
    OR          shift, and go to state 64
    AND         shift, and go to state 65
    BITWISEAND  shift, and go to state 66
    BITWISEOR   shift, and go to state 67
    BITWISEXOR  shift, and go to state 68
    EQ          shift, and go to state 69
    NE          shift, and go to state 70
    LE          shift, and go to state 71
    GE          shift, and go to state 72
    LT          shift, and go to state 73
    GT          shift, and go to state 74

    COMMA       [reduce using rule 39 (Expr)]
    ASSIGN      [reduce using rule 39 (Expr)]
    PLUS        [reduce using rule 39 (Expr)]
    MINUS       [reduce using rule 39 (Expr)]
    MUL         [reduce using rule 39 (Expr)]
    DIV         [reduce using rule 39 (Expr)]
    MOD         [reduce using rule 39 (Expr)]
    OR          [reduce using rule 39 (Expr)]
    AND         [reduce using rule 39 (Expr)]
    BITWISEAND  [reduce using rule 39 (Expr)]
    BITWISEOR   [reduce using rule 39 (Expr)]
    BITWISEXOR  [reduce using rule 39 (Expr)]
    EQ          [reduce using rule 39 (Expr)]
    NE          [reduce using rule 39 (Expr)]
    LE          [reduce using rule 39 (Expr)]
    GE          [reduce using rule 39 (Expr)]
    LT          [reduce using rule 39 (Expr)]
    GT          [reduce using rule 39 (Expr)]
    $default    reduce using rule 39 (Expr)


State 90

   38 Expr: Expr • ASSIGN Expr
   38     | Expr ASSIGN Expr •
   39     | Expr • COMMA Expr
   40     | Expr • PLUS Expr
   41     | Expr • MINUS Expr
   42     | Expr • MUL Expr
   43     | Expr • DIV Expr
   44     | Expr • MOD Expr
   45     | Expr • OR Expr
   46     | Expr • AND Expr
   47     | Expr • BITWISEAND Expr
   48     | Expr • BITWISEOR Expr
   49     | Expr • BITWISEXOR Expr
   50     | Expr • EQ Expr
   51     | Expr • NE Expr
   52     | Expr • LE Expr
   53     | Expr • GE Expr
   54     | Expr • LT Expr
   55     | Expr • GT Expr

    COMMA       shift, and go to state 57
    ASSIGN      shift, and go to state 58
    PLUS        shift, and go to state 59
    MINUS       shift, and go to state 60
    MUL         shift, and go to state 61
    DIV         shift, and go to state 62
    MOD         shift, and go to state 63
    OR          shift, and go to state 64
    AND         shift, and go to state 65
    BITWISEAND  shift, and go to state 66
    BITWISEOR   shift, and go to state 67
    BITWISEXOR  shift, and go to state 68
    EQ          shift, and go to state 69
    NE          shift, and go to state 70
    LE          shift, and go to state 71
    GE          shift, and go to state 72
    LT          shift, and go to state 73
    GT          shift, and go to state 74

    COMMA       [reduce using rule 38 (Expr)]
    ASSIGN      [reduce using rule 38 (Expr)]
    PLUS        [reduce using rule 38 (Expr)]
    MINUS       [reduce using rule 38 (Expr)]
    MUL         [reduce using rule 38 (Expr)]
    DIV         [reduce using rule 38 (Expr)]
    MOD         [reduce using rule 38 (Expr)]
    OR          [reduce using rule 38 (Expr)]
    AND         [reduce using rule 38 (Expr)]
    BITWISEAND  [reduce using rule 38 (Expr)]
    BITWISEOR   [reduce using rule 38 (Expr)]
    BITWISEXOR  [reduce using rule 38 (Expr)]
    EQ          [reduce using rule 38 (Expr)]
    NE          [reduce using rule 38 (Expr)]
    LE          [reduce using rule 38 (Expr)]
    GE          [reduce using rule 38 (Expr)]
    LT          [reduce using rule 38 (Expr)]
    GT          [reduce using rule 38 (Expr)]
    $default    reduce using rule 38 (Expr)


State 91

   38 Expr: Expr • ASSIGN Expr
   39     | Expr • COMMA Expr
   40     | Expr • PLUS Expr
   40     | Expr PLUS Expr •
   41     | Expr • MINUS Expr
   42     | Expr • MUL Expr
   43     | Expr • DIV Expr
   44     | Expr • MOD Expr
   45     | Expr • OR Expr
   46     | Expr • AND Expr
   47     | Expr • BITWISEAND Expr
   48     | Expr • BITWISEOR Expr
   49     | Expr • BITWISEXOR Expr
   50     | Expr • EQ Expr
   51     | Expr • NE Expr
   52     | Expr • LE Expr
   53     | Expr • GE Expr
   54     | Expr • LT Expr
   55     | Expr • GT Expr

    COMMA       shift, and go to state 57
    ASSIGN      shift, and go to state 58
    PLUS        shift, and go to state 59
    MINUS       shift, and go to state 60
    MUL         shift, and go to state 61
    DIV         shift, and go to state 62
    MOD         shift, and go to state 63
    OR          shift, and go to state 64
    AND         shift, and go to state 65
    BITWISEAND  shift, and go to state 66
    BITWISEOR   shift, and go to state 67
    BITWISEXOR  shift, and go to state 68
    EQ          shift, and go to state 69
    NE          shift, and go to state 70
    LE          shift, and go to state 71
    GE          shift, and go to state 72
    LT          shift, and go to state 73
    GT          shift, and go to state 74

    COMMA       [reduce using rule 40 (Expr)]
    ASSIGN      [reduce using rule 40 (Expr)]
    PLUS        [reduce using rule 40 (Expr)]
    MINUS       [reduce using rule 40 (Expr)]
    MUL         [reduce using rule 40 (Expr)]
    DIV         [reduce using rule 40 (Expr)]
    MOD         [reduce using rule 40 (Expr)]
    OR          [reduce using rule 40 (Expr)]
    AND         [reduce using rule 40 (Expr)]
    BITWISEAND  [reduce using rule 40 (Expr)]
    BITWISEOR   [reduce using rule 40 (Expr)]
    BITWISEXOR  [reduce using rule 40 (Expr)]
    EQ          [reduce using rule 40 (Expr)]
    NE          [reduce using rule 40 (Expr)]
    LE          [reduce using rule 40 (Expr)]
    GE          [reduce using rule 40 (Expr)]
    LT          [reduce using rule 40 (Expr)]
    GT          [reduce using rule 40 (Expr)]
    $default    reduce using rule 40 (Expr)


State 92

   38 Expr: Expr • ASSIGN Expr
   39     | Expr • COMMA Expr
   40     | Expr • PLUS Expr
   41     | Expr • MINUS Expr
   41     | Expr MINUS Expr •
   42     | Expr • MUL Expr
   43     | Expr • DIV Expr
   44     | Expr • MOD Expr
   45     | Expr • OR Expr
   46     | Expr • AND Expr
   47     | Expr • BITWISEAND Expr
   48     | Expr • BITWISEOR Expr
   49     | Expr • BITWISEXOR Expr
   50     | Expr • EQ Expr
   51     | Expr • NE Expr
   52     | Expr • LE Expr
   53     | Expr • GE Expr
   54     | Expr • LT Expr
   55     | Expr • GT Expr

    COMMA       shift, and go to state 57
    ASSIGN      shift, and go to state 58
    PLUS        shift, and go to state 59
    MINUS       shift, and go to state 60
    MUL         shift, and go to state 61
    DIV         shift, and go to state 62
    MOD         shift, and go to state 63
    OR          shift, and go to state 64
    AND         shift, and go to state 65
    BITWISEAND  shift, and go to state 66
    BITWISEOR   shift, and go to state 67
    BITWISEXOR  shift, and go to state 68
    EQ          shift, and go to state 69
    NE          shift, and go to state 70
    LE          shift, and go to state 71
    GE          shift, and go to state 72
    LT          shift, and go to state 73
    GT          shift, and go to state 74

    COMMA       [reduce using rule 41 (Expr)]
    ASSIGN      [reduce using rule 41 (Expr)]
    PLUS        [reduce using rule 41 (Expr)]
    MINUS       [reduce using rule 41 (Expr)]
    MUL         [reduce using rule 41 (Expr)]
    DIV         [reduce using rule 41 (Expr)]
    MOD         [reduce using rule 41 (Expr)]
    OR          [reduce using rule 41 (Expr)]
    AND         [reduce using rule 41 (Expr)]
    BITWISEAND  [reduce using rule 41 (Expr)]
    BITWISEOR   [reduce using rule 41 (Expr)]
    BITWISEXOR  [reduce using rule 41 (Expr)]
    EQ          [reduce using rule 41 (Expr)]
    NE          [reduce using rule 41 (Expr)]
    LE          [reduce using rule 41 (Expr)]
    GE          [reduce using rule 41 (Expr)]
    LT          [reduce using rule 41 (Expr)]
    GT          [reduce using rule 41 (Expr)]
    $default    reduce using rule 41 (Expr)


State 93

   38 Expr: Expr • ASSIGN Expr
   39     | Expr • COMMA Expr
   40     | Expr • PLUS Expr
   41     | Expr • MINUS Expr
   42     | Expr • MUL Expr
   42     | Expr MUL Expr •
   43     | Expr • DIV Expr
   44     | Expr • MOD Expr
   45     | Expr • OR Expr
   46     | Expr • AND Expr
   47     | Expr • BITWISEAND Expr
   48     | Expr • BITWISEOR Expr
   49     | Expr • BITWISEXOR Expr
   50     | Expr • EQ Expr
   51     | Expr • NE Expr
   52     | Expr • LE Expr
   53     | Expr • GE Expr
   54     | Expr • LT Expr
   55     | Expr • GT Expr

    COMMA       shift, and go to state 57
    ASSIGN      shift, and go to state 58
    PLUS        shift, and go to state 59
    MINUS       shift, and go to state 60
    MUL         shift, and go to state 61
    DIV         shift, and go to state 62
    MOD         shift, and go to state 63
    OR          shift, and go to state 64
    AND         shift, and go to state 65
    BITWISEAND  shift, and go to state 66
    BITWISEOR   shift, and go to state 67
    BITWISEXOR  shift, and go to state 68
    EQ          shift, and go to state 69
    NE          shift, and go to state 70
    LE          shift, and go to state 71
    GE          shift, and go to state 72
    LT          shift, and go to state 73
    GT          shift, and go to state 74

    COMMA       [reduce using rule 42 (Expr)]
    ASSIGN      [reduce using rule 42 (Expr)]
    PLUS        [reduce using rule 42 (Expr)]
    MINUS       [reduce using rule 42 (Expr)]
    MUL         [reduce using rule 42 (Expr)]
    DIV         [reduce using rule 42 (Expr)]
    MOD         [reduce using rule 42 (Expr)]
    OR          [reduce using rule 42 (Expr)]
    AND         [reduce using rule 42 (Expr)]
    BITWISEAND  [reduce using rule 42 (Expr)]
    BITWISEOR   [reduce using rule 42 (Expr)]
    BITWISEXOR  [reduce using rule 42 (Expr)]
    EQ          [reduce using rule 42 (Expr)]
    NE          [reduce using rule 42 (Expr)]
    LE          [reduce using rule 42 (Expr)]
    GE          [reduce using rule 42 (Expr)]
    LT          [reduce using rule 42 (Expr)]
    GT          [reduce using rule 42 (Expr)]
    $default    reduce using rule 42 (Expr)


State 94

   38 Expr: Expr • ASSIGN Expr
   39     | Expr • COMMA Expr
   40     | Expr • PLUS Expr
   41     | Expr • MINUS Expr
   42     | Expr • MUL Expr
   43     | Expr • DIV Expr
   43     | Expr DIV Expr •
   44     | Expr • MOD Expr
   45     | Expr • OR Expr
   46     | Expr • AND Expr
   47     | Expr • BITWISEAND Expr
   48     | Expr • BITWISEOR Expr
   49     | Expr • BITWISEXOR Expr
   50     | Expr • EQ Expr
   51     | Expr • NE Expr
   52     | Expr • LE Expr
   53     | Expr • GE Expr
   54     | Expr • LT Expr
   55     | Expr • GT Expr

    COMMA       shift, and go to state 57
    ASSIGN      shift, and go to state 58
    PLUS        shift, and go to state 59
    MINUS       shift, and go to state 60
    MUL         shift, and go to state 61
    DIV         shift, and go to state 62
    MOD         shift, and go to state 63
    OR          shift, and go to state 64
    AND         shift, and go to state 65
    BITWISEAND  shift, and go to state 66
    BITWISEOR   shift, and go to state 67
    BITWISEXOR  shift, and go to state 68
    EQ          shift, and go to state 69
    NE          shift, and go to state 70
    LE          shift, and go to state 71
    GE          shift, and go to state 72
    LT          shift, and go to state 73
    GT          shift, and go to state 74

    COMMA       [reduce using rule 43 (Expr)]
    ASSIGN      [reduce using rule 43 (Expr)]
    PLUS        [reduce using rule 43 (Expr)]
    MINUS       [reduce using rule 43 (Expr)]
    MUL         [reduce using rule 43 (Expr)]
    DIV         [reduce using rule 43 (Expr)]
    MOD         [reduce using rule 43 (Expr)]
    OR          [reduce using rule 43 (Expr)]
    AND         [reduce using rule 43 (Expr)]
    BITWISEAND  [reduce using rule 43 (Expr)]
    BITWISEOR   [reduce using rule 43 (Expr)]
    BITWISEXOR  [reduce using rule 43 (Expr)]
    EQ          [reduce using rule 43 (Expr)]
    NE          [reduce using rule 43 (Expr)]
    LE          [reduce using rule 43 (Expr)]
    GE          [reduce using rule 43 (Expr)]
    LT          [reduce using rule 43 (Expr)]
    GT          [reduce using rule 43 (Expr)]
    $default    reduce using rule 43 (Expr)


State 95

   38 Expr: Expr • ASSIGN Expr
   39     | Expr • COMMA Expr
   40     | Expr • PLUS Expr
   41     | Expr • MINUS Expr
   42     | Expr • MUL Expr
   43     | Expr • DIV Expr
   44     | Expr • MOD Expr
   44     | Expr MOD Expr •
   45     | Expr • OR Expr
   46     | Expr • AND Expr
   47     | Expr • BITWISEAND Expr
   48     | Expr • BITWISEOR Expr
   49     | Expr • BITWISEXOR Expr
   50     | Expr • EQ Expr
   51     | Expr • NE Expr
   52     | Expr • LE Expr
   53     | Expr • GE Expr
   54     | Expr • LT Expr
   55     | Expr • GT Expr

    COMMA       shift, and go to state 57
    ASSIGN      shift, and go to state 58
    PLUS        shift, and go to state 59
    MINUS       shift, and go to state 60
    MUL         shift, and go to state 61
    DIV         shift, and go to state 62
    MOD         shift, and go to state 63
    OR          shift, and go to state 64
    AND         shift, and go to state 65
    BITWISEAND  shift, and go to state 66
    BITWISEOR   shift, and go to state 67
    BITWISEXOR  shift, and go to state 68
    EQ          shift, and go to state 69
    NE          shift, and go to state 70
    LE          shift, and go to state 71
    GE          shift, and go to state 72
    LT          shift, and go to state 73
    GT          shift, and go to state 74

    COMMA       [reduce using rule 44 (Expr)]
    ASSIGN      [reduce using rule 44 (Expr)]
    PLUS        [reduce using rule 44 (Expr)]
    MINUS       [reduce using rule 44 (Expr)]
    MUL         [reduce using rule 44 (Expr)]
    DIV         [reduce using rule 44 (Expr)]
    MOD         [reduce using rule 44 (Expr)]
    OR          [reduce using rule 44 (Expr)]
    AND         [reduce using rule 44 (Expr)]
    BITWISEAND  [reduce using rule 44 (Expr)]
    BITWISEOR   [reduce using rule 44 (Expr)]
    BITWISEXOR  [reduce using rule 44 (Expr)]
    EQ          [reduce using rule 44 (Expr)]
    NE          [reduce using rule 44 (Expr)]
    LE          [reduce using rule 44 (Expr)]
    GE          [reduce using rule 44 (Expr)]
    LT          [reduce using rule 44 (Expr)]
    GT          [reduce using rule 44 (Expr)]
    $default    reduce using rule 44 (Expr)


State 96

   38 Expr: Expr • ASSIGN Expr
   39     | Expr • COMMA Expr
   40     | Expr • PLUS Expr
   41     | Expr • MINUS Expr
   42     | Expr • MUL Expr
   43     | Expr • DIV Expr
   44     | Expr • MOD Expr
   45     | Expr • OR Expr
   45     | Expr OR Expr •
   46     | Expr • AND Expr
   47     | Expr • BITWISEAND Expr
   48     | Expr • BITWISEOR Expr
   49     | Expr • BITWISEXOR Expr
   50     | Expr • EQ Expr
   51     | Expr • NE Expr
   52     | Expr • LE Expr
   53     | Expr • GE Expr
   54     | Expr • LT Expr
   55     | Expr • GT Expr

    COMMA       shift, and go to state 57
    ASSIGN      shift, and go to state 58
    PLUS        shift, and go to state 59
    MINUS       shift, and go to state 60
    MUL         shift, and go to state 61
    DIV         shift, and go to state 62
    MOD         shift, and go to state 63
    OR          shift, and go to state 64
    AND         shift, and go to state 65
    BITWISEAND  shift, and go to state 66
    BITWISEOR   shift, and go to state 67
    BITWISEXOR  shift, and go to state 68
    EQ          shift, and go to state 69
    NE          shift, and go to state 70
    LE          shift, and go to state 71
    GE          shift, and go to state 72
    LT          shift, and go to state 73
    GT          shift, and go to state 74

    COMMA       [reduce using rule 45 (Expr)]
    ASSIGN      [reduce using rule 45 (Expr)]
    PLUS        [reduce using rule 45 (Expr)]
    MINUS       [reduce using rule 45 (Expr)]
    MUL         [reduce using rule 45 (Expr)]
    DIV         [reduce using rule 45 (Expr)]
    MOD         [reduce using rule 45 (Expr)]
    OR          [reduce using rule 45 (Expr)]
    AND         [reduce using rule 45 (Expr)]
    BITWISEAND  [reduce using rule 45 (Expr)]
    BITWISEOR   [reduce using rule 45 (Expr)]
    BITWISEXOR  [reduce using rule 45 (Expr)]
    EQ          [reduce using rule 45 (Expr)]
    NE          [reduce using rule 45 (Expr)]
    LE          [reduce using rule 45 (Expr)]
    GE          [reduce using rule 45 (Expr)]
    LT          [reduce using rule 45 (Expr)]
    GT          [reduce using rule 45 (Expr)]
    $default    reduce using rule 45 (Expr)


State 97

   38 Expr: Expr • ASSIGN Expr
   39     | Expr • COMMA Expr
   40     | Expr • PLUS Expr
   41     | Expr • MINUS Expr
   42     | Expr • MUL Expr
   43     | Expr • DIV Expr
   44     | Expr • MOD Expr
   45     | Expr • OR Expr
   46     | Expr • AND Expr
   46     | Expr AND Expr •
   47     | Expr • BITWISEAND Expr
   48     | Expr • BITWISEOR Expr
   49     | Expr • BITWISEXOR Expr
   50     | Expr • EQ Expr
   51     | Expr • NE Expr
   52     | Expr • LE Expr
   53     | Expr • GE Expr
   54     | Expr • LT Expr
   55     | Expr • GT Expr

    COMMA       shift, and go to state 57
    ASSIGN      shift, and go to state 58
    PLUS        shift, and go to state 59
    MINUS       shift, and go to state 60
    MUL         shift, and go to state 61
    DIV         shift, and go to state 62
    MOD         shift, and go to state 63
    OR          shift, and go to state 64
    AND         shift, and go to state 65
    BITWISEAND  shift, and go to state 66
    BITWISEOR   shift, and go to state 67
    BITWISEXOR  shift, and go to state 68
    EQ          shift, and go to state 69
    NE          shift, and go to state 70
    LE          shift, and go to state 71
    GE          shift, and go to state 72
    LT          shift, and go to state 73
    GT          shift, and go to state 74

    COMMA       [reduce using rule 46 (Expr)]
    ASSIGN      [reduce using rule 46 (Expr)]
    PLUS        [reduce using rule 46 (Expr)]
    MINUS       [reduce using rule 46 (Expr)]
    MUL         [reduce using rule 46 (Expr)]
    DIV         [reduce using rule 46 (Expr)]
    MOD         [reduce using rule 46 (Expr)]
    OR          [reduce using rule 46 (Expr)]
    AND         [reduce using rule 46 (Expr)]
    BITWISEAND  [reduce using rule 46 (Expr)]
    BITWISEOR   [reduce using rule 46 (Expr)]
    BITWISEXOR  [reduce using rule 46 (Expr)]
    EQ          [reduce using rule 46 (Expr)]
    NE          [reduce using rule 46 (Expr)]
    LE          [reduce using rule 46 (Expr)]
    GE          [reduce using rule 46 (Expr)]
    LT          [reduce using rule 46 (Expr)]
    GT          [reduce using rule 46 (Expr)]
    $default    reduce using rule 46 (Expr)


State 98

   38 Expr: Expr • ASSIGN Expr
   39     | Expr • COMMA Expr
   40     | Expr • PLUS Expr
   41     | Expr • MINUS Expr
   42     | Expr • MUL Expr
   43     | Expr • DIV Expr
   44     | Expr • MOD Expr
   45     | Expr • OR Expr
   46     | Expr • AND Expr
   47     | Expr • BITWISEAND Expr
   47     | Expr BITWISEAND Expr •
   48     | Expr • BITWISEOR Expr
   49     | Expr • BITWISEXOR Expr
   50     | Expr • EQ Expr
   51     | Expr • NE Expr
   52     | Expr • LE Expr
   53     | Expr • GE Expr
   54     | Expr • LT Expr
   55     | Expr • GT Expr

    COMMA       shift, and go to state 57
    ASSIGN      shift, and go to state 58
    PLUS        shift, and go to state 59
    MINUS       shift, and go to state 60
    MUL         shift, and go to state 61
    DIV         shift, and go to state 62
    MOD         shift, and go to state 63
    OR          shift, and go to state 64
    AND         shift, and go to state 65
    BITWISEAND  shift, and go to state 66
    BITWISEOR   shift, and go to state 67
    BITWISEXOR  shift, and go to state 68
    EQ          shift, and go to state 69
    NE          shift, and go to state 70
    LE          shift, and go to state 71
    GE          shift, and go to state 72
    LT          shift, and go to state 73
    GT          shift, and go to state 74

    COMMA       [reduce using rule 47 (Expr)]
    ASSIGN      [reduce using rule 47 (Expr)]
    PLUS        [reduce using rule 47 (Expr)]
    MINUS       [reduce using rule 47 (Expr)]
    MUL         [reduce using rule 47 (Expr)]
    DIV         [reduce using rule 47 (Expr)]
    MOD         [reduce using rule 47 (Expr)]
    OR          [reduce using rule 47 (Expr)]
    AND         [reduce using rule 47 (Expr)]
    BITWISEAND  [reduce using rule 47 (Expr)]
    BITWISEOR   [reduce using rule 47 (Expr)]
    BITWISEXOR  [reduce using rule 47 (Expr)]
    EQ          [reduce using rule 47 (Expr)]
    NE          [reduce using rule 47 (Expr)]
    LE          [reduce using rule 47 (Expr)]
    GE          [reduce using rule 47 (Expr)]
    LT          [reduce using rule 47 (Expr)]
    GT          [reduce using rule 47 (Expr)]
    $default    reduce using rule 47 (Expr)


State 99

   38 Expr: Expr • ASSIGN Expr
   39     | Expr • COMMA Expr
   40     | Expr • PLUS Expr
   41     | Expr • MINUS Expr
   42     | Expr • MUL Expr
   43     | Expr • DIV Expr
   44     | Expr • MOD Expr
   45     | Expr • OR Expr
   46     | Expr • AND Expr
   47     | Expr • BITWISEAND Expr
   48     | Expr • BITWISEOR Expr
   48     | Expr BITWISEOR Expr •
   49     | Expr • BITWISEXOR Expr
   50     | Expr • EQ Expr
   51     | Expr • NE Expr
   52     | Expr • LE Expr
   53     | Expr • GE Expr
   54     | Expr • LT Expr
   55     | Expr • GT Expr

    COMMA       shift, and go to state 57
    ASSIGN      shift, and go to state 58
    PLUS        shift, and go to state 59
    MINUS       shift, and go to state 60
    MUL         shift, and go to state 61
    DIV         shift, and go to state 62
    MOD         shift, and go to state 63
    OR          shift, and go to state 64
    AND         shift, and go to state 65
    BITWISEAND  shift, and go to state 66
    BITWISEOR   shift, and go to state 67
    BITWISEXOR  shift, and go to state 68
    EQ          shift, and go to state 69
    NE          shift, and go to state 70
    LE          shift, and go to state 71
    GE          shift, and go to state 72
    LT          shift, and go to state 73
    GT          shift, and go to state 74

    COMMA       [reduce using rule 48 (Expr)]
    ASSIGN      [reduce using rule 48 (Expr)]
    PLUS        [reduce using rule 48 (Expr)]
    MINUS       [reduce using rule 48 (Expr)]
    MUL         [reduce using rule 48 (Expr)]
    DIV         [reduce using rule 48 (Expr)]
    MOD         [reduce using rule 48 (Expr)]
    OR          [reduce using rule 48 (Expr)]
    AND         [reduce using rule 48 (Expr)]
    BITWISEAND  [reduce using rule 48 (Expr)]
    BITWISEOR   [reduce using rule 48 (Expr)]
    BITWISEXOR  [reduce using rule 48 (Expr)]
    EQ          [reduce using rule 48 (Expr)]
    NE          [reduce using rule 48 (Expr)]
    LE          [reduce using rule 48 (Expr)]
    GE          [reduce using rule 48 (Expr)]
    LT          [reduce using rule 48 (Expr)]
    GT          [reduce using rule 48 (Expr)]
    $default    reduce using rule 48 (Expr)


State 100

   38 Expr: Expr • ASSIGN Expr
   39     | Expr • COMMA Expr
   40     | Expr • PLUS Expr
   41     | Expr • MINUS Expr
   42     | Expr • MUL Expr
   43     | Expr • DIV Expr
   44     | Expr • MOD Expr
   45     | Expr • OR Expr
   46     | Expr • AND Expr
   47     | Expr • BITWISEAND Expr
   48     | Expr • BITWISEOR Expr
   49     | Expr • BITWISEXOR Expr
   49     | Expr BITWISEXOR Expr •
   50     | Expr • EQ Expr
   51     | Expr • NE Expr
   52     | Expr • LE Expr
   53     | Expr • GE Expr
   54     | Expr • LT Expr
   55     | Expr • GT Expr

    COMMA       shift, and go to state 57
    ASSIGN      shift, and go to state 58
    PLUS        shift, and go to state 59
    MINUS       shift, and go to state 60
    MUL         shift, and go to state 61
    DIV         shift, and go to state 62
    MOD         shift, and go to state 63
    OR          shift, and go to state 64
    AND         shift, and go to state 65
    BITWISEAND  shift, and go to state 66
    BITWISEOR   shift, and go to state 67
    BITWISEXOR  shift, and go to state 68
    EQ          shift, and go to state 69
    NE          shift, and go to state 70
    LE          shift, and go to state 71
    GE          shift, and go to state 72
    LT          shift, and go to state 73
    GT          shift, and go to state 74

    COMMA       [reduce using rule 49 (Expr)]
    ASSIGN      [reduce using rule 49 (Expr)]
    PLUS        [reduce using rule 49 (Expr)]
    MINUS       [reduce using rule 49 (Expr)]
    MUL         [reduce using rule 49 (Expr)]
    DIV         [reduce using rule 49 (Expr)]
    MOD         [reduce using rule 49 (Expr)]
    OR          [reduce using rule 49 (Expr)]
    AND         [reduce using rule 49 (Expr)]
    BITWISEAND  [reduce using rule 49 (Expr)]
    BITWISEOR   [reduce using rule 49 (Expr)]
    BITWISEXOR  [reduce using rule 49 (Expr)]
    EQ          [reduce using rule 49 (Expr)]
    NE          [reduce using rule 49 (Expr)]
    LE          [reduce using rule 49 (Expr)]
    GE          [reduce using rule 49 (Expr)]
    LT          [reduce using rule 49 (Expr)]
    GT          [reduce using rule 49 (Expr)]
    $default    reduce using rule 49 (Expr)


State 101

   38 Expr: Expr • ASSIGN Expr
   39     | Expr • COMMA Expr
   40     | Expr • PLUS Expr
   41     | Expr • MINUS Expr
   42     | Expr • MUL Expr
   43     | Expr • DIV Expr
   44     | Expr • MOD Expr
   45     | Expr • OR Expr
   46     | Expr • AND Expr
   47     | Expr • BITWISEAND Expr
   48     | Expr • BITWISEOR Expr
   49     | Expr • BITWISEXOR Expr
   50     | Expr • EQ Expr
   50     | Expr EQ Expr •
   51     | Expr • NE Expr
   52     | Expr • LE Expr
   53     | Expr • GE Expr
   54     | Expr • LT Expr
   55     | Expr • GT Expr

    COMMA       shift, and go to state 57
    ASSIGN      shift, and go to state 58
    PLUS        shift, and go to state 59
    MINUS       shift, and go to state 60
    MUL         shift, and go to state 61
    DIV         shift, and go to state 62
    MOD         shift, and go to state 63
    OR          shift, and go to state 64
    AND         shift, and go to state 65
    BITWISEAND  shift, and go to state 66
    BITWISEOR   shift, and go to state 67
    BITWISEXOR  shift, and go to state 68
    EQ          shift, and go to state 69
    NE          shift, and go to state 70
    LE          shift, and go to state 71
    GE          shift, and go to state 72
    LT          shift, and go to state 73
    GT          shift, and go to state 74

    COMMA       [reduce using rule 50 (Expr)]
    ASSIGN      [reduce using rule 50 (Expr)]
    PLUS        [reduce using rule 50 (Expr)]
    MINUS       [reduce using rule 50 (Expr)]
    MUL         [reduce using rule 50 (Expr)]
    DIV         [reduce using rule 50 (Expr)]
    MOD         [reduce using rule 50 (Expr)]
    OR          [reduce using rule 50 (Expr)]
    AND         [reduce using rule 50 (Expr)]
    BITWISEAND  [reduce using rule 50 (Expr)]
    BITWISEOR   [reduce using rule 50 (Expr)]
    BITWISEXOR  [reduce using rule 50 (Expr)]
    EQ          [reduce using rule 50 (Expr)]
    NE          [reduce using rule 50 (Expr)]
    LE          [reduce using rule 50 (Expr)]
    GE          [reduce using rule 50 (Expr)]
    LT          [reduce using rule 50 (Expr)]
    GT          [reduce using rule 50 (Expr)]
    $default    reduce using rule 50 (Expr)


State 102

   38 Expr: Expr • ASSIGN Expr
   39     | Expr • COMMA Expr
   40     | Expr • PLUS Expr
   41     | Expr • MINUS Expr
   42     | Expr • MUL Expr
   43     | Expr • DIV Expr
   44     | Expr • MOD Expr
   45     | Expr • OR Expr
   46     | Expr • AND Expr
   47     | Expr • BITWISEAND Expr
   48     | Expr • BITWISEOR Expr
   49     | Expr • BITWISEXOR Expr
   50     | Expr • EQ Expr
   51     | Expr • NE Expr
   51     | Expr NE Expr •
   52     | Expr • LE Expr
   53     | Expr • GE Expr
   54     | Expr • LT Expr
   55     | Expr • GT Expr

    COMMA       shift, and go to state 57
    ASSIGN      shift, and go to state 58
    PLUS        shift, and go to state 59
    MINUS       shift, and go to state 60
    MUL         shift, and go to state 61
    DIV         shift, and go to state 62
    MOD         shift, and go to state 63
    OR          shift, and go to state 64
    AND         shift, and go to state 65
    BITWISEAND  shift, and go to state 66
    BITWISEOR   shift, and go to state 67
    BITWISEXOR  shift, and go to state 68
    EQ          shift, and go to state 69
    NE          shift, and go to state 70
    LE          shift, and go to state 71
    GE          shift, and go to state 72
    LT          shift, and go to state 73
    GT          shift, and go to state 74

    COMMA       [reduce using rule 51 (Expr)]
    ASSIGN      [reduce using rule 51 (Expr)]
    PLUS        [reduce using rule 51 (Expr)]
    MINUS       [reduce using rule 51 (Expr)]
    MUL         [reduce using rule 51 (Expr)]
    DIV         [reduce using rule 51 (Expr)]
    MOD         [reduce using rule 51 (Expr)]
    OR          [reduce using rule 51 (Expr)]
    AND         [reduce using rule 51 (Expr)]
    BITWISEAND  [reduce using rule 51 (Expr)]
    BITWISEOR   [reduce using rule 51 (Expr)]
    BITWISEXOR  [reduce using rule 51 (Expr)]
    EQ          [reduce using rule 51 (Expr)]
    NE          [reduce using rule 51 (Expr)]
    LE          [reduce using rule 51 (Expr)]
    GE          [reduce using rule 51 (Expr)]
    LT          [reduce using rule 51 (Expr)]
    GT          [reduce using rule 51 (Expr)]
    $default    reduce using rule 51 (Expr)


State 103

   38 Expr: Expr • ASSIGN Expr
   39     | Expr • COMMA Expr
   40     | Expr • PLUS Expr
   41     | Expr • MINUS Expr
   42     | Expr • MUL Expr
   43     | Expr • DIV Expr
   44     | Expr • MOD Expr
   45     | Expr • OR Expr
   46     | Expr • AND Expr
   47     | Expr • BITWISEAND Expr
   48     | Expr • BITWISEOR Expr
   49     | Expr • BITWISEXOR Expr
   50     | Expr • EQ Expr
   51     | Expr • NE Expr
   52     | Expr • LE Expr
   52     | Expr LE Expr •
   53     | Expr • GE Expr
   54     | Expr • LT Expr
   55     | Expr • GT Expr

    COMMA       shift, and go to state 57
    ASSIGN      shift, and go to state 58
    PLUS        shift, and go to state 59
    MINUS       shift, and go to state 60
    MUL         shift, and go to state 61
    DIV         shift, and go to state 62
    MOD         shift, and go to state 63
    OR          shift, and go to state 64
    AND         shift, and go to state 65
    BITWISEAND  shift, and go to state 66
    BITWISEOR   shift, and go to state 67
    BITWISEXOR  shift, and go to state 68
    EQ          shift, and go to state 69
    NE          shift, and go to state 70
    LE          shift, and go to state 71
    GE          shift, and go to state 72
    LT          shift, and go to state 73
    GT          shift, and go to state 74

    COMMA       [reduce using rule 52 (Expr)]
    ASSIGN      [reduce using rule 52 (Expr)]
    PLUS        [reduce using rule 52 (Expr)]
    MINUS       [reduce using rule 52 (Expr)]
    MUL         [reduce using rule 52 (Expr)]
    DIV         [reduce using rule 52 (Expr)]
    MOD         [reduce using rule 52 (Expr)]
    OR          [reduce using rule 52 (Expr)]
    AND         [reduce using rule 52 (Expr)]
    BITWISEAND  [reduce using rule 52 (Expr)]
    BITWISEOR   [reduce using rule 52 (Expr)]
    BITWISEXOR  [reduce using rule 52 (Expr)]
    EQ          [reduce using rule 52 (Expr)]
    NE          [reduce using rule 52 (Expr)]
    LE          [reduce using rule 52 (Expr)]
    GE          [reduce using rule 52 (Expr)]
    LT          [reduce using rule 52 (Expr)]
    GT          [reduce using rule 52 (Expr)]
    $default    reduce using rule 52 (Expr)


State 104

   38 Expr: Expr • ASSIGN Expr
   39     | Expr • COMMA Expr
   40     | Expr • PLUS Expr
   41     | Expr • MINUS Expr
   42     | Expr • MUL Expr
   43     | Expr • DIV Expr
   44     | Expr • MOD Expr
   45     | Expr • OR Expr
   46     | Expr • AND Expr
   47     | Expr • BITWISEAND Expr
   48     | Expr • BITWISEOR Expr
   49     | Expr • BITWISEXOR Expr
   50     | Expr • EQ Expr
   51     | Expr • NE Expr
   52     | Expr • LE Expr
   53     | Expr • GE Expr
   53     | Expr GE Expr •
   54     | Expr • LT Expr
   55     | Expr • GT Expr

    COMMA       shift, and go to state 57
    ASSIGN      shift, and go to state 58
    PLUS        shift, and go to state 59
    MINUS       shift, and go to state 60
    MUL         shift, and go to state 61
    DIV         shift, and go to state 62
    MOD         shift, and go to state 63
    OR          shift, and go to state 64
    AND         shift, and go to state 65
    BITWISEAND  shift, and go to state 66
    BITWISEOR   shift, and go to state 67
    BITWISEXOR  shift, and go to state 68
    EQ          shift, and go to state 69
    NE          shift, and go to state 70
    LE          shift, and go to state 71
    GE          shift, and go to state 72
    LT          shift, and go to state 73
    GT          shift, and go to state 74

    COMMA       [reduce using rule 53 (Expr)]
    ASSIGN      [reduce using rule 53 (Expr)]
    PLUS        [reduce using rule 53 (Expr)]
    MINUS       [reduce using rule 53 (Expr)]
    MUL         [reduce using rule 53 (Expr)]
    DIV         [reduce using rule 53 (Expr)]
    MOD         [reduce using rule 53 (Expr)]
    OR          [reduce using rule 53 (Expr)]
    AND         [reduce using rule 53 (Expr)]
    BITWISEAND  [reduce using rule 53 (Expr)]
    BITWISEOR   [reduce using rule 53 (Expr)]
    BITWISEXOR  [reduce using rule 53 (Expr)]
    EQ          [reduce using rule 53 (Expr)]
    NE          [reduce using rule 53 (Expr)]
    LE          [reduce using rule 53 (Expr)]
    GE          [reduce using rule 53 (Expr)]
    LT          [reduce using rule 53 (Expr)]
    GT          [reduce using rule 53 (Expr)]
    $default    reduce using rule 53 (Expr)


State 105

   38 Expr: Expr • ASSIGN Expr
   39     | Expr • COMMA Expr
   40     | Expr • PLUS Expr
   41     | Expr • MINUS Expr
   42     | Expr • MUL Expr
   43     | Expr • DIV Expr
   44     | Expr • MOD Expr
   45     | Expr • OR Expr
   46     | Expr • AND Expr
   47     | Expr • BITWISEAND Expr
   48     | Expr • BITWISEOR Expr
   49     | Expr • BITWISEXOR Expr
   50     | Expr • EQ Expr
   51     | Expr • NE Expr
   52     | Expr • LE Expr
   53     | Expr • GE Expr
   54     | Expr • LT Expr
   54     | Expr LT Expr •
   55     | Expr • GT Expr

    COMMA       shift, and go to state 57
    ASSIGN      shift, and go to state 58
    PLUS        shift, and go to state 59
    MINUS       shift, and go to state 60
    MUL         shift, and go to state 61
    DIV         shift, and go to state 62
    MOD         shift, and go to state 63
    OR          shift, and go to state 64
    AND         shift, and go to state 65
    BITWISEAND  shift, and go to state 66
    BITWISEOR   shift, and go to state 67
    BITWISEXOR  shift, and go to state 68
    EQ          shift, and go to state 69
    NE          shift, and go to state 70
    LE          shift, and go to state 71
    GE          shift, and go to state 72
    LT          shift, and go to state 73
    GT          shift, and go to state 74

    COMMA       [reduce using rule 54 (Expr)]
    ASSIGN      [reduce using rule 54 (Expr)]
    PLUS        [reduce using rule 54 (Expr)]
    MINUS       [reduce using rule 54 (Expr)]
    MUL         [reduce using rule 54 (Expr)]
    DIV         [reduce using rule 54 (Expr)]
    MOD         [reduce using rule 54 (Expr)]
    OR          [reduce using rule 54 (Expr)]
    AND         [reduce using rule 54 (Expr)]
    BITWISEAND  [reduce using rule 54 (Expr)]
    BITWISEOR   [reduce using rule 54 (Expr)]
    BITWISEXOR  [reduce using rule 54 (Expr)]
    EQ          [reduce using rule 54 (Expr)]
    NE          [reduce using rule 54 (Expr)]
    LE          [reduce using rule 54 (Expr)]
    GE          [reduce using rule 54 (Expr)]
    LT          [reduce using rule 54 (Expr)]
    GT          [reduce using rule 54 (Expr)]
    $default    reduce using rule 54 (Expr)


State 106

   38 Expr: Expr • ASSIGN Expr
   39     | Expr • COMMA Expr
   40     | Expr • PLUS Expr
   41     | Expr • MINUS Expr
   42     | Expr • MUL Expr
   43     | Expr • DIV Expr
   44     | Expr • MOD Expr
   45     | Expr • OR Expr
   46     | Expr • AND Expr
   47     | Expr • BITWISEAND Expr
   48     | Expr • BITWISEOR Expr
   49     | Expr • BITWISEXOR Expr
   50     | Expr • EQ Expr
   51     | Expr • NE Expr
   52     | Expr • LE Expr
   53     | Expr • GE Expr
   54     | Expr • LT Expr
   55     | Expr • GT Expr
   55     | Expr GT Expr •

    COMMA       shift, and go to state 57
    ASSIGN      shift, and go to state 58
    PLUS        shift, and go to state 59
    MINUS       shift, and go to state 60
    MUL         shift, and go to state 61
    DIV         shift, and go to state 62
    MOD         shift, and go to state 63
    OR          shift, and go to state 64
    AND         shift, and go to state 65
    BITWISEAND  shift, and go to state 66
    BITWISEOR   shift, and go to state 67
    BITWISEXOR  shift, and go to state 68
    EQ          shift, and go to state 69
    NE          shift, and go to state 70
    LE          shift, and go to state 71
    GE          shift, and go to state 72
    LT          shift, and go to state 73
    GT          shift, and go to state 74

    COMMA       [reduce using rule 55 (Expr)]
    ASSIGN      [reduce using rule 55 (Expr)]
    PLUS        [reduce using rule 55 (Expr)]
    MINUS       [reduce using rule 55 (Expr)]
    MUL         [reduce using rule 55 (Expr)]
    DIV         [reduce using rule 55 (Expr)]
    MOD         [reduce using rule 55 (Expr)]
    OR          [reduce using rule 55 (Expr)]
    AND         [reduce using rule 55 (Expr)]
    BITWISEAND  [reduce using rule 55 (Expr)]
    BITWISEOR   [reduce using rule 55 (Expr)]
    BITWISEXOR  [reduce using rule 55 (Expr)]
    EQ          [reduce using rule 55 (Expr)]
    NE          [reduce using rule 55 (Expr)]
    LE          [reduce using rule 55 (Expr)]
    GE          [reduce using rule 55 (Expr)]
    LT          [reduce using rule 55 (Expr)]
    GT          [reduce using rule 55 (Expr)]
    $default    reduce using rule 55 (Expr)


State 107

   37 Statements: Statement Statements •

    $default  reduce using rule 37 (Statements)


State 108

   30 Statement: LBRACE Statements RBRACE •

    $default  reduce using rule 30 (Statement)


State 109

   31 Statement: IF LPAR Expr • RPAR Statement LOWER_THAN_ELSE
   32          | IF LPAR Expr • RPAR Statement ELSE Statement
   38 Expr: Expr • ASSIGN Expr
   39     | Expr • COMMA Expr
   40     | Expr • PLUS Expr
   41     | Expr • MINUS Expr
   42     | Expr • MUL Expr
   43     | Expr • DIV Expr
   44     | Expr • MOD Expr
   45     | Expr • OR Expr
   46     | Expr • AND Expr
   47     | Expr • BITWISEAND Expr
   48     | Expr • BITWISEOR Expr
   49     | Expr • BITWISEXOR Expr
   50     | Expr • EQ Expr
   51     | Expr • NE Expr
   52     | Expr • LE Expr
   53     | Expr • GE Expr
   54     | Expr • LT Expr
   55     | Expr • GT Expr

    RPAR        shift, and go to state 114
    COMMA       shift, and go to state 57
    ASSIGN      shift, and go to state 58
    PLUS        shift, and go to state 59
    MINUS       shift, and go to state 60
    MUL         shift, and go to state 61
    DIV         shift, and go to state 62
    MOD         shift, and go to state 63
    OR          shift, and go to state 64
    AND         shift, and go to state 65
    BITWISEAND  shift, and go to state 66
    BITWISEOR   shift, and go to state 67
    BITWISEXOR  shift, and go to state 68
    EQ          shift, and go to state 69
    NE          shift, and go to state 70
    LE          shift, and go to state 71
    GE          shift, and go to state 72
    LT          shift, and go to state 73
    GT          shift, and go to state 74


State 110

   33 Statement: WHILE LPAR Expr • RPAR Statement
   38 Expr: Expr • ASSIGN Expr
   39     | Expr • COMMA Expr
   40     | Expr • PLUS Expr
   41     | Expr • MINUS Expr
   42     | Expr • MUL Expr
   43     | Expr • DIV Expr
   44     | Expr • MOD Expr
   45     | Expr • OR Expr
   46     | Expr • AND Expr
   47     | Expr • BITWISEAND Expr
   48     | Expr • BITWISEOR Expr
   49     | Expr • BITWISEXOR Expr
   50     | Expr • EQ Expr
   51     | Expr • NE Expr
   52     | Expr • LE Expr
   53     | Expr • GE Expr
   54     | Expr • LT Expr
   55     | Expr • GT Expr

    RPAR        shift, and go to state 115
    COMMA       shift, and go to state 57
    ASSIGN      shift, and go to state 58
    PLUS        shift, and go to state 59
    MINUS       shift, and go to state 60
    MUL         shift, and go to state 61
    DIV         shift, and go to state 62
    MOD         shift, and go to state 63
    OR          shift, and go to state 64
    AND         shift, and go to state 65
    BITWISEAND  shift, and go to state 66
    BITWISEOR   shift, and go to state 67
    BITWISEXOR  shift, and go to state 68
    EQ          shift, and go to state 69
    NE          shift, and go to state 70
    LE          shift, and go to state 71
    GE          shift, and go to state 72
    LT          shift, and go to state 73
    GT          shift, and go to state 74


State 111

   35 Statement: RETURN Expr SEMI •

    $default  reduce using rule 35 (Statement)


State 112

   39 Expr: Expr COMMA • Expr
   66 ExprList: Expr COMMA • ExprList

    IDENTIFIER  shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    DECIMAL     shift, and go to state 32
    LPAR        shift, and go to state 33
    PLUS        shift, and go to state 34
    MINUS       shift, and go to state 35
    NOT         shift, and go to state 36

    Expr      go to state 116
    ExprList  go to state 117


State 113

   59 Expr: IDENTIFIER LPAR ExprList RPAR •

    $default  reduce using rule 59 (Expr)


State 114

   31 Statement: IF LPAR Expr RPAR • Statement LOWER_THAN_ELSE
   32          | IF LPAR Expr RPAR • Statement ELSE Statement

    IDENTIFIER  shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    DECIMAL     shift, and go to state 32
    LPAR        shift, and go to state 33
    LBRACE      shift, and go to state 38
    PLUS        shift, and go to state 34
    MINUS       shift, and go to state 35
    NOT         shift, and go to state 36
    IF          shift, and go to state 39
    WHILE       shift, and go to state 40
    RETURN      shift, and go to state 41

    Statement  go to state 118
    Expr       go to state 46


State 115

   33 Statement: WHILE LPAR Expr RPAR • Statement

    IDENTIFIER  shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    DECIMAL     shift, and go to state 32
    LPAR        shift, and go to state 33
    LBRACE      shift, and go to state 38
    PLUS        shift, and go to state 34
    MINUS       shift, and go to state 35
    NOT         shift, and go to state 36
    IF          shift, and go to state 39
    WHILE       shift, and go to state 40
    RETURN      shift, and go to state 41

    Statement  go to state 119
    Expr       go to state 46


State 116

   38 Expr: Expr • ASSIGN Expr
   39     | Expr • COMMA Expr
   39     | Expr COMMA Expr •
   40     | Expr • PLUS Expr
   41     | Expr • MINUS Expr
   42     | Expr • MUL Expr
   43     | Expr • DIV Expr
   44     | Expr • MOD Expr
   45     | Expr • OR Expr
   46     | Expr • AND Expr
   47     | Expr • BITWISEAND Expr
   48     | Expr • BITWISEOR Expr
   49     | Expr • BITWISEXOR Expr
   50     | Expr • EQ Expr
   51     | Expr • NE Expr
   52     | Expr • LE Expr
   53     | Expr • GE Expr
   54     | Expr • LT Expr
   55     | Expr • GT Expr
   65 ExprList: Expr •
   66         | Expr • COMMA ExprList

    COMMA       shift, and go to state 112
    ASSIGN      shift, and go to state 58
    PLUS        shift, and go to state 59
    MINUS       shift, and go to state 60
    MUL         shift, and go to state 61
    DIV         shift, and go to state 62
    MOD         shift, and go to state 63
    OR          shift, and go to state 64
    AND         shift, and go to state 65
    BITWISEAND  shift, and go to state 66
    BITWISEOR   shift, and go to state 67
    BITWISEXOR  shift, and go to state 68
    EQ          shift, and go to state 69
    NE          shift, and go to state 70
    LE          shift, and go to state 71
    GE          shift, and go to state 72
    LT          shift, and go to state 73
    GT          shift, and go to state 74

    RPAR        reduce using rule 39 (Expr)
    RPAR        [reduce using rule 65 (ExprList)]
    COMMA       [reduce using rule 39 (Expr)]
    ASSIGN      [reduce using rule 39 (Expr)]
    PLUS        [reduce using rule 39 (Expr)]
    MINUS       [reduce using rule 39 (Expr)]
    MUL         [reduce using rule 39 (Expr)]
    DIV         [reduce using rule 39 (Expr)]
    MOD         [reduce using rule 39 (Expr)]
    OR          [reduce using rule 39 (Expr)]
    AND         [reduce using rule 39 (Expr)]
    BITWISEAND  [reduce using rule 39 (Expr)]
    BITWISEOR   [reduce using rule 39 (Expr)]
    BITWISEXOR  [reduce using rule 39 (Expr)]
    EQ          [reduce using rule 39 (Expr)]
    NE          [reduce using rule 39 (Expr)]
    LE          [reduce using rule 39 (Expr)]
    GE          [reduce using rule 39 (Expr)]
    LT          [reduce using rule 39 (Expr)]
    GT          [reduce using rule 39 (Expr)]
    $default    reduce using rule 39 (Expr)


State 117

   66 ExprList: Expr COMMA ExprList •

    $default  reduce using rule 66 (ExprList)


State 118

   31 Statement: IF LPAR Expr RPAR Statement • LOWER_THAN_ELSE
   32          | IF LPAR Expr RPAR Statement • ELSE Statement

    ELSE             shift, and go to state 120
    LOWER_THAN_ELSE  shift, and go to state 121


State 119

   33 Statement: WHILE LPAR Expr RPAR Statement •

    $default  reduce using rule 33 (Statement)


State 120

   32 Statement: IF LPAR Expr RPAR Statement ELSE • Statement

    IDENTIFIER  shift, and go to state 29
    NATURAL     shift, and go to state 30
    CHRLIT      shift, and go to state 31
    DECIMAL     shift, and go to state 32
    LPAR        shift, and go to state 33
    LBRACE      shift, and go to state 38
    PLUS        shift, and go to state 34
    MINUS       shift, and go to state 35
    NOT         shift, and go to state 36
    IF          shift, and go to state 39
    WHILE       shift, and go to state 40
    RETURN      shift, and go to state 41

    Statement  go to state 122
    Expr       go to state 46


State 121

   31 Statement: IF LPAR Expr RPAR Statement LOWER_THAN_ELSE •

    $default  reduce using rule 31 (Statement)


State 122

   32 Statement: IF LPAR Expr RPAR Statement ELSE Statement •

    $default  reduce using rule 32 (Statement)
